<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>TaoLiu-Blog</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-06-23T03:23:07.070Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Tao Liu</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ElasticSearch-Springboot</title>
    <link href="http://example.com/blog/%E5%B7%A5%E5%85%B7%E5%92%8C%E4%B8%AD%E9%97%B4%E4%BB%B6/%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E6%8A%80%E6%9C%AF/ElasticSearch/ElasticSearch-Springboot/"/>
    <id>http://example.com/blog/%E5%B7%A5%E5%85%B7%E5%92%8C%E4%B8%AD%E9%97%B4%E4%BB%B6/%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E6%8A%80%E6%9C%AF/ElasticSearch/ElasticSearch-Springboot/</id>
    <published>2022-01-02T06:08:20.000Z</published>
    <updated>2022-06-23T03:23:07.070Z</updated>
    
    <content type="html"><![CDATA[<h2 id="版本问题"><a href="#版本问题" class="headerlink" title="版本问题"></a>版本问题</h2><p>springboot 有一个 spring data 组件，可以用来连接各种数据源。 用来连接 elasticsearch 的是 spring-data-elasticsearch。<br><img src="/../../../../assets/png/ElasticSearch/%E5%AF%B9%E5%BA%94Springboot%E7%89%88%E6%9C%AC.png" alt="对应Springboot版本"></p><h2 id="启动-elasticsearch"><a href="#启动-elasticsearch" class="headerlink" title="启动 elasticsearch"></a>启动 elasticsearch</h2><p>运行elasticsearch.bat, 启动后, 可以看到左上角的版本号。</p><h2 id="创建-springboot-项目"><a href="#创建-springboot-项目" class="headerlink" title="创建 springboot 项目:"></a>创建 springboot 项目:</h2><h3 id="pom-xml"><a href="#pom-xml" class="headerlink" title="pom.xml"></a>pom.xml</h3><p>各种jar包，主要是 spring-boot-starter-data-elastisearch 这个 jar包。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.howToElasticSearch<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springboot<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>springboot<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">description</span>&gt;</span>springboot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line">   </span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.9.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-tomcat<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.8.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- servlet依赖. --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span>               </span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                     <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                     <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- tomcat的支持.--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.tomcat.embed<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tomcat-embed-jasper<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span>                </span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>    </span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span> <span class="comment">&lt;!-- 这个需要为 true 热部署才有效 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">         </span><br><span class="line">        <span class="comment">&lt;!-- mysql--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.21<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">         </span><br><span class="line">         <span class="comment">&lt;!-- elastisearch依赖包 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-elasticsearch<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>       </span><br><span class="line">         </span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Category-java"><a href="#Category-java" class="headerlink" title="Category.java"></a>Category.java</h3><p>Category 实体类，其中的 <code>@Document</code>就表明了要连接到 ElasticSearch 的哪个索引和哪个 type 上</p><p>@Document(indexName &#x3D; “howToElasticSearch”,type &#x3D; “category”)<br>索引相当于就是数据库，type 相当于就是表  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.peach.springboot.pojo;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> org.springframework.data.elasticsearch.annotations.Document;</span><br><span class="line"> </span><br><span class="line"><span class="meta">@Document(indexName = &quot;howToElasticSearch&quot;,type = &quot;category&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Category</span> &#123;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setId</span><span class="params">(<span class="type">int</span> id)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">     </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="控制类：CategoryController-java"><a href="#控制类：CategoryController-java" class="headerlink" title="控制类：CategoryController.java"></a>控制类：CategoryController.java</h3><p>控制类提供 CRUD 一套</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.peach.springboot.web;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.index.query.QueryBuilders;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilder;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.index.query.functionscore.ScoreFunctionBuilders;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Page;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.PageRequest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Sort;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.elasticsearch.core.query.NativeSearchQueryBuilder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.elasticsearch.core.query.SearchQuery;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.peach.springboot.dao.CategoryDAO;</span><br><span class="line"><span class="keyword">import</span> cn.peach.springboot.pojo.Category;</span><br><span class="line">  </span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CategoryController</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span> CategoryDAO categoryDAO;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//每页数量</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/listCategory&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">listCategory</span><span class="params">(Model m,<span class="meta">@RequestParam(value = &quot;start&quot;, defaultValue = &quot;0&quot;)</span> <span class="type">int</span> start,<span class="meta">@RequestParam(value = &quot;size&quot;, defaultValue = &quot;5&quot;)</span> <span class="type">int</span> size)</span>&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">query</span> <span class="operator">=</span> <span class="string">&quot;商品&quot;</span>; <span class="comment">//查询条件，但是并未使用，放在这里，为的是将来使用，方便参考，知道如何用</span></span><br><span class="line">        SearchQuery searchQuery=getEntitySearchQuery(start,size,query);</span><br><span class="line">        Page&lt;Category&gt; page = categoryDAO.search(searchQuery);</span><br><span class="line">        m.addAttribute(<span class="string">&quot;page&quot;</span>, page);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;listCategory&quot;</span>;        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> SearchQuery <span class="title function_">getEntitySearchQuery</span><span class="params">(<span class="type">int</span> start, <span class="type">int</span> size, String searchContent)</span> &#123;</span><br><span class="line">        <span class="type">FunctionScoreQueryBuilder</span> <span class="variable">functionScoreQueryBuilder</span> <span class="operator">=</span> QueryBuilders.functionScoreQuery()</span><br><span class="line">                .add(QueryBuilders.matchAllQuery(), <span class="comment">//查询所有</span></span><br><span class="line">                        ScoreFunctionBuilders.weightFactorFunction(<span class="number">100</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">//                查询条件，但是并未使用，放在这里，为的是将来使用，方便参考，知道如何用</span></span><br><span class="line"><span class="comment">//                .add(QueryBuilders.matchPhraseQuery(&quot;name&quot;, searchContent),</span></span><br><span class="line"><span class="comment">//                ScoreFunctionBuilders.weightFactorFunction(100))</span></span><br><span class="line">                <span class="comment">//设置权重分 求和模式</span></span><br><span class="line">                .scoreMode(<span class="string">&quot;sum&quot;</span>)</span><br><span class="line">                <span class="comment">//设置权重分最低分</span></span><br><span class="line">                .setMinScore(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置分页</span></span><br><span class="line">        <span class="type">Sort</span> <span class="variable">sort</span>  <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Sort</span>(Sort.Direction.DESC,<span class="string">&quot;id&quot;</span>);</span><br><span class="line">        <span class="type">Pageable</span> <span class="variable">pageable</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PageRequest</span>(start, size,sort);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">NativeSearchQueryBuilder</span>()</span><br><span class="line">                .withPageable(pageable)</span><br><span class="line">                .withQuery(functionScoreQueryBuilder).build();</span><br><span class="line">    &#125;    </span><br><span class="line">    </span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/addCategory&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">addCategory</span><span class="params">(Category c)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">id</span> <span class="operator">=</span> currentTime();</span><br><span class="line">    c.setId(id);</span><br><span class="line">        categoryDAO.save(c);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;redirect:listCategory&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="title function_">currentTime</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">SimpleDateFormat</span> <span class="variable">sdf</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;MMddHHmmss&quot;</span>);</span><br><span class="line">    String time= sdf.format(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">    <span class="keyword">return</span> Integer.parseInt(time);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/deleteCategory&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">deleteCategory</span><span class="params">(Category c)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        categoryDAO.delete(c);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;redirect:listCategory&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/updateCategory&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">updateCategory</span><span class="params">(Category c)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        categoryDAO.save(c);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;redirect:listCategory&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/editCategory&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">ediitCategory</span><span class="params">(<span class="type">int</span> id,Model m)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        Category c= categoryDAO.findOne(id);</span><br><span class="line">        m.addAttribute(<span class="string">&quot;c&quot;</span>, c);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;editCategory&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="配置文件：application-properties"><a href="#配置文件：application-properties" class="headerlink" title="配置文件：application.properties"></a>配置文件：application.properties</h3><p>配置 jsp 作为视图<br>配置spring端口 为8080<br>配置 elastic链接地址为 127.0.0.1:9300  </p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring.mvc.view.prefix</span>=<span class="string">/WEB-INF/jsp/</span></span><br><span class="line"><span class="attr">spring.mvc.view.suffix</span>=<span class="string">.jsp</span></span><br><span class="line"><span class="attr">server.port</span>=<span class="string">8080</span></span><br><span class="line"><span class="attr">spring.data.elasticsearch.cluster-nodes</span> = <span class="string">127.0.0.1:9300</span></span><br></pre></td></tr></table></figure><h3 id="启动并测试"><a href="#启动并测试" class="headerlink" title="启动并测试:"></a>启动并测试:</h3><p>运行 Application.java 启动项目, 接着访问地址：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1:8080/listCategory</span><br></pre></td></tr></table></figure><p><img src="/../../../../assets/png/ElasticSearch/%E9%9B%86%E6%88%90Springboot%E5%90%AF%E5%8A%A8%E5%B9%B6%E6%B5%8B%E8%AF%95.png" alt="Springboot启动并测试"></p><h3 id="kibana查看数据"><a href="#kibana查看数据" class="headerlink" title="kibana查看数据"></a>kibana查看数据</h3><p>启动 kibana 并访问: <a href="http://127.0.0.1:5601/">http://127.0.0.1:5601</a>, 选择索引<br>刚开始是没有选定索引的，所以要自己指定索引。</p><ol><li>把默认勾选的 Index contians time-based evens 去掉</li><li>输入 howToElasticSearch</li><li>点击 Create 按钮</li></ol><p><img src="/../../../../assets/png/ElasticSearch/%E9%9B%86%E6%88%90Springboot%E9%80%89%E6%8B%A9%E7%B4%A2%E5%BC%95.png" alt="选择索引"></p><h4 id="查看数据"><a href="#查看数据" class="headerlink" title="查看数据"></a>查看数据</h4><p>然后点击上面的Discover，就可以看到左边是当前的索引 :howToElasticSearch. 右边就是数据了。<br><img src="/../../../../assets/png/ElasticSearch/%E9%9B%86%E6%88%90Springboot%E6%9F%A5%E7%9C%8B%E6%95%B0%E6%8D%AE.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;版本问题&quot;&gt;&lt;a href=&quot;#版本问题&quot; class=&quot;headerlink&quot; title=&quot;版本问题&quot;&gt;&lt;/a&gt;版本问题&lt;/h2&gt;&lt;p&gt;springboot 有一个 spring data 组件，可以用来连接各种数据源。 用来连接 elasticsearch </summary>
      
    
    
    
    <category term="工具和中间件" scheme="http://example.com/categories/%E5%B7%A5%E5%85%B7%E5%92%8C%E4%B8%AD%E9%97%B4%E4%BB%B6/"/>
    
    <category term="搜索引擎技术" scheme="http://example.com/categories/%E5%B7%A5%E5%85%B7%E5%92%8C%E4%B8%AD%E9%97%B4%E4%BB%B6/%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E6%8A%80%E6%9C%AF/"/>
    
    <category term="ElasticSearch" scheme="http://example.com/categories/%E5%B7%A5%E5%85%B7%E5%92%8C%E4%B8%AD%E9%97%B4%E4%BB%B6/%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E6%8A%80%E6%9C%AF/ElasticSearch/"/>
    
    
    <category term="ElasticSearch" scheme="http://example.com/tags/ElasticSearch/"/>
    
  </entry>
  
  <entry>
    <title>ElasticSearch工具-Kibana</title>
    <link href="http://example.com/blog/%E5%B7%A5%E5%85%B7%E5%92%8C%E4%B8%AD%E9%97%B4%E4%BB%B6/%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E6%8A%80%E6%9C%AF/ElasticSearch/ElasticSearch%E5%B7%A5%E5%85%B7-Kibana/"/>
    <id>http://example.com/blog/%E5%B7%A5%E5%85%B7%E5%92%8C%E4%B8%AD%E9%97%B4%E4%BB%B6/%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E6%8A%80%E6%9C%AF/ElasticSearch/ElasticSearch%E5%B7%A5%E5%85%B7-Kibana/</id>
    <published>2022-01-02T05:08:20.000Z</published>
    <updated>2022-06-23T03:29:39.204Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Kibana-是什么"><a href="#Kibana-是什么" class="headerlink" title="Kibana 是什么"></a>Kibana 是什么</h2><p>Kibana 是一个针对 ElasticSearch 的开源分析及可视化平台，用来搜索、查看交互存储在 ElasticSearch 索引中的数据。使用 Kibana，可以通过各种图表进行高级数据分析及展示。</p><p>Kibana 是在ElasticSearch 有了相当多的数据之后，进行分析这些数据用的工具。 但是现在还么有数据呀，为什么就要介绍这个工具呢？ 因为Kibana 里面有一个叫做 <code>Dev Tools</code>的，可以很方便地以Restful 风格向 ElasticSearch 服务器提交请求。<br>Kibana 让海量数据更容易理解。它操作简单，基于浏览器的用户界面可以快速创建仪表板（DashBoard）实时显示 ElasticSearch 查询动态。</p><p><img src="/../../../../assets/png/ElasticSearch/Kibana%E7%95%8C%E9%9D%A2.png" alt="Kibana界面"></p><h2 id="官网下载-https-www-elastic-co-cn-kibana"><a href="#官网下载-https-www-elastic-co-cn-kibana" class="headerlink" title="官网下载(https://www.elastic.co/cn/kibana/)"></a>官网下载(<a href="https://www.elastic.co/cn/kibana/">https://www.elastic.co/cn/kibana/</a>)</h2><p>下载rar，并解压。 假设下载路径在：C:\Users\X7TI<br>运行启动中的 kibana.bat  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\X7TI\Downloads\kibana-6.2.2-windows-x86_64\bin\kibana.bat</span><br></pre></td></tr></table></figure><h2 id="验证启动"><a href="#验证启动" class="headerlink" title="验证启动"></a>验证启动</h2><p>浏览器输入 <a href="http://localhost:5601/app/kibana#/dev_tools/console?_g=()">http://localhost:5601/app/kibana#/dev_tools/console?_g=()</a>, 打开当前的开发工具 Dev Tools 界面<br><img src="/../../../../assets/png/ElasticSearch/Kibana-Dev%20Tools%E7%95%8C%E9%9D%A2.png" alt="Kibana-Dev Tools界面"></p><h2 id="运行测试"><a href="#运行测试" class="headerlink" title="运行测试"></a>运行测试</h2><p>在控制台里输入 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET /_cat/health?v</span><br></pre></td></tr></table></figure><p>然后点击<code>绿色箭头</code>进行运行，就可以看到右侧出现查询结果<br>GET &#x2F;_cat&#x2F;health?v 这个命令用来查看服务器状态（<strong>健康度</strong>），<span style="color: green"> <strong>green</strong> </span> 表示一切OK。<br><img src="/../../../../assets/png/ElasticSearch/Kibana%E5%90%AF%E5%8A%A8%E8%BF%90%E8%A1%8C%E6%B5%8B%E8%AF%95.png" alt="Kibana运行测试"></p><h2 id="索引概念"><a href="#索引概念" class="headerlink" title="索引概念"></a>索引概念</h2><p>索引相当于就是一个数据库服务器上的某个数据库，所以索引也可以看成是Elastic Search里的某个数据库</p><h2 id="Restful-风格"><a href="#Restful-风格" class="headerlink" title="Restful 风格"></a>Restful 风格</h2><p>管理索引，管理无非就是增删改查，即 CRUD。<br>在使用Restful风格之前，进行所以管理需要这样的访问地址： add,delete,update,get 等不同的访问地址来表示不同的业务请求。<br>但是使用Restful 风格，就通过提交不同的method 来表示 CRUD：</p><ul><li>PUT 表示增加</li><li>GET 表示获取</li><li>DELETE 表示删除</li><li>POST表示更新</li></ul><p><img src="/../../../../assets/png/ElasticSearch/%E4%BC%A0%E7%BB%9F%E9%A3%8E%E6%A0%BC%E4%B8%8ERestful%E5%8C%BA%E5%88%AB.png" alt="传统风格与Restful区别"></p><h2 id="增加索引"><a href="#增加索引" class="headerlink" title="增加索引:"></a>增加索引:</h2><p>在 kibana 控制台中输入如下命令：<br>打开 kibana控制台：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:5601/app/kibana#/dev_tools/console?_g=()</span><br></pre></td></tr></table></figure><p>运行如下命令：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PUT /howToKibana?pretty</span><br></pre></td></tr></table></figure><p>返回：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;acknowledged&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;shards_acknowledged&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;index&quot;</span><span class="punctuation">:</span> <span class="string">&quot;howToKibana&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>表示创建成功了，索引名称是howToKibana<br><strong>注：</strong> 要运行kibana控制台，需要先安装kibana:</p><h2 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h2><p>运行如下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET /_cat/indices?v</span><br></pre></td></tr></table></figure><p>可以观察到新建立的索引<br><img src="/../../../../assets/png/ElasticSearch/Kibana-%E6%9F%A5%E8%AF%A2.png" alt="Kibana-查询"></p><h2 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h2><p>运行如下命令：<br>DELETE &#x2F;howToKibana?pretty<br>再运行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET /_cat/indices?v</span><br></pre></td></tr></table></figure><p>可以观察到索引howToKibana被删除了，右侧一个索引也看不到了<br><img src="/../../../../assets/png/ElasticSearch/Kibana-%E5%88%A0%E9%99%A4.png" alt="Kibana-删除"></p><h2 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h2><p>修改两种方式，</p><ul><li>第一种还是用PUT，PUT本来用来做增加的，但是当输入的id已经存在的时候，就自动变成修改功能了;</li><li>第二种使用 POST，这才是正规的修改，其实和第一种效果一样的。</li></ul><h2 id="批量导入"><a href="#批量导入" class="headerlink" title="批量导入"></a>批量导入</h2><h3 id="批量导入两条数据"><a href="#批量导入两条数据" class="headerlink" title="批量导入两条数据"></a>批量导入两条数据</h3><p>在 kibana 控制台中输入如下命令：<br>打开 kibana控制台：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:5601/app/kibana#/dev_tools/console?_g=()</span><br></pre></td></tr></table></figure><p>运行如下命令：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">POST _bulk</span><br><span class="line">&#123;<span class="string">&quot;index&quot;</span>:&#123;<span class="string">&quot;_index&quot;</span>:<span class="string">&quot;howToKibana&quot;</span>,<span class="string">&quot;_type&quot;</span>:<span class="string">&quot;product&quot;</span>,<span class="string">&quot;_id&quot;</span>:<span class="number">10001</span>&#125;&#125;</span><br><span class="line">&#123;<span class="string">&quot;code&quot;</span>:<span class="string">&quot;540785126782&quot;</span>,<span class="string">&quot;price&quot;</span>:<span class="number">398</span>,<span class="string">&quot;name&quot;</span>:<span class="string">&quot;房屋卫士自流平美缝剂瓷砖地砖专用双组份真瓷胶防水填缝剂镏金色&quot;</span>,<span class="string">&quot;place&quot;</span>:<span class="string">&quot;上海&quot;</span>,<span class="string">&quot;category&quot;</span>:<span class="string">&quot;品质建材&quot;</span>&#125;</span><br><span class="line">&#123;<span class="string">&quot;index&quot;</span>:&#123;<span class="string">&quot;_index&quot;</span>:<span class="string">&quot;howToKibana&quot;</span>,<span class="string">&quot;_type&quot;</span>:<span class="string">&quot;product&quot;</span>,<span class="string">&quot;_id&quot;</span>:<span class="number">10002</span>&#125;&#125;</span><br><span class="line">&#123;<span class="string">&quot;code&quot;</span>:<span class="string">&quot;24727352473&quot;</span>,<span class="string">&quot;price&quot;</span>:<span class="number">21.799999237060547</span>,<span class="string">&quot;name&quot;</span>:<span class="string">&quot;艾瑞泽手工大号小号调温热熔胶枪玻璃胶枪硅胶条热溶胶棒20W-100W&quot;</span>,<span class="string">&quot;place&quot;</span>:<span class="string">&quot;山东青岛&quot;</span>,<span class="string">&quot;category&quot;</span>:<span class="string">&quot;品质建材&quot;</span>&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>注：</strong> 要运行kibana控制台，需要先安装kibana并启动</li><li><strong>注：</strong> 其中的product在elastic search里是type的概念，相当于数据库里的表，这里就相当于向 product 表里插入了一条数据</li></ul><h3 id="验证插入的数据"><a href="#验证插入的数据" class="headerlink" title="验证插入的数据"></a>验证插入的数据</h3><p>使用命令查询howToKibana 索引里所有的数据：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">GET /howToKibana/_search</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;query&quot;</span>: &#123; <span class="string">&quot;match_all&quot;</span>: &#123;&#125; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到刚刚批量插入的两条数据.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Kibana-是什么&quot;&gt;&lt;a href=&quot;#Kibana-是什么&quot; class=&quot;headerlink&quot; title=&quot;Kibana 是什么&quot;&gt;&lt;/a&gt;Kibana 是什么&lt;/h2&gt;&lt;p&gt;Kibana 是一个针对 ElasticSearch 的开源分析及可视化平台</summary>
      
    
    
    
    <category term="工具和中间件" scheme="http://example.com/categories/%E5%B7%A5%E5%85%B7%E5%92%8C%E4%B8%AD%E9%97%B4%E4%BB%B6/"/>
    
    <category term="搜索引擎技术" scheme="http://example.com/categories/%E5%B7%A5%E5%85%B7%E5%92%8C%E4%B8%AD%E9%97%B4%E4%BB%B6/%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E6%8A%80%E6%9C%AF/"/>
    
    <category term="ElasticSearch" scheme="http://example.com/categories/%E5%B7%A5%E5%85%B7%E5%92%8C%E4%B8%AD%E9%97%B4%E4%BB%B6/%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E6%8A%80%E6%9C%AF/ElasticSearch/"/>
    
    
    <category term="ElasticSearch" scheme="http://example.com/tags/ElasticSearch/"/>
    
    <category term="Kibana" scheme="http://example.com/tags/Kibana/"/>
    
  </entry>
  
  <entry>
    <title>ElasticSearch进阶</title>
    <link href="http://example.com/blog/%E5%B7%A5%E5%85%B7%E5%92%8C%E4%B8%AD%E9%97%B4%E4%BB%B6/%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E6%8A%80%E6%9C%AF/ElasticSearch/ElasticSearch%E8%BF%9B%E9%98%B6/"/>
    <id>http://example.com/blog/%E5%B7%A5%E5%85%B7%E5%92%8C%E4%B8%AD%E9%97%B4%E4%BB%B6/%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E6%8A%80%E6%9C%AF/ElasticSearch/ElasticSearch%E8%BF%9B%E9%98%B6/</id>
    <published>2022-01-02T04:08:20.000Z</published>
    <updated>2022-06-23T03:31:35.295Z</updated>
    
    <content type="html"><![CDATA[<h2 id="分值计算"><a href="#分值计算" class="headerlink" title="分值计算"></a>分值计算</h2><p>首先根据用户query条件,过滤出包含指定term的doc,Field-length norm即field长度越长相关度越弱。  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">query <span class="string">&quot;hello world&quot;</span> --&gt;  hello / world / hello &amp; world</span><br><span class="line">bool --&gt; must/must not/should --&gt; 过滤 --&gt; 包含 / 不包含 / 可能包含</span><br><span class="line">doc --&gt; 不打分数 --&gt; 正或反 <span class="literal">true</span> or <span class="literal">false</span> --&gt; 为了减少后续要计算的doc的数量,提升性能</span><br></pre></td></tr></table></figure><p><strong><code>relevance score</code>算法</strong>：计算出一个 <strong>索引中文本</strong> 与 <strong>搜索文本</strong> 之间 <strong>关联匹配程度</strong>,ES使用 <strong><code>term frequency/inverse document frequency</code>算法</strong> 简称为 <strong><code>TF/IDF</code></strong> 算法。 <strong><code>Term frequency</code></strong> 即 <strong>搜索文本</strong> 中 <strong>各个词条</strong> 在 <strong><code>field</code></strong> 文本中 <strong>出现次数</strong>,<strong>次数越多越相关</strong> 。<strong>Inverse document frequency</strong> 即 <strong>搜索文本</strong> 中 <strong>各个词条</strong> 在 <strong>整个索引所有文档</strong> 中 <strong>出现次数</strong>,<strong>出现次数越多越不相关</strong> 。</p><h2 id="向量空间模型"><a href="#向量空间模型" class="headerlink" title="向量空间模型"></a>向量空间模型</h2><p><strong><code>vector space model</code><strong>向量空间模型,多个term对一个doc的总分数,es会根据</strong>查询字符串</strong>在所有doc中的评分情况,计算出一个 <strong><code>query vector</code></strong> 即 <strong><code>query</code>向量</strong>,会给每一个doc,拿每个term计算出一个分数来。每个<code>doc vector</code>计算出对 <strong><code>query vector</code></strong> 的 <strong>弧度</strong>,最后基于该弧度给出一个doc相对于query中多个term的总分数,<strong>弧度越大分数越低</strong>,<strong>弧度越小分数越高</strong> 。若是多个term,那么就是线性代数来计算,无法用图表示<br><img src="/../../../../assets/png/ElasticSearch/%E5%90%91%E9%87%8F%E7%A9%BA%E9%97%B4%E6%A8%A1%E5%9E%8B.png" alt="向量空间模型"><br>若查询条件字符串为<code>hello world</code>,hello这个term,给的基于所有doc的一个评分就是3,world这个term,给的基于所有doc的一个评分就是6,则 <strong><code>query</code>向量</strong> 为 <strong><code>[3, 6]</code></strong>,若3个doc一个包含hello,一个包含world,一个包含hello和world,doc向量分别为[3, 0]、[0, 6]、[3, 6]</p><h2 id="分词器工作流程"><a href="#分词器工作流程" class="headerlink" title="分词器工作流程"></a>分词器工作流程</h2><p>首先进行 <strong><code>normalization</code>切分词语</strong>,将<strong>目标文本</strong>拆分成单个单词,同时对每个单词进行 <strong><code>normalization</code>时态转换单复数转换</strong>、<strong>分词器<code>recall</code><strong>、</strong>搜索时召回率</strong>、增加<strong>能搜索到的结果的数量</strong> 。<strong>分词器</strong>将文本进行各种处理,最后<strong>处理好的结果</strong>才会用来<strong>建立倒排索引</strong> 。  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">character filter：在一段文本进行分词之前,先进行预处理,如过滤html标签（&lt;span&gt;hello&lt;span&gt; --&gt; hello）,&amp; --&gt; and (I&amp;you --&gt; I and you)</span><br><span class="line">tokenizer：分词,hello you and me --&gt; hello, you, and, me</span><br><span class="line">token filter：lowercase,stop word,synonymom,liked --&gt; like,Tom --&gt; tom,a/the/an --&gt; 干掉,small --&gt; little</span><br></pre></td></tr></table></figure><h3 id="对于默认的-standard分词器-："><a href="#对于默认的-standard分词器-：" class="headerlink" title="对于默认的 standard分词器 ："></a>对于默认的 <strong><code>standard</code>分词器</strong> ：</h3><ul><li><strong><code>standard tokenizer</code>：</strong> 以单词边界进行切分</li><li><strong><code>standard token filter</code>：</strong>什么都不做</li><li><strong><code>lowercase token filter</code>：</strong>将所有字母<strong>转换为小写</strong></li><li><strong><code>stop token filer</code>：</strong>默认被禁用,移除停用词,比如a the it等等<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">POST _analyze</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;analyzer&quot;</span>: <span class="string">&quot;standard&quot;</span>,</span><br><span class="line">  <span class="string">&quot;text&quot;</span>: <span class="string">&quot;Set the shape to semi-transparent by calling set_trans(5)&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">PUT /my_index</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;settings&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;analysis&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;analyzer&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;es_std&quot;</span>: &#123;</span><br><span class="line">          <span class="string">&quot;type&quot;</span>: <span class="string">&quot;standard&quot;</span>,</span><br><span class="line">          <span class="string">&quot;stopwords&quot;</span>: <span class="string">&quot;_english_&quot;</span> <span class="comment">// 启用english停用词token filter</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">GET /my_index/_analyze</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;analyzer&quot;</span>: <span class="string">&quot;standard&quot;</span>, </span><br><span class="line">  <span class="string">&quot;text&quot;</span>: <span class="string">&quot;a dog is in the house&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">GET /my_index/_analyze</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;analyzer&quot;</span>: <span class="string">&quot;es_std&quot;</span>,</span><br><span class="line">  <span class="string">&quot;text&quot;</span>:<span class="string">&quot;a dog is in the house&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">PUT /my_index <span class="comment">// 定制化分词器</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;settings&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;analysis&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;char_filter&quot;</span>: &#123;<span class="string">&quot;&amp;_to_and&quot;</span>: &#123;<span class="string">&quot;type&quot;</span>: <span class="string">&quot;mapping&quot;</span>,<span class="string">&quot;mappings&quot;</span>: [<span class="string">&quot;&amp;=&gt; and&quot;</span>]&#125;&#125;,</span><br><span class="line">      <span class="string">&quot;filter&quot;</span>: &#123;<span class="string">&quot;my_stopwords&quot;</span>: &#123;<span class="string">&quot;type&quot;</span>: <span class="string">&quot;stop&quot;</span>,<span class="string">&quot;stopwords&quot;</span>: [<span class="string">&quot;the&quot;</span>,<span class="string">&quot;a&quot;</span>]&#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">&quot;analyzer&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;my_analyzer&quot;</span>: &#123;<span class="string">&quot;type&quot;</span>: <span class="string">&quot;custom&quot;</span>,<span class="string">&quot;char_filter&quot;</span>: [<span class="string">&quot;html_strip&quot;</span>,<span class="string">&quot;&amp;_to_and&quot;</span>],<span class="string">&quot;tokenizer&quot;</span>: <span class="string">&quot;standard&quot;</span>,<span class="string">&quot;filter&quot;</span>: [<span class="string">&quot;lowercase&quot;</span>,<span class="string">&quot;my_stopwords&quot;</span>]&#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">GET /my_index/_analyze</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;text&quot;</span>: <span class="string">&quot;tom&amp;jerry are a friend in the house, &lt;a&gt;, HAHA!!&quot;</span>,</span><br><span class="line">  <span class="string">&quot;analyzer&quot;</span>: <span class="string">&quot;my_analyzer&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="IK分词器"><a href="#IK分词器" class="headerlink" title="IK分词器"></a>IK分词器</h3><p><a href="https://github.com/medcl/elasticsearch-analysis-ik">IK分词器</a><strong>配置文件地址</strong>为 <strong><code>es/plugins/ik/config</code></strong>,ik原生最重要的是 <strong><code>main.dic</code></strong> 和 <strong><code>stopword.dic</code></strong> 两个配置文件</p><ul><li><strong><code>IKAnalyzer.cfg.xml</code><strong>：用来</strong>配置自定义词库</strong></li><li><strong><code>main.dic</code><strong>：ik原生</strong>内置中文词库</strong>,总共有27万多条,<strong>会按照该文件中的词语去分词</strong></li><li><strong><code>quantifier.dic</code><strong>：</strong>单位</strong>相关的词</li><li><strong><code>suffix.dic</code><strong>：</strong>后缀</strong>相关的词</li><li><strong><code>surname.dic</code><strong>：中国</strong>姓氏</strong></li><li><strong><code>stopword.dic</code><strong>：</strong>英文停用词</strong>,停用词会在<strong>分词时被干掉</strong>,<strong>不会建立在倒排索引中</strong></li></ul><p>可通过在 <strong><code>IKAnalyzer.cfg.xml</code></strong> 配置文件中通过修改 <strong><code>&lt;entry key=&quot;ext_dict&quot;&gt;&lt;/entry&gt;</code></strong> 配置内容 <strong>扩展自己的词库</strong>,<strong>需重启<code>es</code>才能生效</strong>,还可以通过修改 <strong><code>&lt;entry key=&quot;ext_stopwords&quot;&gt;&lt;/entry&gt;</code></strong> 配置<strong>扩展停用词</strong> 。</p><p>每次在es扩展词典中,手动添加新词语,添加完都要重启es才能生效,非常麻烦,且es是分布式的,可能有数百个节点,不能每次都一个一个节点上面去修改。 <strong><code>IKAnalyzer.cfg.xml</code></strong> 配置文件中可通过 <strong><code>&lt;entry key=&quot;remote_ext_dict&quot;&gt;words_location&lt;/entry&gt;</code></strong> 和 <strong><code>&lt;entry key=&quot;remote_ext_stopwords&quot;&gt;words_location&lt;/entry&gt;</code></strong> 配置支持 <strong>远程扩展字典</strong> 。  </p><h3 id="高亮显示"><a href="#高亮显示" class="headerlink" title="高亮显示"></a>高亮显示</h3><p>搜索中经常需要对<strong>搜索关键字</strong>做<strong>高亮显示</strong>,ES默认通过添加 <strong><code>&lt;em&gt;&lt;/em&gt;</code><strong>标签,在HTML中会变成红色,指定的field中若包含了搜索词,就会在那个field文本中,对搜索词进行红色高亮显示。</strong><code>highlight</code><strong>中的field必须跟 <strong><code>query</code></strong> 中field一一</strong>对齐</strong></p><p>默认的 <strong><code>highlight</code></strong> 为 <strong><code>plain highlight</code></strong> 即 <strong><code>lucene highlight</code></strong>,在 <strong><code>mapping</code></strong> 中设置 <strong><code>index_options</code></strong> 为 <strong><code>offsets</code></strong> 使用 <strong><code>posting highlight</code></strong> 。在 <strong><code>mapping</code></strong> 中设置 <strong><code>term_vector</code></strong> 为 <strong><code>term_vector</code></strong> 使用 <strong><code>fast verctor highlight</code></strong>,对 <strong>大于<code>1mb</code>的<code>field</code>性能更高</strong> 。也可通过在查询时<strong>强制使用某种<code>highlighter</code></strong> 。</p><p>一般情况下用 <strong><code>plain highlight</code></strong> 也就足够了,不需要做其他额外设置,若对高亮性能要求很高,可尝试启用 <strong><code>posting highlight</code></strong>,若 <strong><code>field</code>值特别大超过了<code>1M</code></strong>,则可用 <strong><code>fast vector highlight</code></strong> 。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">PUT /news_website</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;mappings&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;properties&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;title&quot;</span>: &#123;<span class="string">&quot;type&quot;</span>: <span class="string">&quot;text&quot;</span>,<span class="string">&quot;analyzer&quot;</span>: <span class="string">&quot;ik_max_word&quot;</span>&#125;,</span><br><span class="line">      <span class="string">&quot;content&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;type&quot;</span>: <span class="string">&quot;text&quot;</span>,</span><br><span class="line">        <span class="string">&quot;analyzer&quot;</span>: <span class="string">&quot;ik_max_word&quot;</span>,</span><br><span class="line">        <span class="string">&quot;index_options&quot;</span>: <span class="string">&quot;offsets&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">PUT /news_website</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;mappings&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;properties&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;title&quot;</span>: &#123;<span class="string">&quot;type&quot;</span>: <span class="string">&quot;text&quot;</span>,<span class="string">&quot;analyzer&quot;</span>: <span class="string">&quot;ik_max_word&quot;</span>&#125;,</span><br><span class="line">      <span class="string">&quot;content&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;type&quot;</span>: <span class="string">&quot;text&quot;</span>,</span><br><span class="line">        <span class="string">&quot;analyzer&quot;</span>: <span class="string">&quot;ik_max_word&quot;</span>,</span><br><span class="line">        <span class="string">&quot;term_vector&quot;</span>: <span class="string">&quot;with_positions_offsets&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">GET /news_website/_doc/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;query&quot;</span>: &#123;<span class="string">&quot;match&quot;</span>: &#123;<span class="string">&quot;content&quot;</span>: <span class="string">&quot;文章&quot;</span>&#125;&#125;,</span><br><span class="line">  <span class="string">&quot;highlight&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;fields&quot;</span>: &#123;<span class="string">&quot;content&quot;</span>: &#123;<span class="string">&quot;type&quot;</span>: <span class="string">&quot;plain&quot;</span>&#125;&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">GET /news_website/_doc/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;query&quot;</span>: &#123;<span class="string">&quot;match&quot;</span>: &#123;<span class="string">&quot;content&quot;</span>: <span class="string">&quot;文章&quot;</span>&#125;&#125;,</span><br><span class="line">  <span class="string">&quot;highlight&quot;</span>: &#123; <span class="comment">// 设置高亮html标签,默认是&lt;em&gt;标签</span></span><br><span class="line">    <span class="string">&quot;pre_tags&quot;</span>: [<span class="string">&quot;&lt;span color=&#x27;red&#x27;&gt;&quot;</span>],</span><br><span class="line">    <span class="string">&quot;post_tags&quot;</span>: [<span class="string">&quot;&lt;/span&gt;&quot;</span>],</span><br><span class="line">    <span class="string">&quot;fields&quot;</span>: &#123;<span class="string">&quot;content&quot;</span>: &#123;<span class="string">&quot;type&quot;</span>: <span class="string">&quot;plain&quot;</span>&#125;&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">GET /_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;query&quot;</span>: &#123;<span class="string">&quot;match&quot;</span>: &#123;<span class="string">&quot;content&quot;</span>: <span class="string">&quot;文章&quot;</span>&#125;&#125;,</span><br><span class="line">  <span class="string">&quot;highlight&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;fields&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;content&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;fragment_size&quot;</span>: <span class="number">150</span>,<span class="comment">// 设置要显示出来的fragment文本长度,默认100</span></span><br><span class="line">        <span class="string">&quot;number_of_fragments&quot;</span>: <span class="number">3</span> <span class="comment">// 指定显示高亮fragment文本片段个数</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">用一个大家容易理解的SQL语法来解释,如：select <span class="title function_">count</span><span class="params">(*)</span> from table group by column。那么group by column分组后的每组数据就是bucket。对每个分组执行的count(*)就是metric。</span><br></pre></td></tr></table></figure><h3 id="聚合搜索"><a href="#聚合搜索" class="headerlink" title="聚合搜索"></a>聚合搜索</h3><p><strong><code>bucket</code><strong>就是一个</strong>聚合搜索时的数据分组</strong>,<strong><code>metric</code><strong>就是对</strong>一个<code>bucket</code>数据执行的统计分析</strong>,<strong><code>metric</code><strong>有</strong>求和</strong>,<strong>最大值</strong>,<strong>最小值</strong>,<strong>平均值</strong>等<strong>多种统计</strong> 。如 <strong><code>select count(*) from table group by column</code></strong> 其中 <strong><code>group by column</code></strong> 分组后的 <strong>每组数据就是<code>bucket</code></strong>,每个分组执行的 <strong><code>count(*)</code></strong> 就是 <strong><code>metric</code></strong> 。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">PUT /cars</span><br><span class="line">&#123;<span class="string">&quot;mappings&quot;</span>:&#123;<span class="string">&quot;properties&quot;</span>:&#123;<span class="string">&quot;price&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;long&quot;</span>&#125;,<span class="string">&quot;color&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;keyword&quot;</span>&#125;,<span class="string">&quot;brand&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;keyword&quot;</span>&#125;,<span class="string">&quot;model&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;keyword&quot;</span>&#125;,<span class="string">&quot;sold_date&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;date&quot;</span>&#125;,<span class="string">&quot;remark&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;text&quot;</span>,<span class="string">&quot;analyzer&quot;</span>:<span class="string">&quot;ik_max_word&quot;</span>&#125;&#125;&#125;&#125;</span><br><span class="line"></span><br><span class="line">POST /cars/_bulk</span><br><span class="line">&#123;<span class="string">&quot;index&quot;</span>:&#123;&#125;&#125;</span><br><span class="line">&#123;<span class="string">&quot;price&quot;</span>:<span class="number">258000</span>,<span class="string">&quot;color&quot;</span>:<span class="string">&quot;金色&quot;</span>,<span class="string">&quot;brand&quot;</span>:<span class="string">&quot;大众&quot;</span>,<span class="string">&quot;model&quot;</span>:<span class="string">&quot;大众迈腾&quot;</span>,<span class="string">&quot;sold_date&quot;</span>:<span class="string">&quot;2021-10-28&quot;</span>,<span class="string">&quot;remark&quot;</span>:<span class="string">&quot;大众中档车&quot;</span>&#125;</span><br><span class="line">&#123;<span class="string">&quot;index&quot;</span>:&#123;&#125;&#125;</span><br><span class="line">&#123;<span class="string">&quot;price&quot;</span>:<span class="number">123000</span>,<span class="string">&quot;color&quot;</span>:<span class="string">&quot;金色&quot;</span>,<span class="string">&quot;brand&quot;</span>:<span class="string">&quot;大众&quot;</span>,<span class="string">&quot;model&quot;</span>:<span class="string">&quot;大众速腾&quot;</span>,<span class="string">&quot;sold_date&quot;</span>:<span class="string">&quot;2021-11-05&quot;</span>,<span class="string">&quot;remark&quot;</span>:<span class="string">&quot;大众神车&quot;</span>&#125;</span><br><span class="line">&#123;<span class="string">&quot;index&quot;</span>:&#123;&#125;&#125;</span><br><span class="line">&#123;<span class="string">&quot;price&quot;</span>:<span class="number">239800</span>,<span class="string">&quot;color&quot;</span>:<span class="string">&quot;白色&quot;</span>,<span class="string">&quot;brand&quot;</span>:<span class="string">&quot;标志&quot;</span>,<span class="string">&quot;model&quot;</span>:<span class="string">&quot;标志508&quot;</span>,<span class="string">&quot;sold_date&quot;</span>:<span class="string">&quot;2021-05-18&quot;</span>,<span class="string">&quot;remark&quot;</span>:<span class="string">&quot;标志品牌全球上市车型&quot;</span>&#125;</span><br><span class="line">&#123;<span class="string">&quot;index&quot;</span>:&#123;&#125;&#125;</span><br><span class="line">&#123;<span class="string">&quot;price&quot;</span>:<span class="number">148800</span>,<span class="string">&quot;color&quot;</span>:<span class="string">&quot;白色&quot;</span>,<span class="string">&quot;brand&quot;</span>:<span class="string">&quot;标志&quot;</span>,<span class="string">&quot;model&quot;</span>:<span class="string">&quot;标志408&quot;</span>,<span class="string">&quot;sold_date&quot;</span>:<span class="string">&quot;2021-07-02&quot;</span>,<span class="string">&quot;remark&quot;</span>:<span class="string">&quot;比较大的紧凑型车&quot;</span>&#125;</span><br><span class="line">&#123;<span class="string">&quot;index&quot;</span>:&#123;&#125;&#125;</span><br><span class="line">&#123;<span class="string">&quot;price&quot;</span>:<span class="number">1998000</span>,<span class="string">&quot;color&quot;</span>:<span class="string">&quot;黑色&quot;</span>,<span class="string">&quot;brand&quot;</span>:<span class="string">&quot;大众&quot;</span>,<span class="string">&quot;model&quot;</span>:<span class="string">&quot;大众辉腾&quot;</span>,<span class="string">&quot;sold_date&quot;</span>:<span class="string">&quot;2021-08-19&quot;</span>,<span class="string">&quot;remark&quot;</span>:<span class="string">&quot;大众最让人肝疼的车&quot;</span>&#125;</span><br><span class="line">&#123;<span class="string">&quot;index&quot;</span>:&#123;&#125;&#125;</span><br><span class="line">&#123;<span class="string">&quot;price&quot;</span>:<span class="number">218000</span>,<span class="string">&quot;color&quot;</span>:<span class="string">&quot;红色&quot;</span>,<span class="string">&quot;brand&quot;</span>:<span class="string">&quot;奥迪&quot;</span>,<span class="string">&quot;model&quot;</span>:<span class="string">&quot;奥迪A4&quot;</span>,<span class="string">&quot;sold_date&quot;</span>:<span class="string">&quot;2021-11-05&quot;</span>,<span class="string">&quot;remark&quot;</span>:<span class="string">&quot;小资车型&quot;</span>&#125;</span><br><span class="line">&#123;<span class="string">&quot;index&quot;</span>:&#123;&#125;&#125;</span><br><span class="line">&#123;<span class="string">&quot;price&quot;</span>:<span class="number">489000</span>,<span class="string">&quot;color&quot;</span>:<span class="string">&quot;黑色&quot;</span>,<span class="string">&quot;brand&quot;</span>:<span class="string">&quot;奥迪&quot;</span>,<span class="string">&quot;model&quot;</span>:<span class="string">&quot;奥迪A6&quot;</span>,<span class="string">&quot;sold_date&quot;</span>:<span class="string">&quot;2022-01-01&quot;</span>,<span class="string">&quot;remark&quot;</span>:<span class="string">&quot;政府专用？&quot;</span>&#125;</span><br><span class="line">&#123;<span class="string">&quot;index&quot;</span>:&#123;&#125;&#125;</span><br><span class="line">&#123;<span class="string">&quot;price&quot;</span>:<span class="number">1899000</span>,<span class="string">&quot;color&quot;</span>:<span class="string">&quot;黑色&quot;</span>,<span class="string">&quot;brand&quot;</span>:<span class="string">&quot;奥迪&quot;</span>,<span class="string">&quot;model&quot;</span>:<span class="string">&quot;奥迪A 8&quot;</span>,<span class="string">&quot;sold_date&quot;</span>:<span class="string">&quot;2022-02-12&quot;</span>,<span class="string">&quot;remark&quot;</span>:<span class="string">&quot;很贵的大A6。。。&quot;</span>&#125;</span><br></pre></td></tr></table></figure><p>根据color <strong>分组统计销售数量</strong>,只执行聚合分组,ES中 <strong>最基础的聚合</strong> 为 <strong><code>terms</code></strong>,相当于SQL中的count,ES中默认为分组数据做排序,使用的是 <strong><code>doc_count</code></strong> 数据执行 <strong>降序排列</strong> 。可使用 <strong><code>_key</code></strong> 元数据根据分组后的 <strong>字段数据</strong> 执行不同的排序方案,也可根据 <strong><code>_count</code></strong> 元数据,根据分组后的统计值<strong>执行不同的排序方案</strong> 。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">GET /cars/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;aggs&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;group_by_color&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;terms&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;field&quot;</span>: <span class="string">&quot;color&quot;</span>,</span><br><span class="line">        <span class="string">&quot;order&quot;</span>: &#123;<span class="string">&quot;_count&quot;</span>: <span class="string">&quot;desc&quot;</span>&#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>先根据color执行<strong>聚合分组</strong>,在此分组的基础上,对<strong>组内数据执行聚合统计</strong>,组内数据的聚合统计就是 <strong><code>metric</code></strong>,同样<strong>可执行排序</strong>,因为组内有聚合统计,且对统计数据给予了命名<code>avg_by_price</code>,所以可根据该<strong>聚合统计数据字段名执行排序逻辑</strong>。 <strong><code>size</code>可设置为<code>0</code></strong>,表示<strong>不返回文档只返回聚合之后的数据</strong>,<strong>提高查询速度</strong>,若需要这些文档也可按照实际情况进行设置。对聚合统计数据进行排序,若有多层 <strong><code>aggs</code></strong> 执行 <strong>下钻聚合</strong> 时也可 <strong>根据最内层聚合数据执行排序</strong> 。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">GET /cars/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;aggs&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;group_by_color&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;terms&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;field&quot;</span>: <span class="string">&quot;color&quot;</span>,</span><br><span class="line">        <span class="string">&quot;order&quot;</span>: &#123;<span class="string">&quot;avg_by_price&quot;</span>: <span class="string">&quot;asc&quot;</span>&#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">&quot;aggs&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;avg_by_price&quot;</span>: &#123;<span class="string">&quot;avg&quot;</span>: &#123;<span class="string">&quot;field&quot;</span>: <span class="string">&quot;price&quot;</span>&#125;&#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">GET /cars/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;size&quot;</span>: <span class="number">0</span>,</span><br><span class="line">  <span class="string">&quot;aggs&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;group_by_color&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;terms&quot;</span>: &#123;<span class="string">&quot;field&quot;</span>: <span class="string">&quot;color&quot;</span>&#125;,</span><br><span class="line">      <span class="string">&quot;aggs&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;group_by_brand&quot;</span>: &#123;</span><br><span class="line">          <span class="string">&quot;terms&quot;</span>: &#123;<span class="string">&quot;field&quot;</span>: <span class="string">&quot;brand&quot;</span>,<span class="string">&quot;order&quot;</span>: &#123;<span class="string">&quot;avg_by_price&quot;</span>: <span class="string">&quot;desc&quot;</span>&#125;&#125;,</span><br><span class="line">          <span class="string">&quot;aggs&quot;</span>: &#123;<span class="string">&quot;avg_by_price&quot;</span>: &#123;<span class="string">&quot;avg&quot;</span>: &#123;<span class="string">&quot;field&quot;</span>: <span class="string">&quot;price&quot;</span>&#125;&#125;&#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>先根据color聚合分组,在组内根据brand再次聚合分组,这种操作可称为<strong>下钻分析</strong>,<strong><code>aggs</code><strong>若定义比较多,则会感觉语法格式混乱,aggs语法格式有一个相对固定的结构,</strong><code>aggs</code>可嵌套定义也可水平定义</strong> 。<strong>嵌套定义称为下钻分析</strong>,<strong>水平定义</strong>就是<strong>平铺多个分组方式</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">GET /index_name/type_name/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;aggs&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;定义分组名称&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;分组策略如：terms、avg、sum&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;field&quot;</span>: <span class="string">&quot;根据哪一个字段分组&quot;</span>,</span><br><span class="line">        <span class="string">&quot;其他参数&quot;</span>: <span class="string">&quot;&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">&quot;aggs&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;分组名称1&quot;</span>: &#123;&#125;,</span><br><span class="line">        <span class="string">&quot;分组名称2&quot;</span>: &#123;&#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>统计不同color中的最大和最小价格、总价,聚合分析最常用的种类就是<strong>统计数量</strong>,<strong>最大</strong>,<strong>最小</strong>,<strong>平均</strong>,<strong>总计</strong>等</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">GET /cars/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;aggs&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;group_by_color&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;terms&quot;</span>: &#123;<span class="string">&quot;field&quot;</span>: <span class="string">&quot;color&quot;</span>&#125;,</span><br><span class="line">      <span class="string">&quot;aggs&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;max_price&quot;</span>: &#123;<span class="string">&quot;max&quot;</span>: &#123;<span class="string">&quot;field&quot;</span>: <span class="string">&quot;price&quot;</span>&#125;&#125;,</span><br><span class="line">        <span class="string">&quot;min_price&quot;</span>: &#123;<span class="string">&quot;min&quot;</span>: &#123;<span class="string">&quot;field&quot;</span>: <span class="string">&quot;price&quot;</span>&#125;&#125;,</span><br><span class="line">        <span class="string">&quot;sum_price&quot;</span>: &#123;<span class="string">&quot;sum&quot;</span>: &#123;<span class="string">&quot;field&quot;</span>: <span class="string">&quot;price&quot;</span>&#125;&#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">GET cars/_search  <span class="comment">// 统计不同品牌汽车中价格排名最高的车型</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;size&quot;</span>: <span class="number">0</span>,</span><br><span class="line">  <span class="string">&quot;aggs&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;group_by_brand&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;terms&quot;</span>: &#123;<span class="string">&quot;field&quot;</span>: <span class="string">&quot;brand&quot;</span>&#125;,</span><br><span class="line">      <span class="string">&quot;aggs&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;top_car&quot;</span>: &#123;</span><br><span class="line">          <span class="string">&quot;top_hits&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;size&quot;</span>: <span class="number">1</span>,<span class="comment">// 取组内多少条数据,默认为10</span></span><br><span class="line">            <span class="string">&quot;sort&quot;</span>: [&#123;<span class="string">&quot;price&quot;</span>: &#123;<span class="string">&quot;order&quot;</span>: <span class="string">&quot;desc&quot;</span>&#125;&#125;], <span class="comment">// 组内使用什么字段什么规则排序,默认使用_doc的asc规则排序</span></span><br><span class="line">            <span class="string">&quot;_source&quot;</span>: &#123;<span class="string">&quot;includes&quot;</span>: [<span class="string">&quot;model&quot;</span>,<span class="string">&quot;price&quot;</span>]&#125; <span class="comment">// 结果中包含document中的哪些字段,默认包含全部字段</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong><code>histogram</code>区间统计</strong> 类似 <strong><code>terms</code></strong>, 也是用于 <strong><code>bucket</code>分组操作</strong>, 是根据一个field实现<strong>数据区间分组</strong> 。如以100万为一个范围,统计不同范围内车辆销售量和平均价格。使用 <strong><code>histogram</code>聚合</strong> 时field指定价格字段price,区间范围是100万,此时ES会将price价格区间划分为： <strong><code>[0, 1000000), [1000000, 2000000), [2000000, 3000000)</code><strong>等依次类推。在划分区间同时 <strong><code>histogram</code></strong> 会类似 <strong><code>terms</code></strong> 进行 <strong>数据数量统计</strong>, 可通过</strong>嵌套<code>aggs</code><strong>对聚合分组后的组内数据做</strong>再次聚合分析</strong> 。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">GET /cars/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;aggs&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;histogram_by_price&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;histogram&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;field&quot;</span>: <span class="string">&quot;price&quot;</span>,</span><br><span class="line">        <span class="string">&quot;interval&quot;</span>: <span class="number">1000000</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">&quot;aggs&quot;</span>: &#123;<span class="string">&quot;avg_by_price&quot;</span>: &#123;<span class="string">&quot;avg&quot;</span>: &#123;<span class="string">&quot;field&quot;</span>: <span class="string">&quot;price&quot;</span>&#125;&#125;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong><code>date_histogram</code><strong>区间分组可对</strong><code>date</code>类型</strong>的field执行<strong>区间聚合分组</strong>,若以月为单位,统计不同月份汽车销售数量及销售总金额。此时可使用 <strong><code>date_histogram</code></strong> 实现聚合分组,其中field来指定用于聚合分组的字段,<strong><code>interval</code><strong>指定 <strong>区间范围</strong>,可选值有 <strong><code>year</code><strong>、</strong><code>quarter</code><strong>、</strong><code>month</code><strong>、</strong><code>week</code><strong>、</strong><code>day</code><strong>、</strong><code>hour</code><strong>、</strong><code>minute</code><strong>、</strong><code>second</code></strong>,</strong><code>format</code><strong>指定</strong>日期格式化</strong>,<strong><code>min_doc_count</code><strong>指定</strong>每个区间最少document</strong>,若不指定默认为0,当区间范围内没有document时,也会显示bucket分组,<strong><code>extended_bounds</code><strong>指定</strong>起始时间</strong>和<strong>结束时间</strong>,若不指定<strong>默认使用字段中日期最小值</strong>和<strong>最大值</strong>作为起始和结束时间。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">GET /cars/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;aggs&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;histogram_by_date&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;date_histogram&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;field&quot;</span>: <span class="string">&quot;sold_date&quot;</span>,</span><br><span class="line">        <span class="string">&quot;interval&quot;</span>: <span class="string">&quot;month&quot;</span>, <span class="comment">// 7.X之后使用calendar_interval,指定区间范围</span></span><br><span class="line">        <span class="string">&quot;format&quot;</span>: <span class="string">&quot;yyyy-MM-dd&quot;</span>,<span class="comment">// 指定日期格式化</span></span><br><span class="line">        <span class="string">&quot;min_doc_count&quot;</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="string">&quot;extended_bounds&quot;</span>: &#123;<span class="string">&quot;min&quot;</span>: <span class="string">&quot;2021-01-01&quot;</span>,<span class="string">&quot;max&quot;</span>: <span class="string">&quot;2022-12-31&quot;</span>&#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">&quot;aggs&quot;</span>: &#123;<span class="string">&quot;sum_by_price&quot;</span>: &#123;<span class="string">&quot;sum&quot;</span>: &#123;<span class="string">&quot;field&quot;</span>: <span class="string">&quot;price&quot;</span>&#125;&#125;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>聚合统计数据时,有时需要<strong>对比部分数据和总体数据</strong>,如统计某品牌车辆平均价格和所有车辆平均价格。 <strong><code>global</code></strong> 是用于定义一个<strong>全局<code>bucket</code></strong>,该 <strong><code>bucket</code></strong> 会 <strong>忽略<code>query</code></strong> 的条件,检索所有document进行对应的聚合统计。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">GET /cars/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;size&quot;</span>: <span class="number">0</span>,</span><br><span class="line">  <span class="string">&quot;query&quot;</span>: &#123;<span class="string">&quot;match&quot;</span>: &#123;<span class="string">&quot;brand&quot;</span>: <span class="string">&quot;大众&quot;</span>&#125;&#125;,</span><br><span class="line">  <span class="string">&quot;aggs&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;volkswagen_of_avg_price&quot;</span>: &#123;<span class="string">&quot;avg&quot;</span>: &#123;<span class="string">&quot;field&quot;</span>: <span class="string">&quot;price&quot;</span>&#125;&#125;, <span class="comment">// 统计某品牌车辆平均价格</span></span><br><span class="line">    <span class="string">&quot;all_avg_price&quot;</span>: &#123; <span class="comment">// 所有车辆平均价格</span></span><br><span class="line">      <span class="string">&quot;global&quot;</span>: &#123;&#125;,</span><br><span class="line">      <span class="string">&quot;aggs&quot;</span>: &#123;<span class="string">&quot;all_of_price&quot;</span>: &#123;<span class="string">&quot;avg&quot;</span>: &#123;<span class="string">&quot;field&quot;</span>: <span class="string">&quot;price&quot;</span>&#125;&#125;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>filter也可和aggs组合使用,实现相对复杂的过滤聚合分析,filter的范围决定了其过滤的范围,将filter放在aggs内部,代表该过滤器<strong>只对<code>query</code>搜索得到的结果执行<code>filter</code>过滤</strong> 。若filter放在aggs外部,过滤器则会过滤所有数据。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">GET /cars/_search <span class="comment">// filter和aggs组合使用,实现相对复杂的过滤聚合分析</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;constant_score&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;filter&quot;</span>: &#123;<span class="string">&quot;range&quot;</span>: &#123;<span class="string">&quot;price&quot;</span>: &#123;<span class="string">&quot;gte&quot;</span>: <span class="number">100000</span>,<span class="string">&quot;lte&quot;</span>: <span class="number">500000</span>&#125;&#125;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;aggs&quot;</span>: &#123;<span class="string">&quot;avg_by_price&quot;</span>: &#123;<span class="string">&quot;avg&quot;</span>: &#123;<span class="string">&quot;field&quot;</span>: <span class="string">&quot;price&quot;</span>&#125;&#125;&#125;</span><br><span class="line">&#125;</span><br><span class="line">GET /cars/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;query&quot;</span>: &#123;<span class="string">&quot;match&quot;</span>: &#123;<span class="string">&quot;brand&quot;</span>: <span class="string">&quot;大众&quot;</span>&#125;&#125;,</span><br><span class="line">  <span class="string">&quot;aggs&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;count_last_year&quot;</span>: &#123; <span class="comment">// 12M/M表示12个月,1y/y表示1年,d表示天</span></span><br><span class="line">      <span class="string">&quot;filter&quot;</span>: &#123;<span class="string">&quot;range&quot;</span>: &#123;<span class="string">&quot;sold_date&quot;</span>: &#123;<span class="string">&quot;gte&quot;</span>: <span class="string">&quot;now-12M&quot;</span>&#125;&#125;&#125;,</span><br><span class="line">      <span class="string">&quot;aggs&quot;</span>: &#123;<span class="string">&quot;sum_of_price_last_year&quot;</span>: &#123;<span class="string">&quot;sum&quot;</span>: &#123;<span class="string">&quot;field&quot;</span>: <span class="string">&quot;price&quot;</span>&#125;&#125;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="数据建模"><a href="#数据建模" class="headerlink" title="数据建模"></a>数据建模</h3><p>如下设计一个用户document数据类型,其中包含一个<strong>地址数据的数组</strong>,该设计方式相对复杂,但在管理数据时更加的灵活。但也有<strong>明显的缺陷</strong>,针对<strong>地址数据</strong>做数据<strong>搜索时</strong>,经常会<strong>搜索出不必要的数据</strong> 。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">PUT /user_index</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;mappings&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;properties&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;login_name&quot;</span>: &#123;<span class="string">&quot;type&quot;</span>: <span class="string">&quot;keyword&quot;</span>&#125;,</span><br><span class="line">      <span class="string">&quot;age &quot;</span>: &#123;<span class="string">&quot;type&quot;</span>: <span class="string">&quot;short&quot;</span>&#125;,</span><br><span class="line">      <span class="string">&quot;address&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;properties&quot;</span>: &#123;</span><br><span class="line">          <span class="string">&quot;province&quot;</span>: &#123;<span class="string">&quot;type&quot;</span>: <span class="string">&quot;keyword&quot;</span>&#125;,</span><br><span class="line">          <span class="string">&quot;city&quot;</span>: &#123;<span class="string">&quot;type&quot;</span>: <span class="string">&quot;keyword&quot;</span>&#125;,</span><br><span class="line">          <span class="string">&quot;street&quot;</span>: &#123;<span class="string">&quot;type&quot;</span>: <span class="string">&quot;keyword&quot;</span>&#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">PUT /user_index/_doc/<span class="number">1</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;login_name&quot;</span>: <span class="string">&quot;jack&quot;</span>,</span><br><span class="line">  <span class="string">&quot;age&quot;</span>: <span class="number">25</span>,</span><br><span class="line">  <span class="string">&quot;address&quot;</span>: [</span><br><span class="line">    &#123;<span class="string">&quot;province&quot;</span>: <span class="string">&quot;北京&quot;</span>,<span class="string">&quot;city&quot;</span>: <span class="string">&quot;北京&quot;</span>,<span class="string">&quot;street&quot;</span>: <span class="string">&quot;枫林三路&quot;</span>&#125;,</span><br><span class="line">    &#123;<span class="string">&quot;province&quot;</span>: <span class="string">&quot;天津&quot;</span>,<span class="string">&quot;city&quot;</span>: <span class="string">&quot;天津&quot;</span>,<span class="string">&quot;street&quot;</span>: <span class="string">&quot;华夏路&quot;</span>&#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line">PUT /user_index/_doc/<span class="number">2</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;login_name&quot;</span>: <span class="string">&quot;rose&quot;</span>,</span><br><span class="line">  <span class="string">&quot;age&quot;</span>: <span class="number">21</span>,</span><br><span class="line">  <span class="string">&quot;address&quot;</span>: [</span><br><span class="line">    &#123;<span class="string">&quot;province&quot;</span>: <span class="string">&quot;河北&quot;</span>,<span class="string">&quot;city&quot;</span>: <span class="string">&quot;廊坊&quot;</span>,<span class="string">&quot;street&quot;</span>: <span class="string">&quot;燕郊经济开发区&quot;</span>&#125;,</span><br><span class="line">    &#123;<span class="string">&quot;province&quot;</span>: <span class="string">&quot;天津&quot;</span>,<span class="string">&quot;city&quot;</span>: <span class="string">&quot;天津&quot;</span>,<span class="string">&quot;street&quot;</span>: <span class="string">&quot;华夏路&quot;</span>&#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line">GET /user_index/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;bool&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;must&quot;</span>: [</span><br><span class="line">        &#123;<span class="string">&quot;match&quot;</span>: &#123;<span class="string">&quot;address.province&quot;</span>: <span class="string">&quot;北京&quot;</span>&#125;&#125;,</span><br><span class="line">        &#123;<span class="string">&quot;match&quot;</span>: &#123;<span class="string">&quot;address.city&quot;</span>: <span class="string">&quot;天津&quot;</span>&#125;&#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可使用 <strong><code>nested object</code></strong> 作为 <strong>地址数组</strong> 的集体类型可解决上述问题,且搜索时需要 <strong>使用<code>nested</code>对应的搜索语法</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">PUT /user_index</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;mappings&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;properties&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;login_name&quot;</span>: &#123;<span class="string">&quot;type&quot;</span>: <span class="string">&quot;keyword&quot;</span>&#125;,</span><br><span class="line">      <span class="string">&quot;age &quot;</span>: &#123;<span class="string">&quot;type&quot;</span>: <span class="string">&quot;short&quot;</span>&#125;,</span><br><span class="line">      <span class="string">&quot;address&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;type&quot;</span>: <span class="string">&quot;nested&quot;</span>,</span><br><span class="line">        <span class="string">&quot;properties&quot;</span>: &#123;</span><br><span class="line">          <span class="string">&quot;province&quot;</span>: &#123;<span class="string">&quot;type&quot;</span>: <span class="string">&quot;keyword&quot;</span>&#125;,</span><br><span class="line">          <span class="string">&quot;city&quot;</span>: &#123;<span class="string">&quot;type&quot;</span>: <span class="string">&quot;keyword&quot;</span>&#125;,</span><br><span class="line">          <span class="string">&quot;street&quot;</span>: &#123;<span class="string">&quot;type&quot;</span>: <span class="string">&quot;keyword&quot;</span>&#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">GET /user_index/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;query&quot;</span>: &#123;<span class="string">&quot;bool&quot;</span>: &#123;<span class="string">&quot;must&quot;</span>: [</span><br><span class="line">        &#123;<span class="string">&quot;nested&quot;</span>: &#123;<span class="string">&quot;path&quot;</span>: <span class="string">&quot;address&quot;</span>,</span><br><span class="line">            <span class="string">&quot;query&quot;</span>: &#123;</span><br><span class="line">              <span class="string">&quot;bool&quot;</span>: &#123;<span class="string">&quot;must&quot;</span>: [</span><br><span class="line">                  &#123;<span class="string">&quot;match&quot;</span>: &#123;<span class="string">&quot;address.province&quot;</span>: <span class="string">&quot;北京&quot;</span>&#125;&#125;,</span><br><span class="line">                  &#123;<span class="string">&quot;match&quot;</span>: &#123;<span class="string">&quot;address.city&quot;</span>: <span class="string">&quot;北京&quot;</span>&#125;&#125;</span><br><span class="line">                ]&#125;</span><br><span class="line">            &#125;&#125;</span><br><span class="line">        &#125;]</span><br><span class="line">    &#125;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>普通数组</strong>数据在ES中会<strong>被扁平化处理</strong>,<strong><code>nested object</code>数据</strong>类型ES在保存时<strong>不会扁平化处理</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&#123; <span class="comment">// 普通数组</span></span><br><span class="line">  <span class="string">&quot;login_name&quot;</span> : <span class="string">&quot;jack&quot;</span>,</span><br><span class="line">  <span class="string">&quot;address.province&quot;</span> : [ <span class="string">&quot;北京&quot;</span>, <span class="string">&quot;天津&quot;</span> ],</span><br><span class="line">  <span class="string">&quot;address.city&quot;</span> : [ <span class="string">&quot;北京&quot;</span>, <span class="string">&quot;天津&quot;</span> ]</span><br><span class="line">  <span class="string">&quot;address.street&quot;</span> : [ <span class="string">&quot;枫林三路&quot;</span>, <span class="string">&quot;华夏路&quot;</span> ]</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// nested数据</span></span><br><span class="line">&#123; </span><br><span class="line">  <span class="string">&quot;login_name&quot;</span> : <span class="string">&quot;jack&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;address.province&quot;</span> : <span class="string">&quot;北京&quot;</span>,</span><br><span class="line">  <span class="string">&quot;address.city&quot;</span> : <span class="string">&quot;北京&quot;</span>,</span><br><span class="line">  <span class="string">&quot;address.street&quot;</span> : <span class="string">&quot;枫林三路&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;address.province&quot;</span> : <span class="string">&quot;天津&quot;</span>,</span><br><span class="line">  <span class="string">&quot;address.city&quot;</span> : <span class="string">&quot;天津&quot;</span>,</span><br><span class="line">  <span class="string">&quot;address.street&quot;</span> : <span class="string">&quot;华夏路&quot;</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong><code>nested object</code><strong>建模</strong>缺点</strong>是采取的是<strong>类似冗余数据</strong>的方式,将多个数据放在一起,维护成本比较高,<strong>每次更新需要重新索引整个对象</strong>,包括根对象和嵌套对象。ES提供 <strong>类似关系型数据库</strong> 中 <strong><code>Join</code></strong> 的实现,使用Join数据类型实现父子关系,从而分离两个文档对象。</p><p>更新父文档无需重新索引整个子文档,子文档被新增,更改和删除也不会影响到父文档和其他子文档,父子关系元数据映射,用于确保查询时高性能,但是有一个限制<strong>父子数据包括映射其关联关系的元数据必须存在于一个<code>shard</code>中</strong>,搜索父子关系数据时,不用跨分片性能高。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line">PUT my_blogs</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;mappings&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;properties&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;blog_comments_relation&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;type&quot;</span>: <span class="string">&quot;join&quot;</span>, <span class="comment">// 指明join类型</span></span><br><span class="line">        <span class="string">&quot;relations&quot;</span>: &#123;<span class="comment">// 声明父子关系</span></span><br><span class="line">          <span class="string">&quot;blog&quot;</span>: <span class="string">&quot;comment&quot;</span><span class="comment">// blog为父文档名称,comment为子文档名称</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">&quot;content&quot;</span>: &#123;<span class="string">&quot;type&quot;</span>: <span class="string">&quot;text&quot;</span>&#125;,</span><br><span class="line">      <span class="string">&quot;title&quot;</span>: &#123;<span class="string">&quot;type&quot;</span>: <span class="string">&quot;keyword&quot;</span>&#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">PUT my_blogs/_doc/blog1 <span class="comment">// blog1为父文档id</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;title&quot;</span>: <span class="string">&quot;Learning Elasticsearch&quot;</span>,</span><br><span class="line">  <span class="string">&quot;content&quot;</span>: <span class="string">&quot;learning ELK is happy&quot;</span>,</span><br><span class="line">  <span class="string">&quot;blog_comments_relation&quot;</span>: &#123;<span class="comment">// 声明文档类型</span></span><br><span class="line">    <span class="string">&quot;name&quot;</span>: <span class="string">&quot;blog&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">PUT my_blogs/_doc/blog2 <span class="comment">// blog2为父文档id</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;title&quot;</span>: <span class="string">&quot;Learning Hadoop&quot;</span>,</span><br><span class="line">  <span class="string">&quot;content&quot;</span>: <span class="string">&quot;learning Hadoop&quot;</span>,</span><br><span class="line">  <span class="string">&quot;blog_comments_relation&quot;</span>: &#123;<span class="comment">// 声明文档类型</span></span><br><span class="line">    <span class="string">&quot;name&quot;</span>: <span class="string">&quot;blog&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 父文档和子文档必须存在相同的分片上, 当指定文档时候,必须指定它的父文档ID</span></span><br><span class="line">PUT my_blogs/_doc/comment1?routing=blog1 <span class="comment">// 使用route参数来保证,分配到相同分片</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;comment&quot;</span>: <span class="string">&quot;I am learning ELK&quot;</span>,</span><br><span class="line">  <span class="string">&quot;username&quot;</span>: <span class="string">&quot;Jack&quot;</span>,</span><br><span class="line">  <span class="string">&quot;blog_comments_relation&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;name&quot;</span>: <span class="string">&quot;comment&quot;</span>,</span><br><span class="line">    <span class="string">&quot;parent&quot;</span>: <span class="string">&quot;blog1&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">PUT my_blogs/_doc/comment2?routing=blog2 <span class="comment">// comment2为子文档id,blog2为父文档id</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;comment&quot;</span>: <span class="string">&quot;I like Hadoop!!!!!&quot;</span>,</span><br><span class="line">  <span class="string">&quot;username&quot;</span>: <span class="string">&quot;Jack&quot;</span>,</span><br><span class="line">  <span class="string">&quot;blog_comments_relation&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;name&quot;</span>: <span class="string">&quot;comment&quot;</span>,</span><br><span class="line">    <span class="string">&quot;parent&quot;</span>: <span class="string">&quot;blog2&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">PUT my_blogs/_doc/comment3?routing=blog2</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;comment&quot;</span>: <span class="string">&quot;Hello Hadoop&quot;</span>,</span><br><span class="line">  <span class="string">&quot;username&quot;</span>: <span class="string">&quot;Bob&quot;</span>,</span><br><span class="line">  <span class="string">&quot;blog_comments_relation&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;name&quot;</span>: <span class="string">&quot;comment&quot;</span>,</span><br><span class="line">    <span class="string">&quot;parent&quot;</span>: <span class="string">&quot;blog2&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST my_blogs/_search <span class="comment">// 查询所有文档</span></span><br><span class="line">&#123;&#125;</span><br><span class="line">GET my_blogs/_doc/blog2 <span class="comment">// 根据父文档ID查看</span></span><br><span class="line">POST my_blogs/_search <span class="comment">// parent_id查询,返回所有相关子文档</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;parent_id&quot;</span>: &#123;<span class="string">&quot;type&quot;</span>: <span class="string">&quot;comment&quot;</span>,<span class="string">&quot;id&quot;</span>: <span class="string">&quot;blog2&quot;</span>&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">POST my_blogs/_search <span class="comment">// has_child查询,返回父文档</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;has_child&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;type&quot;</span>: <span class="string">&quot;comment&quot;</span>,</span><br><span class="line">      <span class="string">&quot;query&quot;</span>: &#123;<span class="string">&quot;match&quot;</span>: &#123;<span class="string">&quot;username&quot;</span>: <span class="string">&quot;Jack&quot;</span>&#125;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">POST my_blogs/_search <span class="comment">// has_parent查询,返回相关的子文档</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;has_parent&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;parent_type&quot;</span>: <span class="string">&quot;blog&quot;</span>,</span><br><span class="line">      <span class="string">&quot;query&quot;</span>: &#123;<span class="string">&quot;match&quot;</span>: &#123;<span class="string">&quot;title&quot;</span>: <span class="string">&quot;Learning Hadoop&quot;</span>&#125;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">PUT my_blogs/_doc/comment3?routing=blog2 <span class="comment">//更新子文档不会影响到父文档</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;comment&quot;</span>: <span class="string">&quot;Hello Hadoop??&quot;</span>,</span><br><span class="line">  <span class="string">&quot;blog_comments_relation&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;name&quot;</span>: <span class="string">&quot;comment&quot;</span>,</span><br><span class="line">    <span class="string">&quot;parent&quot;</span>: <span class="string">&quot;blog2&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="文件系统数据"><a href="#文件系统数据" class="headerlink" title="文件系统数据"></a>文件系统数据</h3><p>若需要使用 <strong>文件路径搜索</strong> 内容,只需要为其中的字段定义一个特殊的 <strong><code>path_hierarchy</code></strong> 分词器</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">PUT /codes</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;settings&quot;</span>: &#123;<span class="string">&quot;analysis&quot;</span>: &#123;<span class="string">&quot;analyzer&quot;</span>: &#123;<span class="string">&quot;path_analyzer&quot;</span>: &#123;<span class="string">&quot;tokenizer&quot;</span>: <span class="string">&quot;path_hierarchy&quot;</span>&#125;&#125;&#125;&#125;,</span><br><span class="line">  <span class="string">&quot;mappings&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;properties&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;fileName&quot;</span>: &#123;<span class="string">&quot;type&quot;</span>: <span class="string">&quot;keyword&quot;</span>&#125;,</span><br><span class="line">      <span class="string">&quot;path&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;type&quot;</span>: <span class="string">&quot;text&quot;</span>,</span><br><span class="line">        <span class="string">&quot;analyzer&quot;</span>: <span class="string">&quot;path_analyzer&quot;</span>,</span><br><span class="line">        <span class="string">&quot;fields&quot;</span>: &#123;<span class="string">&quot;keyword&quot;</span>: &#123;<span class="string">&quot;type&quot;</span>: <span class="string">&quot;text&quot;</span>,<span class="string">&quot;analyzer&quot;</span>: <span class="string">&quot;standard&quot;</span>&#125;&#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">&quot;content&quot;</span>: &#123;<span class="string">&quot;type&quot;</span>: <span class="string">&quot;text&quot;</span>,<span class="string">&quot;analyzer&quot;</span>: <span class="string">&quot;standard&quot;</span>&#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">PUT /codes/_doc/<span class="number">1</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;fileName&quot;</span>: <span class="string">&quot;HelloWorld.java&quot;</span>,</span><br><span class="line">  <span class="string">&quot;path&quot;</span>: <span class="string">&quot;/com/eleven/first&quot;</span>,</span><br><span class="line">  <span class="string">&quot;content&quot;</span>: <span class="string">&quot;package com.eleven.first; public class HelloWorld &#123; // some code... &#125;&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">GET /codes/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;query&quot;</span>: &#123;<span class="string">&quot;match&quot;</span>: &#123;<span class="string">&quot;path&quot;</span>: <span class="string">&quot;/com&quot;</span>&#125;&#125;</span><br><span class="line">&#125;</span><br><span class="line">GET /codes/_analyze</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;text&quot;</span>: <span class="string">&quot;/a/b/c/d&quot;</span>,</span><br><span class="line">  <span class="string">&quot;field&quot;</span>: <span class="string">&quot;path&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">GET /codes/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;query&quot;</span>: &#123;<span class="string">&quot;match&quot;</span>: &#123;<span class="string">&quot;path.keyword&quot;</span>: <span class="string">&quot;/com&quot;</span>&#125;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">GET /codes/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;query&quot;</span>: &#123;<span class="string">&quot;bool&quot;</span>: &#123;<span class="string">&quot;should&quot;</span>: [</span><br><span class="line">        &#123;<span class="string">&quot;match&quot;</span>: &#123;<span class="string">&quot;path&quot;</span>: <span class="string">&quot;/com&quot;</span>&#125;&#125;,</span><br><span class="line">        &#123;<span class="string">&quot;match&quot;</span>: &#123;<span class="string">&quot;path.keyword&quot;</span>: <span class="string">&quot;/com/eleven&quot;</span>&#125;&#125;</span><br><span class="line">  ]&#125;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Scroll分页"><a href="#Scroll分页" class="headerlink" title="Scroll分页"></a>Scroll分页</h3><p>使用 <strong><code>from</code></strong> 和 <strong><code>size</code></strong> 方式查询<code>1W</code>以内的数据都OK,但若数据比较多时会出现性能问题。ES做了一个限制 <strong>不允许查询<code>1W</code>条以后的数据</strong> 。若要查询1W条以后的数据,可使用ES中提供的 <strong><code>scroll</code>游标</strong> 来查询。</p><p>在进行大量分页时,每次分页都需要将要查询数据进行重新排序,这样非常浪费性能。使用 <strong><code>scroll</code>游标</strong> 是 <strong>将要用的数据一次性排序好</strong>, 然后 <strong>分批取出</strong> 。性能要比from + size好得多,使用scroll查询后,排序后的数据会<strong>保持一定的时间</strong>, 后续分页查询都从该快照取数据。响应结果中会返回<code>_scroll_id</code>,第二次查询直接使用<code>_scroll_id</code>来查询。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">GET /es_db/_search?scroll=1m  <span class="comment">// 让排序的数据保持1分钟</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;multi_match&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;query&quot;</span>: <span class="string">&quot;广州长沙张三&quot;</span>,</span><br><span class="line">      <span class="string">&quot;fields&quot;</span>: [<span class="string">&quot;address&quot;</span>,<span class="string">&quot;name&quot;</span>]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;size&quot;</span>: <span class="number">100</span></span><br><span class="line">&#125;</span><br><span class="line">GET _search/scroll?scroll=1m</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;scroll_id&quot;</span>: <span class="string">&quot;FGluY2x1ZGVfY29udGV4dF91dWlkDXF1ZXJ5QW5kRmV0Y2gBFnJKUnZmX1pIVGVpM05TWDBQX0JJeXcAAAAAAAaeghZDUkdZN1FJNVIwYUJhYUxvNWVxd1Rn&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="SQL支持"><a href="#SQL支持" class="headerlink" title="SQL支持"></a>SQL支持</h3><p><strong><code>ES SQL</code><strong>允许执行</strong>类<code>SQL</code>查询</strong>,<strong><code>REST</code>接口</strong>、<strong>命令行</strong>或 <strong><code>JDBC</code></strong> 等都可使用 <strong><code>SQL</code></strong> 来进行 <strong>数据检索</strong> 和 <strong>数据聚合</strong> 。特点：</p><ul><li><strong>本地集成</strong>：ES SQL是<strong>专门为<code>ES</code>构建</strong>的,每个SQL查询都根据<strong>底层存储</strong>对相关节点有效执行</li><li><strong>无额外要求</strong>：不依赖其他硬件、进程、运行时库,<strong>可直接运行在<code>ES</code>集群上</strong></li><li><strong>轻量且高效</strong>：像SQL那样简洁、高效地完成查询<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">GET /es_db/_search?scroll=1m  <span class="comment">// 让排序的数据保持1分钟</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;multi_match&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;query&quot;</span>: <span class="string">&quot;广州长沙张三&quot;</span>,</span><br><span class="line">      <span class="string">&quot;fields&quot;</span>: [<span class="string">&quot;address&quot;</span>,<span class="string">&quot;name&quot;</span>]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;size&quot;</span>: <span class="number">100</span></span><br><span class="line">&#125;</span><br><span class="line">GET _search/scroll?scroll=1m</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;scroll_id&quot;</span>: <span class="string">&quot;FGluY2x1ZGVfY29udGV4dF91dWlkDXF1ZXJ5QW5kRmV0Y2gBFnJKUnZmX1pIVGVpM05TWDBQX0JJeXcAAAAAAAaeghZDUkdZN1FJNVIwYUJhYUxvNWVxd1Rn&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>目前 <strong><code>FROM</code>只支持单表</strong>, <strong>不支持<code>JOIN</code><strong>、</strong>不支持较复杂的子查询</strong>,<strong><code>format</code></strong> 表示 <strong>指定返回数据类型</strong>, 支持的类型有 <strong>逗号分隔<code>csv</code>、<code>json</code>、制表符分隔符<code>tsv</code>、<code>txt</code>、<code>yaml</code></strong> 。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">GET /_sql?format=json</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;query&quot;</span>: <span class="string">&quot;SELECT * FROM es_db limit 1&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">GET /_sql/translate <span class="comment">// 将SQL转换为DSL</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;query&quot;</span>: <span class="string">&quot;SELECT * FROM es_db limit 1&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">GET /_sql?format=json <span class="comment">// field_exp匹配字段,constant_exp匹配常量表达式,</span></span><br><span class="line">&#123; <span class="comment">// 检索address包含广州和name中包含张三的用户</span></span><br><span class="line">  <span class="string">&quot;query&quot;</span>: <span class="string">&quot;select * from es_db where MATCH(address, &#x27;广州&#x27;) or MATCH(name, &#x27;张三&#x27;) limit 10&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">GET /_sql?format=txt <span class="comment">// 统计分组</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;query&quot;</span>: <span class="string">&quot;select age, count(*) as age_cnt from es_db group by age&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h3><p>模板搜索可将一些搜索进行模板化,每次执行该搜索就直接调用模板,传入一些参数即可。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">GET /cars/_search/template <span class="comment">// 简单定义参数并传递</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;source&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;query&quot;</span>: &#123;<span class="string">&quot;match&quot;</span>: &#123;<span class="string">&quot;remark&quot;</span>: <span class="string">&quot;&#123;&#123;kw&#125;&#125;&quot;</span>&#125;&#125;,</span><br><span class="line">    <span class="string">&quot;size&quot;</span>: <span class="string">&quot;&#123;&#123;size&#125;&#125;&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;params&quot;</span>: &#123;<span class="string">&quot;kw&quot;</span>: <span class="string">&quot;大众&quot;</span>,<span class="string">&quot;size&quot;</span>: <span class="number">2</span>&#125;</span><br><span class="line">&#125;</span><br><span class="line">GET cars/_search/template <span class="comment">// toJson方式传递参数</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;source&quot;</span>: <span class="string">&quot;&quot;&quot;&#123; &quot;query&quot;: &#123; &quot;match&quot;: &#123;&#123;#toJson&#125;&#125;parameter&#123;&#123;/toJson&#125;&#125; &#125;&#125;&quot;&quot;&quot;</span>,</span><br><span class="line">  <span class="string">&quot;params&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;parameter&quot;</span>: &#123;<span class="string">&quot;remark&quot;</span>: <span class="string">&quot;大众&quot;</span>&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">GET cars/_search/template <span class="comment">// json方式传递参数</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;source&quot;</span>: &#123;<span class="string">&quot;query&quot;</span>: &#123;<span class="string">&quot;match&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;remark&quot;</span>: <span class="string">&quot;&#123;&#123;#join delimiter=&#x27; &#x27;&#125;&#125;kw&#123;&#123;/join delimiter=&#x27; &#x27;&#125;&#125;&quot;</span></span><br><span class="line">  &#125;&#125;&#125;,</span><br><span class="line">  <span class="string">&quot;params&quot;</span>: &#123;<span class="string">&quot;kw&quot;</span>: [<span class="string">&quot;大众&quot;</span>,<span class="string">&quot;标致&quot;</span>]&#125;</span><br><span class="line">&#125;</span><br><span class="line">GET cars/_search/template</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;source&quot;</span>: &#123;<span class="string">&quot;query&quot;</span>: &#123;<span class="string">&quot;range&quot;</span>: &#123;<span class="string">&quot;price&quot;</span>: &#123;</span><br><span class="line">          <span class="string">&quot;gte&quot;</span>: <span class="string">&quot;&#123;&#123;start&#125;&#125;&quot;</span>,</span><br><span class="line">          <span class="string">&quot;lte&quot;</span>: <span class="string">&quot;&#123;&#123;end&#125;&#125;&#123;&#123;^end&#125;&#125;200000&#123;&#123;/end&#125;&#125;&quot;</span> <span class="comment">// 默认值定义</span></span><br><span class="line">  &#125;&#125;&#125;&#125;,</span><br><span class="line">  <span class="string">&quot;params&quot;</span>: &#123;<span class="string">&quot;start&quot;</span>: <span class="number">100000</span>,<span class="string">&quot;end&quot;</span>: <span class="number">140000</span>&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>记录<code>template</code>实现重复调用</strong> 可使用 <strong><code>Mustache</code></strong> 语言作为 <strong>搜索请求预处理</strong>, 它提供模板 <strong>通过键值对</strong> 来替换模板中的变量。把 <strong>脚本存储在本地磁盘中</strong>, 默认位置为 <strong><code>elasticsearch\config\scripts</code></strong>, 通过引用脚本名称进行使用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">POST _scripts/test <span class="comment">// test为脚本id</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;script&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;lang&quot;</span>: <span class="string">&quot;mustache&quot;</span>, <span class="comment">// 指定mustache语言</span></span><br><span class="line">    <span class="string">&quot;source&quot;</span>: &#123;<span class="string">&quot;query&quot;</span>: &#123;<span class="string">&quot;match&quot;</span>: &#123;<span class="string">&quot;remark&quot;</span>: <span class="string">&quot;&#123;&#123;kw&#125;&#125;&quot;</span>&#125;&#125;&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">GET cars/_search/template</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;id&quot;</span>: <span class="string">&quot;test&quot;</span>, <span class="comment">// 指定调用脚本的id</span></span><br><span class="line">  <span class="string">&quot;params&quot;</span>: &#123;<span class="string">&quot;kw&quot;</span>: <span class="string">&quot;大众&quot;</span>&#125;</span><br><span class="line">&#125;</span><br><span class="line">DELETE _scripts/test <span class="comment">// 删除脚本id为test的脚本</span></span><br></pre></td></tr></table></figure><h3 id="suggest-search"><a href="#suggest-search" class="headerlink" title="suggest search"></a>suggest search</h3><p><strong><code>suggest search(completion suggest)</code></strong> 即 <strong>建议搜索</strong> 或 <strong>搜索建议</strong>, 也可叫做自动完成,类似百度中搜索联想提示功能。ES实现 <strong><code>suggest</code><strong>时 <strong>性能非常高</strong>, 其构建的</strong>不是倒排索引也不是正排索引</strong>,是纯粹用于<strong>前缀搜索</strong>的一种特殊数据结构,且会全部放在内存中,所以suggest search进行前缀搜索提示性能是非常高。需要使用suggest时候,<strong>必须在定义<code>index</code>时为其<code>mapping</code>指定开启<code>suggest</code></strong> 。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">PUT /movie</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;mappings&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;properties&quot;</span>: &#123;<span class="string">&quot;title&quot;</span>: &#123;<span class="string">&quot;type&quot;</span>: <span class="string">&quot;text&quot;</span>,<span class="string">&quot;analyzer&quot;</span>: <span class="string">&quot;ik_max_word&quot;</span>,</span><br><span class="line">        <span class="string">&quot;fields&quot;</span>: &#123;<span class="string">&quot;suggest&quot;</span>: &#123;<span class="string">&quot;type&quot;</span>: <span class="string">&quot;completion&quot;</span>,<span class="string">&quot;analyzer&quot;</span>: <span class="string">&quot;ik_max_word&quot;</span>&#125;&#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">&quot;content&quot;</span>: &#123;<span class="string">&quot;type&quot;</span>: <span class="string">&quot;text&quot;</span>,<span class="string">&quot;analyzer&quot;</span>: <span class="string">&quot;ik_max_word&quot;</span>&#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">PUT /movie/_doc/<span class="number">1</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;title&quot;</span>: <span class="string">&quot;西游记电影系列&quot;</span>,</span><br><span class="line">  <span class="string">&quot;content&quot;</span>: <span class="string">&quot;西游记之月光宝盒将与2021年进行......&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">PUT /movie/_doc/<span class="number">2</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;title&quot;</span>: <span class="string">&quot;西游记文学系列&quot;</span>,</span><br><span class="line">  <span class="string">&quot;content&quot;</span>: <span class="string">&quot;某知名网络小说作家已经完成了大话西游同名小说的出版&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">PUT /movie/_doc/<span class="number">3</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;title&quot;</span>: <span class="string">&quot;西游记之大话西游手游&quot;</span>,</span><br><span class="line">  <span class="string">&quot;content&quot;</span>: <span class="string">&quot;网易游戏近日出品了大话西游经典IP的手游,正在火爆内测中&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">GET /movie/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;suggest&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;my-suggest&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;prefix&quot;</span>: <span class="string">&quot;西游记&quot;</span>,</span><br><span class="line">      <span class="string">&quot;completion&quot;</span>: &#123;<span class="string">&quot;field&quot;</span>: <span class="string">&quot;title.suggest&quot;</span>&#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="地理位置搜索"><a href="#地理位置搜索" class="headerlink" title="地理位置搜索"></a>地理位置搜索</h3><p>ES支持 <strong>地理位置搜索</strong> 和 <strong>聚合分析</strong>, 可实现 <strong>在指定区域内搜索数据</strong>、<strong>搜索指定地点附近的数据</strong>、<strong>聚合分析指定地点附近的数据</strong> 等操作。ES中若使用地理位置搜索,必须提供一个特殊的字段类型 <strong><code>geo_point</code></strong>, 用于指定地理位置坐标点。</p><p>新增一个基于 <strong><code>geo_point</code></strong> 类型数据,可使用多种方式。多种类型描述 <strong><code>geo_point</code></strong> 类型字段时,在 <strong>搜索数据时显示格式和录入格式是统一的</strong> 。 <strong>任何数据描述</strong> 的 <strong><code>geo_point</code></strong> 类型字段, <strong>都适用地理位置搜索</strong> 。</p><p>数据范围要求 <strong>纬度范围</strong> 是<code>-90~90</code>之间, <strong>经度范围</strong> 是<code>-180~180</code>之间,经纬度数据都是 <strong>浮点数</strong> 或 <strong>数字串</strong>, 最大精度为 <strong>小数点后7位</strong> 。 <strong><code>latitude</code></strong> ： <strong>纬度</strong> 、 <strong><code>longitude</code></strong> ： <strong>经度</strong> 。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">PUT /hotel_app</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;mappings&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;properties&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;pin&quot;</span>: &#123;<span class="string">&quot;type&quot;</span>: <span class="string">&quot;geo_point&quot;</span>&#125;,</span><br><span class="line">      <span class="string">&quot;name&quot;</span>: &#123;<span class="string">&quot;type&quot;</span>: <span class="string">&quot;text&quot;</span>,<span class="string">&quot;analyzer&quot;</span>: <span class="string">&quot;ik_max_word&quot;</span>&#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">PUT /hotel_app/_doc/<span class="number">1</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;name&quot;</span>: <span class="string">&quot;七天连锁酒店&quot;</span>,</span><br><span class="line">  <span class="string">&quot;pin&quot;</span>: &#123;<span class="string">&quot;lat&quot;</span>: <span class="number">40.12</span>,<span class="string">&quot;lon&quot;</span>: -<span class="number">71.34</span>&#125;</span><br><span class="line">&#125;</span><br><span class="line">PUT /hotel_app/_doc/<span class="number">2</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;name&quot;</span>: <span class="string">&quot;维多利亚大酒店&quot;</span>,</span><br><span class="line">  <span class="string">&quot;pin&quot;</span>: <span class="string">&quot;40.99, -70.81&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">PUT /hotel_app/_doc/<span class="number">3</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;name&quot;</span>: <span class="string">&quot; 红树林宾馆&quot;</span>,</span><br><span class="line">  <span class="string">&quot;pin&quot;</span>: [<span class="number">40</span>,-<span class="number">73.81</span>] <span class="comment">// 基于数组：依次定义经度、纬度,不推荐使用</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>矩形范围搜索</strong> 传入 <strong><code>top_left</code></strong> 和 <strong><code>bottom_right</code></strong> 坐标点是有固定要求的, <strong><code>top_left</code></strong> 即 <strong>从西北向东南</strong>, <strong><code>Bottom_right</code></strong> 即<strong>从东南向西北</strong>, 且 <strong><code>top_left</code>纬度应大于<code>bottom_right</code></strong>,      <strong><code>top_left</code>经度应小于<code>bottom_right</code></strong> 。<strong>多边形范围搜索</strong> 对传入若干点坐标顺序没有任何要求,只要传入若干地理位置坐标点,即可形成多边形。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">GET /hotel_app/_doc/_search <span class="comment">// 矩形搜索</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;geo_bounding_box&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;pin&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;top_left&quot;</span>: &#123;<span class="string">&quot;lat&quot;</span>: <span class="number">41.73</span>,<span class="string">&quot;lon&quot;</span>: -<span class="number">74.1</span>&#125;,</span><br><span class="line">        <span class="string">&quot;bottom_right&quot;</span>: &#123;<span class="string">&quot;lat&quot;</span>: <span class="number">40.01</span>,<span class="string">&quot;lon&quot;</span>: -<span class="number">70.12</span>&#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">GET /hotel_app/_doc/_search <span class="comment">// 多边形搜索</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;geo_polygon&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;pin&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;points&quot;</span>: [</span><br><span class="line">          &#123;<span class="string">&quot;lat&quot;</span>: <span class="number">40.73</span>,<span class="string">&quot;lon&quot;</span>: -<span class="number">74.1</span>&#125;,</span><br><span class="line">          &#123;<span class="string">&quot;lat&quot;</span>: <span class="number">40.01</span>,<span class="string">&quot;lon&quot;</span>: -<span class="number">71.12</span>&#125;,</span><br><span class="line">          &#123;<span class="string">&quot;lat&quot;</span>: <span class="number">50.56</span>,<span class="string">&quot;lon&quot;</span>: -<span class="number">90.58</span>&#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Distance距离的单位,常用米m和千米km,建议使用 <strong><code>filter</code></strong> 来过滤 <strong><code>geo_point</code></strong> 数据,因为 <strong><code>geo_point</code></strong> 数据相关度评分计算比较耗时。使用query来搜索geo_point数据效率相对会慢一些。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">GET /hotel_app/_doc/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;bool&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;filter&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;geo_distance&quot;</span>: &#123;<span class="string">&quot;distance&quot;</span>: <span class="string">&quot;200km&quot;</span>,<span class="string">&quot;pin&quot;</span>: &#123;<span class="string">&quot;lat&quot;</span>: <span class="number">40</span>,<span class="string">&quot;lon&quot;</span>: -<span class="number">70</span>&#125;&#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">GET hotel_app/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;geo_distance&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;distance&quot;</span>: <span class="string">&quot;90km&quot;</span>,</span><br><span class="line">      <span class="string">&quot;pin&quot;</span>: &#123;<span class="string">&quot;lat&quot;</span>: <span class="number">40.55</span>,<span class="string">&quot;lon&quot;</span>: -<span class="number">71.12</span>&#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>聚合统计某位置附近区域内的数据</strong>,unit是距离单位,常用单位有米m,千米km,英里mi,<strong><code>distance_type</code><strong>是统计算法：</strong><code>sloppy_arc</code>默认算法</strong>、 <strong><code>arc</code>最高精度</strong> 、 <strong><code>plane</code>最高效率</strong> 。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">GET /hotel_app/_doc/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;size&quot;</span>: <span class="number">0</span>,</span><br><span class="line">  <span class="string">&quot;aggs&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;agg_by_pin&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;geo_distance&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;distance_type&quot;</span>: <span class="string">&quot;arc&quot;</span>,</span><br><span class="line">        <span class="string">&quot;field&quot;</span>: <span class="string">&quot;pin&quot;</span>,</span><br><span class="line">        <span class="string">&quot;origin&quot;</span>: &#123;<span class="string">&quot;lat&quot;</span>: <span class="number">40</span>,<span class="string">&quot;lon&quot;</span>: -<span class="number">70</span>&#125;,</span><br><span class="line">        <span class="string">&quot;unit&quot;</span>: <span class="string">&quot;mi&quot;</span>,</span><br><span class="line">        <span class="string">&quot;ranges&quot;</span>: [ <span class="comment">// 聚合统计分别距离某位置80英里,300英里,1000英里范围内的数据数量</span></span><br><span class="line">          &#123;<span class="string">&quot;to&quot;</span>: <span class="number">80</span>&#125;,</span><br><span class="line">          &#123;<span class="string">&quot;from&quot;</span>: <span class="number">80</span>,<span class="string">&quot;to&quot;</span>: <span class="number">300</span>&#125;,</span><br><span class="line">          &#123;<span class="string">&quot;from&quot;</span>: <span class="number">300</span>,<span class="string">&quot;to&quot;</span>: <span class="number">1000</span>&#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="ElasticSearch-进一步学习"><a href="#ElasticSearch-进一步学习" class="headerlink" title="ElasticSearch: 进一步学习"></a>ElasticSearch: 进一步学习</h2><p><strong>Elasticsearch 官方学习文档</strong>：<br><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/index.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/index.html</a><br><strong>Java API</strong>:<br><a href="https://www.elastic.co/guide/en/elasticsearch/client/java-api/current/java-api.html">https://www.elastic.co/guide/en/elasticsearch/client/java-api/current/java-api.html</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;分值计算&quot;&gt;&lt;a href=&quot;#分值计算&quot; class=&quot;headerlink&quot; title=&quot;分值计算&quot;&gt;&lt;/a&gt;分值计算&lt;/h2&gt;&lt;p&gt;首先根据用户query条件,过滤出包含指定term的doc,Field-length norm即field长度越长相关度越弱</summary>
      
    
    
    
    <category term="工具和中间件" scheme="http://example.com/categories/%E5%B7%A5%E5%85%B7%E5%92%8C%E4%B8%AD%E9%97%B4%E4%BB%B6/"/>
    
    <category term="搜索引擎技术" scheme="http://example.com/categories/%E5%B7%A5%E5%85%B7%E5%92%8C%E4%B8%AD%E9%97%B4%E4%BB%B6/%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E6%8A%80%E6%9C%AF/"/>
    
    <category term="ElasticSearch" scheme="http://example.com/categories/%E5%B7%A5%E5%85%B7%E5%92%8C%E4%B8%AD%E9%97%B4%E4%BB%B6/%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E6%8A%80%E6%9C%AF/ElasticSearch/"/>
    
    
    <category term="ElasticSearch" scheme="http://example.com/tags/ElasticSearch/"/>
    
  </entry>
  
  <entry>
    <title>ElasticSearch实战</title>
    <link href="http://example.com/blog/%E5%B7%A5%E5%85%B7%E5%92%8C%E4%B8%AD%E9%97%B4%E4%BB%B6/%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E6%8A%80%E6%9C%AF/ElasticSearch/ElasticSearch%E5%AE%9E%E6%88%98/"/>
    <id>http://example.com/blog/%E5%B7%A5%E5%85%B7%E5%92%8C%E4%B8%AD%E9%97%B4%E4%BB%B6/%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E6%8A%80%E6%9C%AF/ElasticSearch/ElasticSearch%E5%AE%9E%E6%88%98/</id>
    <published>2022-01-02T03:08:20.000Z</published>
    <updated>2022-06-23T03:28:24.121Z</updated>
    
    <content type="html"><![CDATA[<h2 id="引入pom依赖："><a href="#引入pom依赖：" class="headerlink" title="引入pom依赖："></a>引入pom依赖：</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.elasticsearch.client<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>elasticsearch-rest-high-level-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>7.6.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>使用Java API来操作ES集群初始化连接，基于 <strong><code>RestClient.builder</code></strong> 方法来构建 <strong><code>RestClientBuilder</code></strong>, 使用 <strong><code>RestHighLevelClient</code></strong> 去连接ES集群，用 <strong><code>HttpHost</code></strong> 来添加ES的节点。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 建立与ES的连接</span></span><br><span class="line"><span class="comment">// 1. 使用RestHighLevelClient构建客户端连接。</span></span><br><span class="line"><span class="comment">// 2. 基于RestClient.builder方法来构建RestClientBuilder</span></span><br><span class="line"><span class="comment">// 3. 用HttpHost来添加ES的节点</span></span><br><span class="line"><span class="type">RestClientBuilder</span> <span class="variable">restClientBuilder</span> <span class="operator">=</span> RestClient.builder(</span><br><span class="line">    <span class="keyword">new</span> <span class="title class_">HttpHost</span>(<span class="string">&quot;192.168.21.130&quot;</span>, <span class="number">9200</span>, <span class="string">&quot;http&quot;</span>)</span><br><span class="line">    , <span class="keyword">new</span> <span class="title class_">HttpHost</span>(<span class="string">&quot;192.168.21.131&quot;</span>, <span class="number">9200</span>, <span class="string">&quot;http&quot;</span>)</span><br><span class="line">    , <span class="keyword">new</span> <span class="title class_">HttpHost</span>(<span class="string">&quot;192.168.21.132&quot;</span>, <span class="number">9200</span>, <span class="string">&quot;http&quot;</span>));</span><br><span class="line"><span class="type">RestHighLevelClient</span> <span class="variable">restHighLevelClient</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RestHighLevelClient</span>(restClientBuilder);</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">add</span><span class="params">(JobDetail jobDetail)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">    <span class="comment">// 构建IndexRequest对象，用来描述ES发起请求的数据</span></span><br><span class="line">    <span class="type">IndexRequest</span> <span class="variable">indexRequest</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">IndexRequest</span>(JOB_IDX);</span><br><span class="line">    <span class="comment">// 设置文档ID</span></span><br><span class="line">    indexRequest.id(String.valueOf(jobDetail.getId()));</span><br><span class="line">    <span class="comment">// 使用FastJSON将实体类对象转换为JSON</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">json</span> <span class="operator">=</span> JSONObject.toJSONString(jobDetail);</span><br><span class="line">    <span class="comment">// 使用IndexRequest.source方法设置文档数据，并设置请求的数据为JSON格式</span></span><br><span class="line">    indexRequest.source(json, XContentType.JSON);</span><br><span class="line">    <span class="comment">// 使用ES RestHighLevelClient调用index方法发起请求，将一个文档添加到索引中</span></span><br><span class="line">    restHighLevelClient.index(indexRequest, RequestOptions.DEFAULT);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> JobDetail <span class="title function_">findById</span><span class="params">(<span class="type">long</span> id)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">    <span class="type">GetRequest</span> <span class="variable">getRequest</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">GetRequest</span>(JOB_IDX, id + <span class="string">&quot;&quot;</span>); <span class="comment">// 构建GetRequest请求</span></span><br><span class="line">    <span class="comment">// 使用RestHighLevelClient.get发送GetRequest请求，并获取到ES服务器的响应。</span></span><br><span class="line">    <span class="type">GetResponse</span> <span class="variable">getResponse</span> <span class="operator">=</span> restHighLevelClient.get(getRequest, RequestOptions.DEFAULT);</span><br><span class="line">    <span class="type">String</span> <span class="variable">json</span> <span class="operator">=</span> getResponse.getSourceAsString();<span class="comment">// 将ES响应的数据转换为JSON字符串</span></span><br><span class="line">    <span class="comment">// 并使用FastJSON将JSON字符串转换为JobDetail类对象</span></span><br><span class="line">    <span class="type">JobDetail</span> <span class="variable">jobDetail</span> <span class="operator">=</span> JSONObject.parseObject(json, JobDetail.class);</span><br><span class="line">    jobDetail.setId(id);<span class="comment">// 单独设置ID</span></span><br><span class="line">    <span class="keyword">return</span> jobDetail;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">update</span><span class="params">(JobDetail jobDetail)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">    <span class="comment">// 判断对应ID的文档是否存在，构建GetRequest</span></span><br><span class="line">    <span class="type">GetRequest</span> <span class="variable">getRequest</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">GetRequest</span>(JOB_IDX, jobDetail.getId() + <span class="string">&quot;&quot;</span>);</span><br><span class="line">    <span class="comment">// 执行client的exists方法，发起请求，判断是否存在</span></span><br><span class="line">    <span class="type">boolean</span> <span class="variable">exists</span> <span class="operator">=</span> restHighLevelClient.exists(getRequest, RequestOptions.DEFAULT);</span><br><span class="line">    <span class="keyword">if</span>(exists) &#123;</span><br><span class="line">        <span class="comment">// 构建UpdateRequest请求</span></span><br><span class="line">        <span class="type">UpdateRequest</span> <span class="variable">updateRequest</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UpdateRequest</span>(JOB_IDX, jobDetail.getId() + <span class="string">&quot;&quot;</span>);</span><br><span class="line">        <span class="comment">// 设置UpdateRequest的文档，并配置为JSON格式</span></span><br><span class="line">        updateRequest.doc(JSONObject.toJSONString(jobDetail), XContentType.JSON);</span><br><span class="line">        <span class="comment">// 执行client发起update请求</span></span><br><span class="line">        restHighLevelClient.update(updateRequest, RequestOptions.DEFAULT);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deleteById</span><span class="params">(<span class="type">long</span> id)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">    <span class="type">DeleteRequest</span> <span class="variable">deleteRequest</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DeleteRequest</span>(JOB_IDX, id + <span class="string">&quot;&quot;</span>);<span class="comment">// 构建delete请求</span></span><br><span class="line">    restHighLevelClient.delete(deleteRequest, RequestOptions.DEFAULT);<span class="comment">// 使用RestHighLevelClient执行delete请求</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> List&lt;JobDetail&gt; <span class="title function_">searchByKeywords</span><span class="params">(String keywords)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">    <span class="comment">// 构建SearchRequest检索请求 专门用来进行全文检索、关键字检索的API</span></span><br><span class="line">    <span class="type">SearchRequest</span> <span class="variable">searchRequest</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SearchRequest</span>(JOB_IDX);</span><br><span class="line">    <span class="comment">// 创建一个SearchSourceBuilder专门用于构建查询条件</span></span><br><span class="line">    <span class="type">SearchSourceBuilder</span> <span class="variable">searchSourceBuilder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SearchSourceBuilder</span>();</span><br><span class="line">    <span class="comment">// 使用QueryBuilders.multiMatchQuery构建一个查询条件（搜索title、jd），并配置到SearchSourceBuilder</span></span><br><span class="line">    <span class="type">MultiMatchQueryBuilder</span> <span class="variable">multiMatchQueryBuilder</span> <span class="operator">=</span> QueryBuilders.multiMatchQuery(keywords, <span class="string">&quot;title&quot;</span>, <span class="string">&quot;jd&quot;</span>);</span><br><span class="line">    searchSourceBuilder.query(multiMatchQueryBuilder);<span class="comment">// 将查询条件设置到查询请求构建器中</span></span><br><span class="line">    searchRequest.source(searchSourceBuilder);<span class="comment">// 调用SearchRequest.source将查询条件设置到检索请求</span></span><br><span class="line">    <span class="comment">// 执行RestHighLevelClient.search发起请求</span></span><br><span class="line">    <span class="type">SearchResponse</span> <span class="variable">searchResponse</span> <span class="operator">=</span> restHighLevelClient.search(searchRequest, RequestOptions.DEFAULT);</span><br><span class="line">    SearchHit[] hitArray = searchResponse.getHits().getHits();</span><br><span class="line">    ArrayList&lt;JobDetail&gt; jobDetailArrayList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    <span class="keyword">for</span> (SearchHit documentFields : hitArray) &#123;<span class="comment">// 遍历结果</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">json</span> <span class="operator">=</span> documentFields.getSourceAsString();<span class="comment">// 获取命中的结果</span></span><br><span class="line">        <span class="type">JobDetail</span> <span class="variable">jobDetail</span> <span class="operator">=</span> JSONObject.parseObject(json, JobDetail.class);<span class="comment">// 将JSON字符串转换为对象</span></span><br><span class="line">        jobDetail.setId(Long.parseLong(documentFields.getId()));<span class="comment">// 使用SearchHit.getId设置文档ID</span></span><br><span class="line">        jobDetailArrayList.add(jobDetail);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> jobDetailArrayList;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> Map&lt;String, Object&gt; <span class="title function_">searchByPage</span><span class="params">(String keywords, <span class="type">int</span> pageNum, <span class="type">int</span> pageSize)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">    <span class="comment">// 构建SearchRequest检索请求 专门用来进行全文检索、关键字检索的API</span></span><br><span class="line">    <span class="type">SearchRequest</span> <span class="variable">searchRequest</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SearchRequest</span>(JOB_IDX);</span><br><span class="line">    <span class="comment">// 创建一个SearchSourceBuilder专门用于构建查询条件</span></span><br><span class="line">    <span class="type">SearchSourceBuilder</span> <span class="variable">searchSourceBuilder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SearchSourceBuilder</span>();</span><br><span class="line">    <span class="comment">// 使用QueryBuilders.multiMatchQuery构建一个查询条件（搜索title、jd），并配置到SearchSourceBuilder</span></span><br><span class="line">    <span class="type">MultiMatchQueryBuilder</span> <span class="variable">multiMatchQueryBuilder</span> <span class="operator">=</span> QueryBuilders.multiMatchQuery(keywords, <span class="string">&quot;title&quot;</span>, <span class="string">&quot;jd&quot;</span>);</span><br><span class="line">    searchSourceBuilder.query(multiMatchQueryBuilder); <span class="comment">// 将查询条件设置到查询请求构建器中</span></span><br><span class="line">    searchSourceBuilder.size(pageSize);<span class="comment">// 每页显示多少条</span></span><br><span class="line">    searchSourceBuilder.from((pageNum - <span class="number">1</span>) * pageSize);<span class="comment">// 设置从第几条开始查询</span></span><br><span class="line">    searchRequest.source(searchSourceBuilder);<span class="comment">// 调用SearchRequest.source将查询条件设置到检索请求</span></span><br><span class="line">    <span class="comment">// 执行RestHighLevelClient.search发起请求</span></span><br><span class="line">    <span class="type">SearchResponse</span> <span class="variable">searchResponse</span> <span class="operator">=</span> restHighLevelClient.search(searchRequest, RequestOptions.DEFAULT);</span><br><span class="line">    SearchHit[] hitArray = searchResponse.getHits().getHits();</span><br><span class="line">    ArrayList&lt;JobDetail&gt; jobDetailArrayList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    <span class="keyword">for</span> (SearchHit documentFields : hitArray) &#123;<span class="comment">// 遍历结果</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">json</span> <span class="operator">=</span> documentFields.getSourceAsString();<span class="comment">// 获取命中的结果</span></span><br><span class="line">        <span class="type">JobDetail</span> <span class="variable">jobDetail</span> <span class="operator">=</span> JSONObject.parseObject(json, JobDetail.class);<span class="comment">// 将JSON字符串转换为对象</span></span><br><span class="line">        jobDetail.setId(Long.parseLong(documentFields.getId()));<span class="comment">// 使用SearchHit.getId设置文档ID</span></span><br><span class="line">        jobDetailArrayList.add(jobDetail);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 将结果封装到Map结构中（带有分页信息）</span></span><br><span class="line">    <span class="type">long</span> <span class="variable">totalNum</span> <span class="operator">=</span> searchResponse.getHits().getTotalHits().value;</span><br><span class="line">    Map&lt;String, Object&gt; resultMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">    resultMap.put(<span class="string">&quot;total&quot;</span>, totalNum); <span class="comment">// total -&gt; 使用SearchHits.getTotalHits().value获取到所有的记录数</span></span><br><span class="line">    resultMap.put(<span class="string">&quot;content&quot;</span>, jobDetailArrayList); content -&gt; 当前分页中的数据</span><br><span class="line">    <span class="keyword">return</span> resultMap;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> Map&lt;String, Object&gt; <span class="title function_">searchByScrollPage</span><span class="params">(String keywords, String scrollId, <span class="type">int</span> pageSize)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">    <span class="type">SearchResponse</span> <span class="variable">searchResponse</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">if</span>(scrollId == <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="comment">// 构建SearchRequest检索请求 专门用来进行全文检索、关键字检索的API</span></span><br><span class="line">        <span class="type">SearchRequest</span> <span class="variable">searchRequest</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SearchRequest</span>(JOB_IDX);</span><br><span class="line">        <span class="comment">// 创建一个SearchSourceBuilder专门用于构建查询条件</span></span><br><span class="line">        <span class="type">SearchSourceBuilder</span> <span class="variable">searchSourceBuilder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SearchSourceBuilder</span>();</span><br><span class="line">        <span class="comment">// 使用QueryBuilders.multiMatchQuery构建一个查询条件（搜索title、jd），并配置到SearchSourceBuilder</span></span><br><span class="line">        <span class="type">MultiMatchQueryBuilder</span> <span class="variable">multiMatchQueryBuilder</span> <span class="operator">=</span> QueryBuilders.multiMatchQuery(keywords, <span class="string">&quot;title&quot;</span>, <span class="string">&quot;jd&quot;</span>);</span><br><span class="line">        searchSourceBuilder.query(multiMatchQueryBuilder);<span class="comment">// 将查询条件设置到查询请求构建器中</span></span><br><span class="line">        <span class="type">HighlightBuilder</span> <span class="variable">highlightBuilder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HighlightBuilder</span>(); <span class="comment">// 设置高亮</span></span><br><span class="line">        highlightBuilder.field(<span class="string">&quot;title&quot;</span>);</span><br><span class="line">        highlightBuilder.field(<span class="string">&quot;jd&quot;</span>);</span><br><span class="line">        highlightBuilder.preTags(<span class="string">&quot;&lt;font color=&#x27;red&#x27;&gt;&quot;</span>);</span><br><span class="line">        highlightBuilder.postTags(<span class="string">&quot;&lt;/font&gt;&quot;</span>);</span><br><span class="line">        searchSourceBuilder.highlighter(highlightBuilder); <span class="comment">// 给请求设置高亮</span></span><br><span class="line">        searchSourceBuilder.size(pageSize); <span class="comment">// 每页显示多少条</span></span><br><span class="line">        searchRequest.source(searchSourceBuilder); <span class="comment">// 调用SearchRequest.source将查询条件设置到检索请求</span></span><br><span class="line">        searchRequest.scroll(TimeValue.timeValueMinutes(<span class="number">5</span>)); <span class="comment">// 设置scroll查询</span></span><br><span class="line">        <span class="comment">// 执行RestHighLevelClient.search发起请求</span></span><br><span class="line">        searchResponse = restHighLevelClient.search(searchRequest, RequestOptions.DEFAULT);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123; <span class="comment">// 第二次查询的时候，直接通过scroll id查询数据</span></span><br><span class="line">        <span class="type">SearchScrollRequest</span> <span class="variable">searchScrollRequest</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SearchScrollRequest</span>(scrollId);</span><br><span class="line">        searchScrollRequest.scroll(TimeValue.timeValueMinutes(<span class="number">5</span>));</span><br><span class="line">        <span class="comment">// 使用RestHighLevelClient发送scroll请求</span></span><br><span class="line">        searchResponse = restHighLevelClient.scroll(searchScrollRequest, RequestOptions.DEFAULT);</span><br><span class="line">    &#125;</span><br><span class="line">    SearchHit[] hitArray = searchResponse.getHits().getHits();</span><br><span class="line">    ArrayList&lt;JobDetail&gt; jobDetailArrayList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    <span class="keyword">for</span> (SearchHit documentFields : hitArray) &#123; <span class="comment">// 遍历结果，迭代ES响应的数据</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">json</span> <span class="operator">=</span> documentFields.getSourceAsString(); <span class="comment">// 获取命中的结果</span></span><br><span class="line">        <span class="type">JobDetail</span> <span class="variable">jobDetail</span> <span class="operator">=</span> JSONObject.parseObject(json, JobDetail.class); <span class="comment">// 将JSON字符串转换为对象</span></span><br><span class="line">        jobDetail.setId(Long.parseLong(documentFields.getId())); <span class="comment">// 使用SearchHit.getId设置文档ID</span></span><br><span class="line">        jobDetailArrayList.add(jobDetail);</span><br><span class="line">        <span class="comment">// 设置高亮的一些文本到实体类中 封装了高亮</span></span><br><span class="line">        Map&lt;String, HighlightField&gt; highlightFieldMap = documentFields.getHighlightFields();</span><br><span class="line">        <span class="type">HighlightField</span> <span class="variable">titleHL</span> <span class="operator">=</span> highlightFieldMap.get(<span class="string">&quot;title&quot;</span>);</span><br><span class="line">        <span class="type">HighlightField</span> <span class="variable">jdHL</span> <span class="operator">=</span> highlightFieldMap.get(<span class="string">&quot;jd&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(titleHL != <span class="literal">null</span>) &#123;</span><br><span class="line">            Text[] fragments = titleHL.getFragments(); <span class="comment">// 获取指定字段的高亮片段</span></span><br><span class="line">            <span class="type">StringBuilder</span> <span class="variable">builder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">            <span class="keyword">for</span>(Text text : fragments) &#123; <span class="comment">// 将这些高亮片段拼接成一个完整的高亮字段</span></span><br><span class="line">                builder.append(text);</span><br><span class="line">            &#125;</span><br><span class="line">            jobDetail.setTitle(builder.toString()); <span class="comment">// 设置到实体类中</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(jdHL != <span class="literal">null</span>) &#123;</span><br><span class="line">            Text[] fragments = jdHL.getFragments(); <span class="comment">// 获取指定字段的高亮片段</span></span><br><span class="line">            <span class="type">StringBuilder</span> <span class="variable">builder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>(); </span><br><span class="line">            <span class="keyword">for</span>(Text text : fragments) &#123;<span class="comment">// 将这些高亮片段拼接成一个完整的高亮字段</span></span><br><span class="line">                builder.append(text);</span><br><span class="line">            &#125;</span><br><span class="line">            jobDetail.setJd(builder.toString()); <span class="comment">// 设置到实体类中</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 将结果封装到Map结构中，带有分页信息</span></span><br><span class="line">    <span class="type">long</span> <span class="variable">totalNum</span> <span class="operator">=</span> searchResponse.getHits().getTotalHits().value;</span><br><span class="line">    Map&lt;String, Object&gt; hashMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">    hashMap.put(<span class="string">&quot;scroll_id&quot;</span>, searchResponse.getScrollId());</span><br><span class="line">    hashMap.put(<span class="string">&quot;content&quot;</span>, jobDetailArrayList); <span class="comment">// content -&gt; 当前分页中的数据</span></span><br><span class="line">    hashMap.put(<span class="string">&quot;total_num&quot;</span>, totalNum); <span class="comment">// total -&gt; 使用SearchHits.getTotalHits().value获取到所有的记录数</span></span><br><span class="line">    <span class="keyword">return</span> hashMap;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">close</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">    restHighLevelClient.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="京东商城搜索效果实现"><a href="#京东商城搜索效果实现" class="headerlink" title="京东商城搜索效果实现"></a>京东商城搜索效果实现</h2><p>ES索引库表结构分析</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">PUT product_db  <span class="comment">// 创建索引库</span></span><br><span class="line">&#123;<span class="string">&quot;mappings&quot;</span>:&#123;<span class="string">&quot;properties&quot;</span>:&#123;<span class="string">&quot;id&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;long&quot;</span>&#125;,<span class="string">&quot;name&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;text&quot;</span>,<span class="string">&quot;analyzer&quot;</span>:<span class="string">&quot;ik_max_word&quot;</span>&#125;,<span class="string">&quot;keywords&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;text&quot;</span>,<span class="string">&quot;analyzer&quot;</span>:<span class="string">&quot;ik_max_word&quot;</span>&#125;,<span class="string">&quot;subTitle&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;text&quot;</span>,<span class="string">&quot;analyzer&quot;</span>:<span class="string">&quot;ik_max_word&quot;</span>&#125;,<span class="string">&quot;salecount&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;long&quot;</span>&#125;,<span class="string">&quot;putawayDate&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;date&quot;</span>&#125;,<span class="string">&quot;price&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;double&quot;</span>&#125;,<span class="string">&quot;promotionPrice&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;keyword&quot;</span>&#125;,<span class="string">&quot;originalPrice&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;keyword&quot;</span>&#125;,<span class="string">&quot;pic&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;keyword&quot;</span>&#125;,<span class="string">&quot;sale&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;long&quot;</span>&#125;,<span class="string">&quot;hasStock&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;boolean&quot;</span>&#125;,<span class="string">&quot;brandId&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;long&quot;</span>&#125;,<span class="string">&quot;brandName&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;keyword&quot;</span>&#125;,<span class="string">&quot;brandImg&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;keyword&quot;</span>&#125;,<span class="string">&quot;categoryId&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;long&quot;</span>&#125;,<span class="string">&quot;categoryName&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;keyword&quot;</span>&#125;,<span class="string">&quot;attrs&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;nested&quot;</span>,<span class="string">&quot;properties&quot;</span>:&#123;<span class="string">&quot;attrId&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;long&quot;</span>&#125;,<span class="string">&quot;attrName&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;keyword&quot;</span>&#125;,<span class="string">&quot;attrValue&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;keyword&quot;</span>&#125;&#125;&#125;&#125;&#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 索引数据准备</span></span><br><span class="line">PUT /product_db/_doc/<span class="number">1</span></span><br><span class="line">&#123;<span class="string">&quot;id&quot;</span>:<span class="string">&quot;26&quot;</span>,<span class="string">&quot;name&quot;</span>:<span class="string">&quot;小米 11 手机&quot;</span>,<span class="string">&quot;keywords&quot;</span>:<span class="string">&quot;小米手机&quot;</span>,<span class="string">&quot;subTitle&quot;</span>:<span class="string">&quot;AI智慧全面屏 6GB +64GB 亮黑色 全网通版 移动联通电信4G手机 双卡双待 双卡双待&quot;</span>,<span class="string">&quot;price&quot;</span>:<span class="string">&quot;3999&quot;</span>,<span class="string">&quot;promotionPrice&quot;</span>:<span class="string">&quot;2999&quot;</span>,<span class="string">&quot;originalPrice&quot;</span>:<span class="string">&quot;5999&quot;</span>,<span class="string">&quot;pic&quot;</span>:<span class="string">&quot;http://macro-oss.oss-cn-shenzhen.aliyuncs.com/mall/images/20180615/xiaomi.jpg&quot;</span>,<span class="string">&quot;sale&quot;</span>:<span class="number">999</span>,<span class="string">&quot;hasStock&quot;</span>:<span class="literal">true</span>,<span class="string">&quot;salecount&quot;</span>:<span class="number">999</span>,<span class="string">&quot;putawayDate&quot;</span>:<span class="string">&quot;2021-04-01&quot;</span>,<span class="string">&quot;brandId&quot;</span>:<span class="number">6</span>,<span class="string">&quot;brandName&quot;</span>:<span class="string">&quot;小米&quot;</span>,<span class="string">&quot;brandImg&quot;</span>:<span class="string">&quot;http://macro-oss.oss-cn-shenzhen.aliyuncs.com/mall/images/20190129/1e34aef2a409119018a4c6258e39ecfb_222_222.png&quot;</span>,<span class="string">&quot;categoryId&quot;</span>:<span class="number">19</span>,<span class="string">&quot;categoryName&quot;</span>:<span class="string">&quot;手机通讯&quot;</span>,<span class="string">&quot;attrs&quot;</span>:[&#123;<span class="string">&quot;attrId&quot;</span>:<span class="number">1</span>,<span class="string">&quot;attrName&quot;</span>:<span class="string">&quot;cpu&quot;</span>,<span class="string">&quot;attrValue&quot;</span>:<span class="string">&quot;2核&quot;</span>&#125;,&#123;<span class="string">&quot;attrId&quot;</span>:<span class="number">2</span>,<span class="string">&quot;attrName&quot;</span>:<span class="string">&quot;颜色&quot;</span>,<span class="string">&quot;attrValue&quot;</span>:<span class="string">&quot;黑色&quot;</span>&#125;]&#125;</span><br><span class="line">PUT /product_db/_doc/<span class="number">2</span></span><br><span class="line">&#123;<span class="string">&quot;id&quot;</span>:<span class="string">&quot;27&quot;</span>,<span class="string">&quot;name&quot;</span>:<span class="string">&quot;小米 10 手机&quot;</span>,<span class="string">&quot;keywords&quot;</span>:<span class="string">&quot;小米手机&quot;</span>,<span class="string">&quot;subTitle&quot;</span>:<span class="string">&quot;AI智慧全面屏 4GB +64GB 亮白色 全网通版 移动联通电信4G手机 双卡双待 双卡双待&quot;</span>,<span class="string">&quot;price&quot;</span>:<span class="string">&quot;2999&quot;</span>,<span class="string">&quot;promotionPrice&quot;</span>:<span class="string">&quot;1999&quot;</span>,<span class="string">&quot;originalPrice&quot;</span>:<span class="string">&quot;3999&quot;</span>,<span class="string">&quot;pic&quot;</span>:<span class="string">&quot;http://macro-oss.oss-cn-shenzhen.aliyuncs.com/mall/images/20180615/xiaomi.jpg&quot;</span>,<span class="string">&quot;sale&quot;</span>:<span class="number">999</span>,<span class="string">&quot;hasStock&quot;</span>:<span class="literal">false</span>,<span class="string">&quot;salecount&quot;</span>:<span class="number">99</span>,<span class="string">&quot;putawayDate&quot;</span>:<span class="string">&quot;2021-04-02&quot;</span>,<span class="string">&quot;brandId&quot;</span>:<span class="number">6</span>,<span class="string">&quot;brandName&quot;</span>:<span class="string">&quot;小米&quot;</span>,<span class="string">&quot;brandImg&quot;</span>:<span class="string">&quot;http://macro-oss.oss-cn-shenzhen.aliyuncs.com/mall/images/20190129/1e34aef2a409119018a4c6258e39ecfb_222_222.png&quot;</span>,<span class="string">&quot;categoryId&quot;</span>:<span class="number">19</span>,<span class="string">&quot;categoryName&quot;</span>:<span class="string">&quot;手机通讯&quot;</span>,<span class="string">&quot;attrs&quot;</span>:[&#123;<span class="string">&quot;attrId&quot;</span>:<span class="number">1</span>,<span class="string">&quot;attrName&quot;</span>:<span class="string">&quot;cpu&quot;</span>,<span class="string">&quot;attrValue&quot;</span>:<span class="string">&quot;4核&quot;</span>&#125;,&#123;<span class="string">&quot;attrId&quot;</span>:<span class="number">2</span>,<span class="string">&quot;attrName&quot;</span>:<span class="string">&quot;颜色&quot;</span>,<span class="string">&quot;attrValue&quot;</span>:<span class="string">&quot;白色&quot;</span>&#125;]&#125;</span><br><span class="line">PUT /product_db/_doc/<span class="number">3</span></span><br><span class="line">&#123;<span class="string">&quot;id&quot;</span>:<span class="string">&quot;28&quot;</span>,<span class="string">&quot;name&quot;</span>:<span class="string">&quot;小米  手机&quot;</span>,<span class="string">&quot;keywords&quot;</span>:<span class="string">&quot;小米手机&quot;</span>,<span class="string">&quot;subTitle&quot;</span>:<span class="string">&quot;AI智慧全面屏 4GB +64GB 亮蓝色 全网通版 移动联通电信4G手机 双卡双待 双卡双待&quot;</span>,<span class="string">&quot;price&quot;</span>:<span class="string">&quot;2999&quot;</span>,<span class="string">&quot;promotionPrice&quot;</span>:<span class="string">&quot;1999&quot;</span>,<span class="string">&quot;originalPrice&quot;</span>:<span class="string">&quot;3999&quot;</span>,<span class="string">&quot;pic&quot;</span>:<span class="string">&quot;http://macro-oss.oss-cn-shenzhen.aliyuncs.com/mall/images/20180615/xiaomi.jpg&quot;</span>,<span class="string">&quot;sale&quot;</span>:<span class="number">999</span>,<span class="string">&quot;hasStock&quot;</span>:<span class="literal">true</span>,<span class="string">&quot;salecount&quot;</span>:<span class="number">199</span>,<span class="string">&quot;putawayDate&quot;</span>:<span class="string">&quot;2021-04-03&quot;</span>,<span class="string">&quot;brandId&quot;</span>:<span class="number">6</span>,<span class="string">&quot;brandName&quot;</span>:<span class="string">&quot;小米&quot;</span>,<span class="string">&quot;brandImg&quot;</span>:<span class="string">&quot;http://macro-oss.oss-cn-shenzhen.aliyuncs.com/mall/images/20190129/1e34aef2a409119018a4c6258e39ecfb_222_222.png&quot;</span>,<span class="string">&quot;categoryId&quot;</span>:<span class="number">19</span>,<span class="string">&quot;categoryName&quot;</span>:<span class="string">&quot;手机通讯&quot;</span>,<span class="string">&quot;attrs&quot;</span>:[&#123;<span class="string">&quot;attrId&quot;</span>:<span class="number">1</span>,<span class="string">&quot;attrName&quot;</span>:<span class="string">&quot;cpu&quot;</span>,<span class="string">&quot;attrValue&quot;</span>:<span class="string">&quot;2核&quot;</span>&#125;,&#123;<span class="string">&quot;attrId&quot;</span>:<span class="number">2</span>,<span class="string">&quot;attrName&quot;</span>:<span class="string">&quot;颜色&quot;</span>,<span class="string">&quot;attrValue&quot;</span>:<span class="string">&quot;蓝色&quot;</span>&#125;]&#125;</span><br><span class="line">PUT /product_db/_doc/<span class="number">4</span></span><br><span class="line">&#123;<span class="string">&quot;id&quot;</span>:<span class="string">&quot;29&quot;</span>,<span class="string">&quot;name&quot;</span>:<span class="string">&quot;Apple iPhone 8 Plus 64GB 金色特别版 移动联通电信4G手机&quot;</span>,<span class="string">&quot;keywords&quot;</span>:<span class="string">&quot;苹果手机&quot;</span>,<span class="string">&quot;subTitle&quot;</span>:<span class="string">&quot;苹果手机 Apple产品年中狂欢节，好物尽享，美在智慧！速来 &gt;&gt; 勾选[保障服务][原厂保2年]，获得AppleCare+全方位服务计划，原厂延保售后无忧。&quot;</span>,<span class="string">&quot;price&quot;</span>:<span class="string">&quot;5999&quot;</span>,<span class="string">&quot;promotionPrice&quot;</span>:<span class="string">&quot;4999&quot;</span>,<span class="string">&quot;originalPrice&quot;</span>:<span class="string">&quot;7999&quot;</span>,<span class="string">&quot;pic&quot;</span>:<span class="string">&quot;http://macro-oss.oss-cn-shenzhen.aliyuncs.com/mall/images/20180615/5acc5248N6a5f81cd.jpg&quot;</span>,<span class="string">&quot;sale&quot;</span>:<span class="number">999</span>,<span class="string">&quot;hasStock&quot;</span>:<span class="literal">true</span>,<span class="string">&quot;salecount&quot;</span>:<span class="number">1199</span>,<span class="string">&quot;putawayDate&quot;</span>:<span class="string">&quot;2021-04-04&quot;</span>,<span class="string">&quot;brandId&quot;</span>:<span class="number">51</span>,<span class="string">&quot;brandName&quot;</span>:<span class="string">&quot;苹果&quot;</span>,<span class="string">&quot;brandImg&quot;</span>:<span class="string">&quot;http://macro-oss.oss-cn-shenzhen.aliyuncs.com/mall/images/20180607/timg.jpg&quot;</span>,<span class="string">&quot;categoryId&quot;</span>:<span class="number">19</span>,<span class="string">&quot;categoryName&quot;</span>:<span class="string">&quot;手机通讯&quot;</span>,<span class="string">&quot;attrs&quot;</span>:[&#123;<span class="string">&quot;attrId&quot;</span>:<span class="number">1</span>,<span class="string">&quot;attrName&quot;</span>:<span class="string">&quot;cpu&quot;</span>,<span class="string">&quot;attrValue&quot;</span>:<span class="string">&quot;4核&quot;</span>&#125;,&#123;<span class="string">&quot;attrId&quot;</span>:<span class="number">2</span>,<span class="string">&quot;attrName&quot;</span>:<span class="string">&quot;颜色&quot;</span>,<span class="string">&quot;attrValue&quot;</span>:<span class="string">&quot;金色&quot;</span>&#125;]&#125;</span><br><span class="line">PUT /product_db/_doc/<span class="number">5</span></span><br><span class="line">&#123;<span class="string">&quot;id&quot;</span>:<span class="string">&quot;30&quot;</span>,<span class="string">&quot;name&quot;</span>:<span class="string">&quot;HLA海澜之家简约动物印花短袖T恤&quot;</span>,<span class="string">&quot;keywords&quot;</span>:<span class="string">&quot;海澜之家衣服&quot;</span>,<span class="string">&quot;subTitle&quot;</span>:<span class="string">&quot;HLA海澜之家短袖T恤&quot;</span>,<span class="string">&quot;price&quot;</span>:<span class="string">&quot;199&quot;</span>,<span class="string">&quot;promotionPrice&quot;</span>:<span class="string">&quot;99&quot;</span>,<span class="string">&quot;originalPrice&quot;</span>:<span class="string">&quot;299&quot;</span>,<span class="string">&quot;pic&quot;</span>:<span class="string">&quot;http://macro-oss.oss-cn-shenzhen.aliyuncs.com/mall/images/20180615/5ad83a4fN6ff67ecd.jpg!cc_350x449.jpg&quot;</span>,<span class="string">&quot;sale&quot;</span>:<span class="number">999</span>,<span class="string">&quot;hasStock&quot;</span>:<span class="literal">true</span>,<span class="string">&quot;salecount&quot;</span>:<span class="number">19</span>,<span class="string">&quot;putawayDate&quot;</span>:<span class="string">&quot;2021-04-05&quot;</span>,<span class="string">&quot;brandId&quot;</span>:<span class="number">50</span>,<span class="string">&quot;brandName&quot;</span>:<span class="string">&quot;海澜之家&quot;</span>,<span class="string">&quot;brandImg&quot;</span>:<span class="string">&quot;http://macro-oss.oss-cn-shenzhen.aliyuncs.com/mall/images/20190129/99d3279f1029d32b929343b09d3c72de_222_222.jpg&quot;</span>,<span class="string">&quot;categoryId&quot;</span>:<span class="number">8</span>,<span class="string">&quot;categoryName&quot;</span>:<span class="string">&quot;T恤&quot;</span>,<span class="string">&quot;attrs&quot;</span>:[&#123;<span class="string">&quot;attrId&quot;</span>:<span class="number">3</span>,<span class="string">&quot;attrName&quot;</span>:<span class="string">&quot;尺寸&quot;</span>,<span class="string">&quot;attrValue&quot;</span>:<span class="string">&quot;M&quot;</span>&#125;,&#123;<span class="string">&quot;attrId&quot;</span>:<span class="number">4</span>,<span class="string">&quot;attrName&quot;</span>:<span class="string">&quot;颜色&quot;</span>,<span class="string">&quot;attrValue&quot;</span>:<span class="string">&quot;黑色&quot;</span>&#125;]&#125;</span><br><span class="line">PUT /product_db/_doc/<span class="number">6</span></span><br><span class="line">&#123;<span class="string">&quot;id&quot;</span>:<span class="string">&quot;31&quot;</span>,<span class="string">&quot;name&quot;</span>:<span class="string">&quot;HLA海澜之家蓝灰花纹圆领针织布短袖T恤&quot;</span>,<span class="string">&quot;keywords&quot;</span>:<span class="string">&quot;海澜之家衣服&quot;</span>,<span class="string">&quot;subTitle&quot;</span>:<span class="string">&quot;HLA海澜之家短袖T恤&quot;</span>,<span class="string">&quot;price&quot;</span>:<span class="string">&quot;299&quot;</span>,<span class="string">&quot;promotionPrice&quot;</span>:<span class="string">&quot;199&quot;</span>,<span class="string">&quot;originalPrice&quot;</span>:<span class="string">&quot;299&quot;</span>,<span class="string">&quot;pic&quot;</span>:<span class="string">&quot;http://macro-oss.oss-cn-shenzhen.aliyuncs.com/mall/images/20180615/5ac98b64N70acd82f.jpg!cc_350x449.jpg&quot;</span>,<span class="string">&quot;sale&quot;</span>:<span class="number">999</span>,<span class="string">&quot;hasStock&quot;</span>:<span class="literal">true</span>,<span class="string">&quot;salecount&quot;</span>:<span class="number">399</span>,<span class="string">&quot;putawayDate&quot;</span>:<span class="string">&quot;2021-04-06&quot;</span>,<span class="string">&quot;brandId&quot;</span>:<span class="number">50</span>,<span class="string">&quot;brandName&quot;</span>:<span class="string">&quot;海澜之家&quot;</span>,<span class="string">&quot;brandImg&quot;</span>:<span class="string">&quot;http://macro-oss.oss-cn-shenzhen.aliyuncs.com/mall/images/20190129/99d3279f1029d32b929343b09d3c72de_222_222.jpg&quot;</span>,<span class="string">&quot;categoryId&quot;</span>:<span class="number">8</span>,<span class="string">&quot;categoryName&quot;</span>:<span class="string">&quot;T恤&quot;</span>,<span class="string">&quot;attrs&quot;</span>:[&#123;<span class="string">&quot;attrId&quot;</span>:<span class="number">3</span>,<span class="string">&quot;attrName&quot;</span>:<span class="string">&quot;尺寸&quot;</span>,<span class="string">&quot;attrValue&quot;</span>:<span class="string">&quot;X&quot;</span>&#125;,&#123;<span class="string">&quot;attrId&quot;</span>:<span class="number">4</span>,<span class="string">&quot;attrName&quot;</span>:<span class="string">&quot;颜色&quot;</span>,<span class="string">&quot;attrValue&quot;</span>:<span class="string">&quot;蓝灰&quot;</span>&#125;]&#125;</span><br><span class="line">PUT /product_db/_doc/<span class="number">7</span></span><br><span class="line">&#123;<span class="string">&quot;id&quot;</span>:<span class="string">&quot;32&quot;</span>,<span class="string">&quot;name&quot;</span>:<span class="string">&quot;HLA海澜之家短袖T恤男基础款&quot;</span>,<span class="string">&quot;keywords&quot;</span>:<span class="string">&quot;海澜之家衣服&quot;</span>,<span class="string">&quot;subTitle&quot;</span>:<span class="string">&quot;HLA海澜之家短袖T恤&quot;</span>,<span class="string">&quot;price&quot;</span>:<span class="string">&quot;269&quot;</span>,<span class="string">&quot;promotionPrice&quot;</span>:<span class="string">&quot;169&quot;</span>,<span class="string">&quot;originalPrice&quot;</span>:<span class="string">&quot;399&quot;</span>,<span class="string">&quot;pic&quot;</span>:<span class="string">&quot;http://macro-oss.oss-cn-shenzhen.aliyuncs.com/mall/images/20180615/5a51eb88Na4797877.jpg&quot;</span>,<span class="string">&quot;sale&quot;</span>:<span class="number">999</span>,<span class="string">&quot;hasStock&quot;</span>:<span class="literal">true</span>,<span class="string">&quot;salecount&quot;</span>:<span class="number">399</span>,<span class="string">&quot;putawayDate&quot;</span>:<span class="string">&quot;2021-04-07&quot;</span>,<span class="string">&quot;brandId&quot;</span>:<span class="number">50</span>,<span class="string">&quot;brandName&quot;</span>:<span class="string">&quot;海澜之家&quot;</span>,<span class="string">&quot;brandImg&quot;</span>:<span class="string">&quot;http://macro-oss.oss-cn-shenzhen.aliyuncs.com/mall/images/20190129/99d3279f1029d32b929343b09d3c72de_222_222.jpg&quot;</span>,<span class="string">&quot;categoryId&quot;</span>:<span class="number">8</span>,<span class="string">&quot;categoryName&quot;</span>:<span class="string">&quot;T恤&quot;</span>,<span class="string">&quot;attrs&quot;</span>:[&#123;<span class="string">&quot;attrId&quot;</span>:<span class="number">3</span>,<span class="string">&quot;attrName&quot;</span>:<span class="string">&quot;尺寸&quot;</span>,<span class="string">&quot;attrValue&quot;</span>:<span class="string">&quot;L&quot;</span>&#125;,&#123;<span class="string">&quot;attrId&quot;</span>:<span class="number">4</span>,<span class="string">&quot;attrName&quot;</span>:<span class="string">&quot;颜色&quot;</span>,<span class="string">&quot;attrValue&quot;</span>:<span class="string">&quot;蓝色&quot;</span>&#125;]&#125;</span><br><span class="line">PUT /product_db/_doc/<span class="number">8</span></span><br><span class="line">&#123;<span class="string">&quot;id&quot;</span>:<span class="string">&quot;33&quot;</span>,<span class="string">&quot;name&quot;</span>:<span class="string">&quot;小米（MI）小米电视4A &quot;</span>,<span class="string">&quot;keywords&quot;</span>:<span class="string">&quot;小米电视机家用电器&quot;</span>,<span class="string">&quot;subTitle&quot;</span>:<span class="string">&quot;小米（MI）小米电视4A 55英寸 L55M5-AZ/L55M5-AD 2GB+8GB HDR 4K超高清 人工智能网络液晶平板电视&quot;</span>,<span class="string">&quot;price&quot;</span>:<span class="string">&quot;2269&quot;</span>,<span class="string">&quot;promotionPrice&quot;</span>:<span class="string">&quot;2169&quot;</span>,<span class="string">&quot;originalPrice&quot;</span>:<span class="string">&quot;2399&quot;</span>,<span class="string">&quot;pic&quot;</span>:<span class="string">&quot;http://macro-oss.oss-cn-shenzhen.aliyuncs.com/mall/images/20180615/5b02804dN66004d73.jpg&quot;</span>,<span class="string">&quot;sale&quot;</span>:<span class="number">999</span>,<span class="string">&quot;hasStock&quot;</span>:<span class="literal">true</span>,<span class="string">&quot;salecount&quot;</span>:<span class="number">132</span>,<span class="string">&quot;putawayDate&quot;</span>:<span class="string">&quot;2021-04-09&quot;</span>,<span class="string">&quot;brandId&quot;</span>:<span class="number">6</span>,<span class="string">&quot;brandName&quot;</span>:<span class="string">&quot;小米&quot;</span>,<span class="string">&quot;brandImg&quot;</span>:<span class="string">&quot;http://macro-oss.oss-cn-shenzhen.aliyuncs.com/mall/images/20190129/1e34aef2a409119018a4c6258e39ecfb_222_222.png&quot;</span>,<span class="string">&quot;categoryId&quot;</span>:<span class="number">35</span>,<span class="string">&quot;categoryName&quot;</span>:<span class="string">&quot;手机数码&quot;</span>,<span class="string">&quot;attrs&quot;</span>:[&#123;<span class="string">&quot;attrId&quot;</span>:<span class="number">5</span>,<span class="string">&quot;attrName&quot;</span>:<span class="string">&quot;屏幕尺寸&quot;</span>,<span class="string">&quot;attrValue&quot;</span>:<span class="string">&quot;52&quot;</span>&#125;,&#123;<span class="string">&quot;attrId&quot;</span>:<span class="number">6</span>,<span class="string">&quot;attrName&quot;</span>:<span class="string">&quot;机身颜色&quot;</span>,<span class="string">&quot;attrValue&quot;</span>:<span class="string">&quot;黑色&quot;</span>&#125;]&#125;</span><br><span class="line">PUT /product_db/_doc/<span class="number">9</span></span><br><span class="line">&#123;<span class="string">&quot;id&quot;</span>:<span class="string">&quot;34&quot;</span>,<span class="string">&quot;name&quot;</span>:<span class="string">&quot;小米（MI）小米电视4A 65英寸&quot;</span>,<span class="string">&quot;keywords&quot;</span>:<span class="string">&quot;小米电视机家用电器&quot;</span>,<span class="string">&quot;subTitle&quot;</span>:<span class="string">&quot;小米（MI）小米电视4A 65英寸 L55M5-AZ/L55M5-AD 2GB+8GB HDR 4K超高清 人工智能网络液晶平板电视&quot;</span>,<span class="string">&quot;price&quot;</span>:<span class="string">&quot;3269&quot;</span>,<span class="string">&quot;promotionPrice&quot;</span>:<span class="string">&quot;3169&quot;</span>,<span class="string">&quot;originalPrice&quot;</span>:<span class="string">&quot;3399&quot;</span>,<span class="string">&quot;pic&quot;</span>:<span class="string">&quot;http://macro-oss.oss-cn-shenzhen.aliyuncs.com/mall/images/20180615/5b028530N51eee7d4.jpg&quot;</span>,<span class="string">&quot;sale&quot;</span>:<span class="number">999</span>,<span class="string">&quot;hasStock&quot;</span>:<span class="literal">true</span>,<span class="string">&quot;salecount&quot;</span>:<span class="number">999</span>,<span class="string">&quot;putawayDate&quot;</span>:<span class="string">&quot;2021-04-10&quot;</span>,<span class="string">&quot;brandId&quot;</span>:<span class="number">6</span>,<span class="string">&quot;brandName&quot;</span>:<span class="string">&quot;小米&quot;</span>,<span class="string">&quot;brandImg&quot;</span>:<span class="string">&quot;http://macro-oss.oss-cn-shenzhen.aliyuncs.com/mall/images/20190129/1e34aef2a409119018a4c6258e39ecfb_222_222.png&quot;</span>,<span class="string">&quot;categoryId&quot;</span>:<span class="number">35</span>,<span class="string">&quot;categoryName&quot;</span>:<span class="string">&quot;手机数码&quot;</span>,<span class="string">&quot;attrs&quot;</span>:[&#123;<span class="string">&quot;attrId&quot;</span>:<span class="number">5</span>,<span class="string">&quot;attrName&quot;</span>:<span class="string">&quot;屏幕尺寸&quot;</span>,<span class="string">&quot;attrValue&quot;</span>:<span class="string">&quot;65&quot;</span>&#125;,&#123;<span class="string">&quot;attrId&quot;</span>:<span class="number">6</span>,<span class="string">&quot;attrName&quot;</span>:<span class="string">&quot;机身颜色&quot;</span>,<span class="string">&quot;attrValue&quot;</span>:<span class="string">&quot;金色&quot;</span>&#125;]&#125;</span><br><span class="line">PUT /product_db/_doc/<span class="number">10</span></span><br><span class="line">&#123;<span class="string">&quot;id&quot;</span>:<span class="string">&quot;35&quot;</span>,<span class="string">&quot;name&quot;</span>:<span class="string">&quot;耐克NIKE 男子 休闲鞋 ROSHE RUN 运动鞋 511881-010黑色41码&quot;</span>,<span class="string">&quot;keywords&quot;</span>:<span class="string">&quot;耐克运动鞋 鞋子&quot;</span>,<span class="string">&quot;subTitle&quot;</span>:<span class="string">&quot;耐克NIKE 男子 休闲鞋 ROSHE RUN 运动鞋 511881-010黑色41码&quot;</span>,<span class="string">&quot;price&quot;</span>:<span class="string">&quot;569&quot;</span>,<span class="string">&quot;promotionPrice&quot;</span>:<span class="string">&quot;369&quot;</span>,<span class="string">&quot;originalPrice&quot;</span>:<span class="string">&quot;899&quot;</span>,<span class="string">&quot;pic&quot;</span>:<span class="string">&quot;http://macro-oss.oss-cn-shenzhen.aliyuncs.com/mall/images/20180615/5b235bb9Nf606460b.jpg&quot;</span>,<span class="string">&quot;sale&quot;</span>:<span class="number">999</span>,<span class="string">&quot;hasStock&quot;</span>:<span class="literal">true</span>,<span class="string">&quot;salecount&quot;</span>:<span class="number">399</span>,<span class="string">&quot;putawayDate&quot;</span>:<span class="string">&quot;2021-04-11&quot;</span>,<span class="string">&quot;brandId&quot;</span>:<span class="number">58</span>,<span class="string">&quot;brandName&quot;</span>:<span class="string">&quot;NIKE&quot;</span>,<span class="string">&quot;brandImg&quot;</span>:<span class="string">&quot;http://macro-oss.oss-cn-shenzhen.aliyuncs.com/mall/images/20180615/timg (51).jpg&quot;</span>,<span class="string">&quot;categoryId&quot;</span>:<span class="number">29</span>,<span class="string">&quot;categoryName&quot;</span>:<span class="string">&quot;男鞋&quot;</span>,<span class="string">&quot;attrs&quot;</span>:[&#123;<span class="string">&quot;attrId&quot;</span>:<span class="number">7</span>,<span class="string">&quot;attrName&quot;</span>:<span class="string">&quot;尺码&quot;</span>,<span class="string">&quot;attrValue&quot;</span>:<span class="string">&quot;42&quot;</span>&#125;,&#123;<span class="string">&quot;attrId&quot;</span>:<span class="number">8</span>,<span class="string">&quot;attrName&quot;</span>:<span class="string">&quot;颜色&quot;</span>,<span class="string">&quot;attrValue&quot;</span>:<span class="string">&quot;黑色&quot;</span>&#125;]&#125;</span><br><span class="line">PUT /product_db/_doc/<span class="number">11</span></span><br><span class="line">&#123;<span class="string">&quot;id&quot;</span>:<span class="string">&quot;36&quot;</span>,<span class="string">&quot;name&quot;</span>:<span class="string">&quot;耐克NIKE 男子 气垫 休闲鞋 AIR MAX 90 ESSENTIAL 运动鞋 AJ1285-101白色41码&quot;</span>,<span class="string">&quot;keywords&quot;</span>:<span class="string">&quot;耐克运动鞋 鞋子&quot;</span>,<span class="string">&quot;subTitle&quot;</span>:<span class="string">&quot;AIR MAX 90 ESSENTIAL 运动鞋 AJ1285-101白色&quot;</span>,<span class="string">&quot;price&quot;</span>:<span class="string">&quot;769&quot;</span>,<span class="string">&quot;promotionPrice&quot;</span>:<span class="string">&quot;469&quot;</span>,<span class="string">&quot;originalPrice&quot;</span>:<span class="string">&quot;999&quot;</span>,<span class="string">&quot;pic&quot;</span>:<span class="string">&quot;http://macro-oss.oss-cn-shenzhen.aliyuncs.com/mall/images/20180615/5b19403eN9f0b3cb8.jpg&quot;</span>,<span class="string">&quot;sale&quot;</span>:<span class="number">999</span>,<span class="string">&quot;hasStock&quot;</span>:<span class="literal">true</span>,<span class="string">&quot;salecount&quot;</span>:<span class="number">499</span>,<span class="string">&quot;putawayDate&quot;</span>:<span class="string">&quot;2021-04-13&quot;</span>,<span class="string">&quot;brandId&quot;</span>:<span class="number">58</span>,<span class="string">&quot;brandName&quot;</span>:<span class="string">&quot;NIKE&quot;</span>,<span class="string">&quot;brandImg&quot;</span>:<span class="string">&quot;http://macro-oss.oss-cn-shenzhen.aliyuncs.com/mall/images/20180615/timg (51).jpg&quot;</span>,<span class="string">&quot;categoryId&quot;</span>:<span class="number">29</span>,<span class="string">&quot;categoryName&quot;</span>:<span class="string">&quot;男鞋&quot;</span>,<span class="string">&quot;attrs&quot;</span>:[&#123;<span class="string">&quot;attrId&quot;</span>:<span class="number">7</span>,<span class="string">&quot;attrName&quot;</span>:<span class="string">&quot;尺码&quot;</span>,<span class="string">&quot;attrValue&quot;</span>:<span class="string">&quot;44&quot;</span>&#125;,&#123;<span class="string">&quot;attrId&quot;</span>:<span class="number">8</span>,<span class="string">&quot;attrName&quot;</span>:<span class="string">&quot;颜色&quot;</span>,<span class="string">&quot;attrValue&quot;</span>:<span class="string">&quot;白色&quot;</span>&#125;]&#125;</span><br><span class="line">PUT /product_db/_doc/<span class="number">12</span></span><br><span class="line">&#123;<span class="string">&quot;id&quot;</span>:<span class="string">&quot;37&quot;</span>,<span class="string">&quot;name&quot;</span>:<span class="string">&quot;(华为)HUAWEI MateBook X Pro 2019款 13.9英寸3K触控全面屏 轻薄笔记本&quot;</span>,<span class="string">&quot;keywords&quot;</span>:<span class="string">&quot;轻薄笔记本华为 笔记本电脑&quot;</span>,<span class="string">&quot;subTitle&quot;</span>:<span class="string">&quot;轻薄华为笔记本 电脑&quot;</span>,<span class="string">&quot;price&quot;</span>:<span class="string">&quot;4769&quot;</span>,<span class="string">&quot;promotionPrice&quot;</span>:<span class="string">&quot;4469&quot;</span>,<span class="string">&quot;originalPrice&quot;</span>:<span class="string">&quot;4999&quot;</span>,<span class="string">&quot;pic&quot;</span>:<span class="string">&quot;http://tuling-mall.oss-cn-shenzhen.aliyuncs.com/tulingmall/images/20200317/800_800_1555752016264mp.png&quot;</span>,<span class="string">&quot;sale&quot;</span>:<span class="number">999</span>,<span class="string">&quot;hasStock&quot;</span>:<span class="literal">true</span>,<span class="string">&quot;salecount&quot;</span>:<span class="number">699</span>,<span class="string">&quot;putawayDate&quot;</span>:<span class="string">&quot;2021-04-14&quot;</span>,<span class="string">&quot;brandId&quot;</span>:<span class="number">3</span>,<span class="string">&quot;brandName&quot;</span>:<span class="string">&quot;华为&quot;</span>,<span class="string">&quot;brandImg&quot;</span>:<span class="string">&quot;http://macro-oss.oss-cn-shenzhen.aliyuncs.com/mall/images/20190129/17f2dd9756d9d333bee8e60ce8c03e4c_222_222.jpg&quot;</span>,<span class="string">&quot;categoryId&quot;</span>:<span class="number">19</span>,<span class="string">&quot;categoryName&quot;</span>:<span class="string">&quot;手机通讯&quot;</span>,<span class="string">&quot;attrs&quot;</span>:[&#123;<span class="string">&quot;attrId&quot;</span>:<span class="number">9</span>,<span class="string">&quot;attrName&quot;</span>:<span class="string">&quot;容量&quot;</span>,<span class="string">&quot;attrValue&quot;</span>:<span class="string">&quot;16G&quot;</span>&#125;,&#123;<span class="string">&quot;attrId&quot;</span>:<span class="number">10</span>,<span class="string">&quot;attrName&quot;</span>:<span class="string">&quot;网络&quot;</span>,<span class="string">&quot;attrValue&quot;</span>:<span class="string">&quot;4G&quot;</span>&#125;]&#125;</span><br><span class="line">PUT /product_db/_doc/<span class="number">13</span></span><br><span class="line">&#123;<span class="string">&quot;id&quot;</span>:<span class="string">&quot;38&quot;</span>,<span class="string">&quot;name&quot;</span>:<span class="string">&quot;华为nova6se 手机 绮境森林 全网通（8G+128G)&quot;</span>,<span class="string">&quot;keywords&quot;</span>:<span class="string">&quot;轻薄笔记本华为 手机&quot;</span>,<span class="string">&quot;subTitle&quot;</span>:<span class="string">&quot;华为nova6se 手机&quot;</span>,<span class="string">&quot;price&quot;</span>:<span class="string">&quot;6769&quot;</span>,<span class="string">&quot;promotionPrice&quot;</span>:<span class="string">&quot;6469&quot;</span>,<span class="string">&quot;originalPrice&quot;</span>:<span class="string">&quot;6999&quot;</span>,<span class="string">&quot;pic&quot;</span>:<span class="string">&quot;http://macro-oss.oss-cn-shenzhen.aliyuncs.com/mall/images/20180607/5ac1bf58Ndefaac16.jpg&quot;</span>,<span class="string">&quot;sale&quot;</span>:<span class="number">999</span>,<span class="string">&quot;hasStock&quot;</span>:<span class="literal">true</span>,<span class="string">&quot;salecount&quot;</span>:<span class="number">899</span>,<span class="string">&quot;putawayDate&quot;</span>:<span class="string">&quot;2021-04-15&quot;</span>,<span class="string">&quot;brandId&quot;</span>:<span class="number">3</span>,<span class="string">&quot;brandName&quot;</span>:<span class="string">&quot;华为&quot;</span>,<span class="string">&quot;brandImg&quot;</span>:<span class="string">&quot;http://macro-oss.oss-cn-shenzhen.aliyuncs.com/mall/images/20190129/17f2dd9756d9d333bee8e60ce8c03e4c_222_222.jpg&quot;</span>,<span class="string">&quot;categoryId&quot;</span>:<span class="number">19</span>,<span class="string">&quot;categoryName&quot;</span>:<span class="string">&quot;手机通讯&quot;</span>,<span class="string">&quot;attrs&quot;</span>:[&#123;<span class="string">&quot;attrId&quot;</span>:<span class="number">9</span>,<span class="string">&quot;attrName&quot;</span>:<span class="string">&quot;容量&quot;</span>,<span class="string">&quot;attrValue&quot;</span>:<span class="string">&quot;64G&quot;</span>&#125;,&#123;<span class="string">&quot;attrId&quot;</span>:<span class="number">10</span>,<span class="string">&quot;attrName&quot;</span>:<span class="string">&quot;网络&quot;</span>,<span class="string">&quot;attrValue&quot;</span>:<span class="string">&quot;5G&quot;</span>&#125;]&#125;</span><br><span class="line">PUT /product_db/_doc/<span class="number">14</span></span><br><span class="line">&#123;<span class="string">&quot;id&quot;</span>:<span class="string">&quot;39&quot;</span>,<span class="string">&quot;name&quot;</span>:<span class="string">&quot;iPhone7/6s/8钢化膜苹果8Plus全屏复盖抗蓝光防窥防偷看手机膜&quot;</span>,<span class="string">&quot;keywords&quot;</span>:<span class="string">&quot;手机膜&quot;</span>,<span class="string">&quot;subTitle&quot;</span>:<span class="string">&quot;iPhone7/6s/8钢化膜苹果8Plus全屏复盖抗蓝光防窥防偷看手机膜&quot;</span>,<span class="string">&quot;price&quot;</span>:<span class="string">&quot;29&quot;</span>,<span class="string">&quot;promotionPrice&quot;</span>:<span class="string">&quot;39&quot;</span>,<span class="string">&quot;originalPrice&quot;</span>:<span class="string">&quot;49&quot;</span>,<span class="string">&quot;pic&quot;</span>:<span class="string">&quot;http://tuling-mall.oss-cn-shenzhen.aliyuncs.com/tulingmall/images/20200311/6df99dab78bb2014.jpg&quot;</span>,<span class="string">&quot;sale&quot;</span>:<span class="number">999</span>,<span class="string">&quot;hasStock&quot;</span>:<span class="literal">true</span>,<span class="string">&quot;salecount&quot;</span>:<span class="number">799</span>,<span class="string">&quot;putawayDate&quot;</span>:<span class="string">&quot;2021-04-16&quot;</span>,<span class="string">&quot;brandId&quot;</span>:<span class="number">51</span>,<span class="string">&quot;brandName&quot;</span>:<span class="string">&quot;苹果&quot;</span>,<span class="string">&quot;brandImg&quot;</span>:<span class="string">&quot;http://tuling-mall.oss-cn-shenzhen.aliyuncs.com/tulingmall/images/20200311/2b84746650fc122d67749a876c453619.png&quot;</span>,<span class="string">&quot;categoryId&quot;</span>:<span class="number">30</span>,<span class="string">&quot;categoryName&quot;</span>:<span class="string">&quot;手机配件&quot;</span>,<span class="string">&quot;attrs&quot;</span>:[&#123;<span class="string">&quot;attrId&quot;</span>:<span class="number">11</span>,<span class="string">&quot;attrName&quot;</span>:<span class="string">&quot;手机膜-材料&quot;</span>,<span class="string">&quot;attrValue&quot;</span>:<span class="string">&quot;钢化&quot;</span>&#125;,&#123;<span class="string">&quot;attrId&quot;</span>:<span class="number">12</span>,<span class="string">&quot;attrName&quot;</span>:<span class="string">&quot;手机膜-颜色&quot;</span>,<span class="string">&quot;attrValue&quot;</span>:<span class="string">&quot;白色&quot;</span>&#125;]&#125;</span><br><span class="line">PUT /product_db/_doc/<span class="number">15</span></span><br><span class="line">&#123;<span class="string">&quot;id&quot;</span>:<span class="string">&quot;40&quot;</span>,<span class="string">&quot;name&quot;</span>:<span class="string">&quot;七匹狼短袖T恤男纯棉舒适春夏修身运动休闲短袖三条装 圆领3条装&quot;</span>,<span class="string">&quot;keywords&quot;</span>:<span class="string">&quot;七匹狼服装 衣服&quot;</span>,<span class="string">&quot;subTitle&quot;</span>:<span class="string">&quot;七匹狼短袖T恤男纯棉舒适春夏修身运动休闲短袖三条装 圆领3条装&quot;</span>,<span class="string">&quot;price&quot;</span>:<span class="string">&quot;129&quot;</span>,<span class="string">&quot;promotionPrice&quot;</span>:<span class="string">&quot;139&quot;</span>,<span class="string">&quot;originalPrice&quot;</span>:<span class="string">&quot;149&quot;</span>,<span class="string">&quot;pic&quot;</span>:<span class="string">&quot;http://tuling-mall.oss-cn-shenzhen.aliyuncs.com/tulingmall/images/20200311/19e846e727dff337.jpg&quot;</span>,<span class="string">&quot;sale&quot;</span>:<span class="number">999</span>,<span class="string">&quot;hasStock&quot;</span>:<span class="literal">true</span>,<span class="string">&quot;salecount&quot;</span>:<span class="number">199</span>,<span class="string">&quot;putawayDate&quot;</span>:<span class="string">&quot;2021-04-20&quot;</span>,<span class="string">&quot;brandId&quot;</span>:<span class="number">49</span>,<span class="string">&quot;brandName&quot;</span>:<span class="string">&quot;七匹狼&quot;</span>,<span class="string">&quot;brandImg&quot;</span>:<span class="string">&quot;http://macro-oss.oss-cn-shenzhen.aliyuncs.com/mall/images/20190129/18d8bc3eb13533fab466d702a0d3fd1f40345bcd.jpg&quot;</span>,<span class="string">&quot;categoryId&quot;</span>:<span class="number">8</span>,<span class="string">&quot;categoryName&quot;</span>:<span class="string">&quot;T恤&quot;</span>,<span class="string">&quot;attrs&quot;</span>:[&#123;<span class="string">&quot;attrId&quot;</span>:<span class="number">3</span>,<span class="string">&quot;attrName&quot;</span>:<span class="string">&quot;尺寸&quot;</span>,<span class="string">&quot;attrValue&quot;</span>:<span class="string">&quot;M&quot;</span>&#125;,&#123;<span class="string">&quot;attrId&quot;</span>:<span class="number">4</span>,<span class="string">&quot;attrName&quot;</span>:<span class="string">&quot;颜色&quot;</span>,<span class="string">&quot;attrValue&quot;</span>:<span class="string">&quot;白色&quot;</span>&#125;]&#125;</span><br><span class="line">PUT /product_db/_doc/<span class="number">16</span></span><br><span class="line">&#123;<span class="string">&quot;id&quot;</span>:<span class="string">&quot;41&quot;</span>,<span class="string">&quot;name&quot;</span>:<span class="string">&quot;华为P40 Pro手机&quot;</span>,<span class="string">&quot;keywords&quot;</span>:<span class="string">&quot;华为手机&quot;</span>,<span class="string">&quot;subTitle&quot;</span>:<span class="string">&quot;华为P40 Pro手机&quot;</span>,<span class="string">&quot;price&quot;</span>:<span class="string">&quot;2129&quot;</span>,<span class="string">&quot;promotionPrice&quot;</span>:<span class="string">&quot;2139&quot;</span>,<span class="string">&quot;originalPrice&quot;</span>:<span class="string">&quot;2149&quot;</span>,<span class="string">&quot;pic&quot;</span>:<span class="string">&quot;http://macro-oss.oss-cn-shenzhen.aliyuncs.com/mall/images/20180607/5ac1bf58Ndefaac16.jpg&quot;</span>,<span class="string">&quot;sale&quot;</span>:<span class="number">999</span>,<span class="string">&quot;hasStock&quot;</span>:<span class="literal">true</span>,<span class="string">&quot;salecount&quot;</span>:<span class="number">199</span>,<span class="string">&quot;putawayDate&quot;</span>:<span class="string">&quot;2021-05-03&quot;</span>,<span class="string">&quot;brandId&quot;</span>:<span class="number">3</span>,<span class="string">&quot;brandName&quot;</span>:<span class="string">&quot;华为&quot;</span>,<span class="string">&quot;brandImg&quot;</span>:<span class="string">&quot;http://macro-oss.oss-cn-shenzhen.aliyuncs.com/mall/images/20190129/17f2dd9756d9d333bee8e60ce8c03e4c_222_222.jpg&quot;</span>,<span class="string">&quot;categoryId&quot;</span>:<span class="number">19</span>,<span class="string">&quot;categoryName&quot;</span>:<span class="string">&quot;手机通讯&quot;</span>,<span class="string">&quot;attrs&quot;</span>:[&#123;<span class="string">&quot;attrId&quot;</span>:<span class="number">9</span>,<span class="string">&quot;attrName&quot;</span>:<span class="string">&quot;容量&quot;</span>,<span class="string">&quot;attrValue&quot;</span>:<span class="string">&quot;128G&quot;</span>&#125;,&#123;<span class="string">&quot;attrId&quot;</span>:<span class="number">10</span>,<span class="string">&quot;attrName&quot;</span>:<span class="string">&quot;网络&quot;</span>,<span class="string">&quot;attrValue&quot;</span>:<span class="string">&quot;5G&quot;</span>&#125;]&#125;</span><br><span class="line">PUT /product_db/_doc/<span class="number">17</span></span><br><span class="line">&#123;<span class="string">&quot;id&quot;</span>:<span class="string">&quot;42&quot;</span>,<span class="string">&quot;name&quot;</span>:<span class="string">&quot;朵唯智能手机 4G全网通 老人学生双卡双待手机&quot;</span>,<span class="string">&quot;keywords&quot;</span>:<span class="string">&quot;朵唯手机&quot;</span>,<span class="string">&quot;subTitle&quot;</span>:<span class="string">&quot;朵唯手机后置双摄，国产虎贲芯片！优化散热结构！浅薄机身！朵唯4月特惠！&quot;</span>,<span class="string">&quot;price&quot;</span>:<span class="string">&quot;3129&quot;</span>,<span class="string">&quot;promotionPrice&quot;</span>:<span class="string">&quot;3139&quot;</span>,<span class="string">&quot;originalPrice&quot;</span>:<span class="string">&quot;3249&quot;</span>,<span class="string">&quot;pic&quot;</span>:<span class="string">&quot;http://macro-oss.oss-cn-shenzhen.aliyuncs.com/mall/images/20180615/xiaomi.jpg&quot;</span>,<span class="string">&quot;sale&quot;</span>:<span class="number">999</span>,<span class="string">&quot;hasStock&quot;</span>:<span class="literal">true</span>,<span class="string">&quot;salecount&quot;</span>:<span class="number">1199</span>,<span class="string">&quot;putawayDate&quot;</span>:<span class="string">&quot;2021-06-01&quot;</span>,<span class="string">&quot;brandId&quot;</span>:<span class="number">59</span>,<span class="string">&quot;brandName&quot;</span>:<span class="string">&quot;朵唯&quot;</span>,<span class="string">&quot;brandImg&quot;</span>:<span class="string">&quot;http://tuling-mall.oss-cn-shenzhen.aliyuncs.com/tulingmall/images/20200311/2b84746650fc122d67749a876c453619.png&quot;</span>,<span class="string">&quot;categoryId&quot;</span>:<span class="number">19</span>,<span class="string">&quot;categoryName&quot;</span>:<span class="string">&quot;手机通讯&quot;</span>,<span class="string">&quot;attrs&quot;</span>:[&#123;<span class="string">&quot;attrId&quot;</span>:<span class="number">9</span>,<span class="string">&quot;attrName&quot;</span>:<span class="string">&quot;容量&quot;</span>,<span class="string">&quot;attrValue&quot;</span>:<span class="string">&quot;32G&quot;</span>&#125;,&#123;<span class="string">&quot;attrId&quot;</span>:<span class="number">10</span>,<span class="string">&quot;attrName&quot;</span>:<span class="string">&quot;网络&quot;</span>,<span class="string">&quot;attrValue&quot;</span>:<span class="string">&quot;4G&quot;</span>&#125;]&#125;</span><br></pre></td></tr></table></figure><p>检索DSL语句构建</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">POST /product_db/_doc/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;from&quot;</span>: <span class="number">0</span>,</span><br><span class="line">  <span class="string">&quot;size&quot;</span>: <span class="number">8</span>,</span><br><span class="line">  <span class="string">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;bool&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;must&quot;</span>: [&#123;<span class="string">&quot;match&quot;</span>: &#123;<span class="string">&quot;name&quot;</span>: &#123;<span class="string">&quot;query&quot;</span>: <span class="string">&quot;手机&quot;</span>&#125;&#125;&#125;],</span><br><span class="line">      <span class="string">&quot;filter&quot;</span>: [</span><br><span class="line">        &#123;<span class="string">&quot;term&quot;</span>: &#123;<span class="string">&quot;hasStock&quot;</span>: &#123;<span class="string">&quot;value&quot;</span>: <span class="literal">true</span>&#125;&#125;&#125;,</span><br><span class="line">        &#123;<span class="string">&quot;range&quot;</span>: &#123;<span class="string">&quot;price&quot;</span>: &#123;<span class="string">&quot;from&quot;</span>: <span class="string">&quot;1&quot;</span>,<span class="string">&quot;to&quot;</span>: <span class="string">&quot;5000&quot;</span>&#125;&#125;&#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;sort&quot;</span>: [&#123;<span class="string">&quot;salecount&quot;</span>: &#123;<span class="string">&quot;order&quot;</span>: <span class="string">&quot;asc&quot;</span>&#125;&#125;],</span><br><span class="line">  <span class="string">&quot;aggregations&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;brand_agg&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;terms&quot;</span>: &#123;<span class="string">&quot;field&quot;</span>: <span class="string">&quot;brandId&quot;</span>,<span class="string">&quot;size&quot;</span>: <span class="number">50</span>&#125;,</span><br><span class="line">      <span class="string">&quot;aggregations&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;brand_name_agg&quot;</span>: &#123;<span class="string">&quot;terms&quot;</span>: &#123;<span class="string">&quot;field&quot;</span>: <span class="string">&quot;brandName&quot;</span>&#125;&#125;,</span><br><span class="line">        <span class="string">&quot;brand_img_agg&quot;</span>: &#123;<span class="string">&quot;terms&quot;</span>: &#123;<span class="string">&quot;field&quot;</span>: <span class="string">&quot;brandImg&quot;</span>&#125;&#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;category_agg&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;terms&quot;</span>: &#123;<span class="string">&quot;field&quot;</span>: <span class="string">&quot;categoryId&quot;</span>,<span class="string">&quot;size&quot;</span>: <span class="number">50</span>,<span class="string">&quot;min_doc_count&quot;</span>: <span class="number">1</span>&#125;,</span><br><span class="line">      <span class="string">&quot;aggregations&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;category_name_agg&quot;</span>: &#123;<span class="string">&quot;terms&quot;</span>: &#123;<span class="string">&quot;field&quot;</span>: <span class="string">&quot;categoryName&quot;</span>&#125;&#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;attr_agg&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;nested&quot;</span>: &#123;<span class="string">&quot;path&quot;</span>: <span class="string">&quot;attrs&quot;</span>&#125;,</span><br><span class="line">      <span class="string">&quot;aggregations&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;attr_id_agg&quot;</span>: &#123;</span><br><span class="line">          <span class="string">&quot;terms&quot;</span>: &#123;<span class="string">&quot;field&quot;</span>: <span class="string">&quot;attrs.attrId&quot;</span>&#125;,</span><br><span class="line">          <span class="string">&quot;aggregations&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;attr_name_agg&quot;</span>: &#123;<span class="string">&quot;terms&quot;</span>: &#123;<span class="string">&quot;field&quot;</span>: <span class="string">&quot;attrs.attrName&quot;</span>&#125;&#125;,</span><br><span class="line">            <span class="string">&quot;attr_value_agg&quot;</span>: &#123;<span class="string">&quot;terms&quot;</span>: &#123;<span class="string">&quot;field&quot;</span>: <span class="string">&quot;attrs.attrValue&quot;</span>&#125;&#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;highlight&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;pre_tags&quot;</span>: [<span class="string">&quot;&lt;b style=&#x27;color:red&#x27;&gt;&quot;</span>],</span><br><span class="line">    <span class="string">&quot;post_tags&quot;</span>: [<span class="string">&quot;&lt;/b&gt;&quot;</span>],</span><br><span class="line">    <span class="string">&quot;fields&quot;</span>: &#123;<span class="string">&quot;name&quot;</span>: &#123;&#125;&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Java代码实现  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="meta">@RequestMapping(value = &quot;/searchList&quot;)</span></span><br><span class="line"><span class="keyword">public</span> CommonResult&lt;ESResponseResult&gt; <span class="title function_">listPage</span><span class="params">(ESRequestParam param, HttpServletRequest request)</span> &#123;</span><br><span class="line">    <span class="comment">// 根据传递来的页面的查询参数，去es中检索商品</span></span><br><span class="line">    <span class="type">ESResponseResult</span> <span class="variable">searchResult</span> <span class="operator">=</span> tulingMallSearchService.search(param);</span><br><span class="line">    <span class="keyword">return</span> CommonResult.success(searchResult);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> ESResponseResult <span class="title function_">search</span><span class="params">(ESRequestParam param)</span> &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">// 构建检索对象-封装请求相关参数信息</span></span><br><span class="line">        <span class="type">SearchRequest</span> <span class="variable">searchRequest</span> <span class="operator">=</span> startBuildRequestParam(param);</span><br><span class="line">        <span class="comment">// 进行检索操作</span></span><br><span class="line">        <span class="type">SearchResponse</span> <span class="variable">response</span> <span class="operator">=</span> client.search(searchRequest, RequestOptions.DEFAULT);</span><br><span class="line">        <span class="comment">// 分析响应数据，封装成指定的格式</span></span><br><span class="line">        <span class="type">ESResponseResult</span> <span class="variable">responseResult</span> <span class="operator">=</span> startBuildResponseResult(response, param);</span><br><span class="line">        <span class="keyword">return</span> responseResult;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 封装请求参数信息，关键字查询、根据属性、分类、品牌、价格区间、是否有库存等进行过滤、分页、高亮、以及聚合统计品牌分类属性</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> SearchRequest <span class="title function_">startBuildRequestParam</span><span class="params">(ESRequestParam param)</span> &#123;</span><br><span class="line">    <span class="type">SearchSourceBuilder</span> <span class="variable">searchSourceBuilder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SearchSourceBuilder</span>();</span><br><span class="line">    <span class="comment">// 关键字查询、根据属性、分类、品牌、价格区间、是否有库存等进行过滤、分页、高亮、以及聚合统计品牌分类属性</span></span><br><span class="line">    <span class="type">BoolQueryBuilder</span> <span class="variable">boolQueryBuilder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BoolQueryBuilder</span>();</span><br><span class="line">    <span class="keyword">if</span> (!StringUtils.isEmpty(param.getKeyword())) &#123;</span><br><span class="line">        <span class="comment">//单字段查询 boolQueryBuilder.must(QueryBuilders.matchQuery(&quot;name&quot;, param.getKeyword()));</span></span><br><span class="line">        <span class="comment">//多字段查询</span></span><br><span class="line">        boolQueryBuilder.must(QueryBuilders.multiMatchQuery(param.getKeyword(),<span class="string">&quot;name&quot;</span>,<span class="string">&quot;keywords&quot;</span>,<span class="string">&quot;subTitle&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 根据类目ID进行过滤</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="literal">null</span> != param.getCategoryId()) &#123;</span><br><span class="line">        boolQueryBuilder.filter(QueryBuilders.termQuery(<span class="string">&quot;categoryId&quot;</span>, param.getCategoryId()));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 根据品牌ID进行过滤</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="literal">null</span> != param.getBrandId() &amp;&amp; param.getBrandId().size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        boolQueryBuilder.filter(QueryBuilders.termsQuery(<span class="string">&quot;brandId&quot;</span>, param.getBrandId()));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 根据属性进行相关过滤</span></span><br><span class="line">    <span class="keyword">if</span> (param.getAttrs() != <span class="literal">null</span> &amp;&amp; param.getAttrs().size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        param.getAttrs().forEach(item -&gt; &#123;</span><br><span class="line">            <span class="comment">//attrs=1_白色&amp;2_4核</span></span><br><span class="line">            <span class="type">BoolQueryBuilder</span> <span class="variable">boolQuery</span> <span class="operator">=</span> QueryBuilders.boolQuery();</span><br><span class="line">            <span class="comment">//attrs=1_64G</span></span><br><span class="line">            String[] s = item.split(<span class="string">&quot;_&quot;</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">attrId</span> <span class="operator">=</span> s[<span class="number">0</span>];</span><br><span class="line">            String[] attrValues = s[<span class="number">1</span>].split(<span class="string">&quot;:&quot;</span>);<span class="comment">//这个属性检索用的值</span></span><br><span class="line">            boolQuery.must(QueryBuilders.termQuery(<span class="string">&quot;attrs.attrId&quot;</span>, attrId));</span><br><span class="line">            boolQuery.must(QueryBuilders.termsQuery(<span class="string">&quot;attrs.attrValue&quot;</span>, attrValues));</span><br><span class="line"></span><br><span class="line">            <span class="type">NestedQueryBuilder</span> <span class="variable">nestedQueryBuilder</span> <span class="operator">=</span> QueryBuilders.nestedQuery(<span class="string">&quot;attrs&quot;</span>, boolQuery, ScoreMode.None);</span><br><span class="line">            boolQueryBuilder.filter(nestedQueryBuilder);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 是否有库存</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="literal">null</span> != param.getHasStock()) &#123;</span><br><span class="line">        boolQueryBuilder.filter(QueryBuilders.termQuery(<span class="string">&quot;hasStock&quot;</span>, param.getHasStock() == <span class="number">1</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 根据价格过滤</span></span><br><span class="line">    <span class="keyword">if</span> (!StringUtils.isEmpty(param.getPrice())) &#123;</span><br><span class="line">        <span class="comment">// 价格的输入形式为：10-100（起始价格和最终价格）或-100（不指定起始价格）或10-（不限制最终价格）</span></span><br><span class="line">        <span class="type">RangeQueryBuilder</span> <span class="variable">rangeQueryBuilder</span> <span class="operator">=</span> QueryBuilders.rangeQuery(<span class="string">&quot;price&quot;</span>);</span><br><span class="line">        String[] price = param.getPrice().split(<span class="string">&quot;_&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (price.length == <span class="number">2</span>) &#123;</span><br><span class="line">            rangeQueryBuilder.gte(price[<span class="number">0</span>]).lte(price[<span class="number">1</span>]);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (price.length == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (param.getPrice().startsWith(<span class="string">&quot;_&quot;</span>)) &#123;</span><br><span class="line">                rangeQueryBuilder.lte(price[<span class="number">1</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (param.getPrice().endsWith(<span class="string">&quot;_&quot;</span>)) &#123;</span><br><span class="line">                rangeQueryBuilder.gte(price[<span class="number">0</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        boolQueryBuilder.filter(rangeQueryBuilder);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 封装所有查询条件</span></span><br><span class="line">    searchSourceBuilder.query(boolQueryBuilder);</span><br><span class="line">    <span class="comment">//实现排序、高亮、分页操作，排序，页面传入的参数值形式 sort=price_asc/desc</span></span><br><span class="line">    <span class="keyword">if</span> (!StringUtils.isEmpty(param.getSort())) &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">sort</span> <span class="operator">=</span> param.getSort();</span><br><span class="line">        String[] sortFileds = sort.split(<span class="string">&quot;_&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;sortFileds:&quot;</span>+sortFileds.length);</span><br><span class="line">        <span class="keyword">if</span>(!StringUtils.isEmpty(sortFileds[<span class="number">0</span>]))&#123;</span><br><span class="line">            <span class="type">SortOrder</span> <span class="variable">sortOrder</span> <span class="operator">=</span> <span class="string">&quot;asc&quot;</span>.equalsIgnoreCase(sortFileds[<span class="number">1</span>]) ? SortOrder.ASC : SortOrder.DESC;</span><br><span class="line">            searchSourceBuilder.sort(sortFileds[<span class="number">0</span>], sortOrder);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 分页查询</span></span><br><span class="line">    searchSourceBuilder.from((param.getPageNum() - <span class="number">1</span>) * SearchConstant.PAGE_SIZE);</span><br><span class="line">    searchSourceBuilder.size(SearchConstant.PAGE_SIZE);</span><br><span class="line">    <span class="comment">// 高亮显示</span></span><br><span class="line">    <span class="keyword">if</span> (!StringUtils.isEmpty(param.getKeyword())) &#123;</span><br><span class="line">        <span class="type">HighlightBuilder</span> <span class="variable">highlightBuilder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HighlightBuilder</span>();</span><br><span class="line">        highlightBuilder.field(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">        highlightBuilder.preTags(<span class="string">&quot;&lt;b style=&#x27;color:red&#x27;&gt;&quot;</span>);</span><br><span class="line">        highlightBuilder.postTags(<span class="string">&quot;&lt;/b&gt;&quot;</span>);</span><br><span class="line">        searchSourceBuilder.highlighter(highlightBuilder);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 对品牌、分类信息、属性信息进行聚合分析，按照品牌进行聚合</span></span><br><span class="line">    <span class="type">TermsAggregationBuilder</span> <span class="variable">brand_agg</span> <span class="operator">=</span> AggregationBuilders.terms(<span class="string">&quot;brand_agg&quot;</span>);</span><br><span class="line">    brand_agg.field(<span class="string">&quot;brandId&quot;</span>).size(<span class="number">50</span>);</span><br><span class="line">    <span class="comment">// 品牌的子聚合-品牌名聚合</span></span><br><span class="line">    brand_agg.subAggregation(AggregationBuilders.terms(<span class="string">&quot;brand_name_agg&quot;</span>).field(<span class="string">&quot;brandName&quot;</span>).size(<span class="number">1</span>));</span><br><span class="line">    <span class="comment">// 品牌的子聚合-品牌图片聚合</span></span><br><span class="line">    brand_agg.subAggregation(AggregationBuilders.terms(<span class="string">&quot;brand_img_agg&quot;</span>).field(<span class="string">&quot;brandImg&quot;</span>).size(<span class="number">1</span>));</span><br><span class="line">    searchSourceBuilder.aggregation(brand_agg);</span><br><span class="line">    <span class="comment">// 按照分类信息进行聚合</span></span><br><span class="line">    <span class="type">TermsAggregationBuilder</span> <span class="variable">category_agg</span> <span class="operator">=</span> AggregationBuilders.terms(<span class="string">&quot;category_agg&quot;</span>);</span><br><span class="line">    category_agg.field(<span class="string">&quot;categoryId&quot;</span>).size(<span class="number">50</span>);    category_agg.subAggregation(AggregationBuilders.terms(<span class="string">&quot;category_name_agg&quot;</span>).field(<span class="string">&quot;categoryName&quot;</span>).size(<span class="number">1</span>));</span><br><span class="line">    searchSourceBuilder.aggregation(category_agg);</span><br><span class="line">    <span class="comment">// 按照属性信息进行聚合</span></span><br><span class="line">    <span class="type">NestedAggregationBuilder</span> <span class="variable">attr_agg</span> <span class="operator">=</span> AggregationBuilders.nested(<span class="string">&quot;attr_agg&quot;</span>, <span class="string">&quot;attrs&quot;</span>);</span><br><span class="line">    <span class="comment">// 按照属性ID进行聚合</span></span><br><span class="line">    <span class="type">TermsAggregationBuilder</span> <span class="variable">attr_id_agg</span> <span class="operator">=</span> AggregationBuilders.terms(<span class="string">&quot;attr_id_agg&quot;</span>).field(<span class="string">&quot;attrs.attrId&quot;</span>);</span><br><span class="line">    attr_agg.subAggregation(attr_id_agg);</span><br><span class="line">    <span class="comment">// 在每个属性ID下，按照属性名进行聚合</span></span><br><span class="line">    attr_id_agg.subAggregation(AggregationBuilders.terms(<span class="string">&quot;attr_name_agg&quot;</span>).field(<span class="string">&quot;attrs.attrName&quot;</span>).size(<span class="number">1</span>));</span><br><span class="line">    <span class="comment">// 在每个属性ID下，按照属性值进行聚合</span></span><br><span class="line">    attr_id_agg.subAggregation(AggregationBuilders.terms(<span class="string">&quot;attr_value_agg&quot;</span>).field(<span class="string">&quot;attrs.attrValue&quot;</span>).size(<span class="number">50</span>));</span><br><span class="line">    searchSourceBuilder.aggregation(attr_agg);</span><br><span class="line">    System.out.println(<span class="string">&quot;构建的DSL语句 &#123;&#125;:&quot;</span>+ searchSourceBuilder.toString());</span><br><span class="line">    <span class="type">SearchRequest</span> <span class="variable">searchRequest</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SearchRequest</span>(<span class="keyword">new</span> <span class="title class_">String</span>[]&#123;SearchConstant.INDEX_NAME&#125;, searchSourceBuilder);</span><br><span class="line">    <span class="keyword">return</span> searchRequest;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 封装查询到的结果信息，关键字查询、根据属性、分类、品牌、价格区间、是否有库存等进行过滤、分页、高亮、以及聚合统计品牌分类属性</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> ESResponseResult <span class="title function_">startBuildResponseResult</span><span class="params">(SearchResponse response, ESRequestParam param)</span> &#123;</span><br><span class="line">    <span class="type">ESResponseResult</span> <span class="variable">result</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ESResponseResult</span>();</span><br><span class="line">    <span class="comment">// 获取查询到的商品信息</span></span><br><span class="line">    <span class="type">SearchHits</span> <span class="variable">hits</span> <span class="operator">=</span> response.getHits();</span><br><span class="line">    List&lt;EsProduct&gt; esModels = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    <span class="comment">// 遍历所有商品信息</span></span><br><span class="line">    <span class="keyword">if</span> (hits.getHits() != <span class="literal">null</span> &amp;&amp; hits.getHits().length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span> (SearchHit hit : hits.getHits()) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">sourceAsString</span> <span class="operator">=</span> hit.getSourceAsString();</span><br><span class="line">            <span class="type">EsProduct</span> <span class="variable">esModel</span> <span class="operator">=</span> JSON.parseObject(sourceAsString, EsProduct.class);</span><br><span class="line">            <span class="comment">// 判断是否按关键字检索，若是就显示高亮，否则不显示</span></span><br><span class="line">            <span class="keyword">if</span> (!StringUtils.isEmpty(param.getKeyword())) &#123;</span><br><span class="line">                <span class="comment">// 拿到高亮信息显示标题</span></span><br><span class="line">                <span class="type">HighlightField</span> <span class="variable">name</span> <span class="operator">=</span> hit.getHighlightFields().get(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">                <span class="comment">// 判断name中是否含有查询的关键字(因为是多字段查询，因此可能不包含指定的关键字，假设不包含则显示原始name字段的信息)</span></span><br><span class="line">                <span class="type">String</span> <span class="variable">nameValue</span> <span class="operator">=</span> name!=<span class="literal">null</span> ? name.getFragments()[<span class="number">0</span>].string() : esModel.getName();</span><br><span class="line">                esModel.setName(nameValue);</span><br><span class="line">            &#125;</span><br><span class="line">            esModels.add(esModel);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    result.setProducts(esModels);</span><br><span class="line">    <span class="comment">// 当前商品涉及到的所有品牌信息，小米手机和小米电脑都属于小米品牌，过滤重复品牌信息</span></span><br><span class="line">    Set&lt;ESResponseResult.BrandVo&gt; brandVos = <span class="keyword">new</span> <span class="title class_">LinkedHashSet</span>&lt;&gt;();</span><br><span class="line">    <span class="comment">// 获取到品牌的聚合</span></span><br><span class="line">    <span class="type">ParsedLongTerms</span> <span class="variable">brandAgg</span> <span class="operator">=</span> response.getAggregations().get(<span class="string">&quot;brand_agg&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (Terms.Bucket bucket : brandAgg.getBuckets()) &#123;</span><br><span class="line">        ESResponseResult.<span class="type">BrandVo</span> <span class="variable">brandVo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ESResponseResult</span>.BrandVo();</span><br><span class="line">        <span class="comment">// 获取品牌的id</span></span><br><span class="line">        <span class="type">long</span> <span class="variable">brandId</span> <span class="operator">=</span> bucket.getKeyAsNumber().longValue();</span><br><span class="line">        brandVo.setBrandId(brandId);</span><br><span class="line">        <span class="comment">// 获取品牌的名字</span></span><br><span class="line">        <span class="type">ParsedStringTerms</span> <span class="variable">brandNameAgg</span> <span class="operator">=</span> bucket.getAggregations().get(<span class="string">&quot;brand_name_agg&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">brandName</span> <span class="operator">=</span> brandNameAgg.getBuckets().get(<span class="number">0</span>).getKeyAsString();</span><br><span class="line">        brandVo.setBrandName(brandName);</span><br><span class="line">        <span class="comment">// 获取品牌的LOGO</span></span><br><span class="line">        <span class="type">ParsedStringTerms</span> <span class="variable">brandImgAgg</span> <span class="operator">=</span> bucket.getAggregations().get(<span class="string">&quot;brand_img_agg&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">brandImg</span> <span class="operator">=</span> brandImgAgg.getBuckets().get(<span class="number">0</span>).getKeyAsString();</span><br><span class="line">        brandVo.setBrandImg(brandImg);</span><br><span class="line">        System.out.println(<span class="string">&quot;brandId:&quot;</span>+brandId+<span class="string">&quot;brandName:&quot;</span>+brandName+<span class="string">&quot;brandImg&quot;</span>);</span><br><span class="line">        brandVos.add(brandVo);</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println(<span class="string">&quot;brandVos.size:&quot;</span>+brandVos.size());</span><br><span class="line">    result.setBrands(brandVos);</span><br><span class="line">    <span class="comment">// 当前商品相关的所有类目信息，获取到分类的聚合</span></span><br><span class="line">    List&lt;ESResponseResult.categoryVo&gt; categoryVos = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    <span class="type">ParsedLongTerms</span> <span class="variable">categoryAgg</span> <span class="operator">=</span> response.getAggregations().get(<span class="string">&quot;category_agg&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (Terms.Bucket bucket : categoryAgg.getBuckets()) &#123;</span><br><span class="line">        ESResponseResult.<span class="type">categoryVo</span> <span class="variable">categoryVo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ESResponseResult</span>.categoryVo();</span><br><span class="line">        <span class="comment">// 获取分类id</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">keyAsString</span> <span class="operator">=</span> bucket.getKeyAsString();</span><br><span class="line">        categoryVo.setCategoryId(Long.parseLong(keyAsString));</span><br><span class="line">        <span class="comment">// 获取分类名</span></span><br><span class="line">        <span class="type">ParsedStringTerms</span> <span class="variable">categoryNameAgg</span> <span class="operator">=</span> bucket.getAggregations().get(<span class="string">&quot;category_name_agg&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">categoryName</span> <span class="operator">=</span> categoryNameAgg.getBuckets().get(<span class="number">0</span>).getKeyAsString();</span><br><span class="line">        categoryVo.setCategoryName(categoryName);</span><br><span class="line">        categoryVos.add(categoryVo);</span><br><span class="line">    &#125;</span><br><span class="line">    result.setCategorys(categoryVos);</span><br><span class="line">    <span class="comment">// 获取商品相关的所有属性信息</span></span><br><span class="line">    List&lt;ESResponseResult.AttrVo&gt; attrVos = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    <span class="comment">// 获取属性信息的聚合</span></span><br><span class="line">    <span class="type">ParsedNested</span> <span class="variable">attrsAgg</span> <span class="operator">=</span> response.getAggregations().get(<span class="string">&quot;attr_agg&quot;</span>);</span><br><span class="line">    <span class="type">ParsedLongTerms</span> <span class="variable">attrIdAgg</span> <span class="operator">=</span> attrsAgg.getAggregations().get(<span class="string">&quot;attr_id_agg&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (Terms.Bucket bucket : attrIdAgg.getBuckets()) &#123;</span><br><span class="line">        ESResponseResult.<span class="type">AttrVo</span> <span class="variable">attrVo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ESResponseResult</span>.AttrVo();</span><br><span class="line">        <span class="comment">// 获取属性ID值</span></span><br><span class="line">        <span class="type">long</span> <span class="variable">attrId</span> <span class="operator">=</span> bucket.getKeyAsNumber().longValue();</span><br><span class="line">        attrVo.setAttrId(attrId);</span><br><span class="line">        <span class="comment">// 获取属性的名字</span></span><br><span class="line">        <span class="type">ParsedStringTerms</span> <span class="variable">attrNameAgg</span> <span class="operator">=</span> bucket.getAggregations().get(<span class="string">&quot;attr_name_agg&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">attrName</span> <span class="operator">=</span> attrNameAgg.getBuckets().get(<span class="number">0</span>).getKeyAsString();</span><br><span class="line">        attrVo.setAttrName(attrName);</span><br><span class="line">        <span class="comment">// 获取属性的值</span></span><br><span class="line">        <span class="type">ParsedStringTerms</span> <span class="variable">attrValueAgg</span> <span class="operator">=</span> bucket.getAggregations().get(<span class="string">&quot;attr_value_agg&quot;</span>);</span><br><span class="line">        List&lt;String&gt; attrValues = attrValueAgg.getBuckets().stream().map(item -&gt; item.getKeyAsString()).collect(Collectors.toList());</span><br><span class="line">        attrVo.setAttrValue(attrValues);</span><br><span class="line">        attrVos.add(attrVo);</span><br><span class="line">    &#125;</span><br><span class="line">    result.setAttrs(attrVos);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 进行分页操作</span></span><br><span class="line">    result.setPageNum(param.getPageNum());</span><br><span class="line">    <span class="comment">// 获取总记录数</span></span><br><span class="line">    <span class="type">long</span> <span class="variable">total</span> <span class="operator">=</span> hits.getTotalHits().value;</span><br><span class="line">    result.setTotal(total);</span><br><span class="line">    <span class="comment">// 计算总页码</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">totalPages</span> <span class="operator">=</span> (<span class="type">int</span>) total % SearchConstant.PAGE_SIZE == <span class="number">0</span> ?</span><br><span class="line">        (<span class="type">int</span>) total / SearchConstant.PAGE_SIZE : ((<span class="type">int</span>) total / SearchConstant.PAGE_SIZE + <span class="number">1</span>);</span><br><span class="line">    result.setTotalPages(totalPages);</span><br><span class="line">    List&lt;Integer&gt; pageNavs = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= totalPages; i++) &#123;</span><br><span class="line">        pageNavs.add(i);</span><br><span class="line">    &#125;</span><br><span class="line">    result.setPageNavs(pageNavs);</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;引入pom依赖：&quot;&gt;&lt;a href=&quot;#引入pom依赖：&quot; class=&quot;headerlink&quot; title=&quot;引入pom依赖：&quot;&gt;&lt;/a&gt;引入pom依赖：&lt;/h2&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td clas</summary>
      
    
    
    
    <category term="工具和中间件" scheme="http://example.com/categories/%E5%B7%A5%E5%85%B7%E5%92%8C%E4%B8%AD%E9%97%B4%E4%BB%B6/"/>
    
    <category term="搜索引擎技术" scheme="http://example.com/categories/%E5%B7%A5%E5%85%B7%E5%92%8C%E4%B8%AD%E9%97%B4%E4%BB%B6/%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E6%8A%80%E6%9C%AF/"/>
    
    <category term="ElasticSearch" scheme="http://example.com/categories/%E5%B7%A5%E5%85%B7%E5%92%8C%E4%B8%AD%E9%97%B4%E4%BB%B6/%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E6%8A%80%E6%9C%AF/ElasticSearch/"/>
    
    
    <category term="ElasticSearch" scheme="http://example.com/tags/ElasticSearch/"/>
    
  </entry>
  
  <entry>
    <title>ElasticSearch基础</title>
    <link href="http://example.com/blog/%E5%B7%A5%E5%85%B7%E5%92%8C%E4%B8%AD%E9%97%B4%E4%BB%B6/%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E6%8A%80%E6%9C%AF/ElasticSearch/ElasticSearch%E5%9F%BA%E7%A1%80/"/>
    <id>http://example.com/blog/%E5%B7%A5%E5%85%B7%E5%92%8C%E4%B8%AD%E9%97%B4%E4%BB%B6/%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E6%8A%80%E6%9C%AF/ElasticSearch/ElasticSearch%E5%9F%BA%E7%A1%80/</id>
    <published>2022-01-02T02:08:20.000Z</published>
    <updated>2022-06-23T03:27:47.623Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Elasticsearch是什么？"><a href="#Elasticsearch是什么？" class="headerlink" title="Elasticsearch是什么？"></a>Elasticsearch是什么？</h2><ul><li><strong><code>Elasticsearch</code></strong> 是用 <strong>Java<code>开发</code></strong> 的当前 <strong>最流行</strong> 的 <strong>开源</strong> 的企业级搜索引擎,能够达到 <strong>实时搜索</strong>, <strong>稳定</strong>, <strong>可靠</strong>, <strong>快速</strong>,安装使用方便。  </li><li>和<code>Solr</code>一样的,<strong><code>Elasticsearch</code></strong> 是基于 <strong><code>Lucene</code></strong> 进行了封装, 提供了更为便利的访问和调用, Lucene可被认为是迄今为止<strong>最先进</strong>、<strong>性能最好</strong>、<strong>功能最全</strong>的<strong>搜索引擎框架</strong>。</li></ul><h2 id="ES与Solr对比："><a href="#ES与Solr对比：" class="headerlink" title="ES与Solr对比："></a>ES与Solr对比：</h2><p>单纯对<strong>已有数据</strong>进行搜索时 <strong><code>Solr</code>更快</strong>,当<strong>实时建立索引</strong>时Solr会产生 <strong><code>IO</code>阻塞</strong>,查询性能较差,该情况下  <strong><code>Elasticsearch</code></strong> 具有明显优势。</p><ul><li><strong><code>Solr</code>利用<code>Zookeeper</code>进行分布式管理</strong>,而 <strong><code>Elasticsearch</code>自带分布式协调管理</strong>功能</li><li><strong><code>Solr</code>支持更多格式数据</strong>,如JSON、XML、CSV,而 <strong><code>Elasticsearch</code>仅支持<code>JSON</code>文件格式</strong></li><li>Solr在<strong>传统搜索应用</strong>中表现好于Elasticsearch,但在处理<strong>实时搜索应用</strong>时效率明显低于Elasticsearch</li><li>Solr是传统搜索应用的有力解决方案,但Elasticsearch更适用于<strong>新兴实时搜索</strong>应用。</li></ul><h2 id="ES与关系型数据库"><a href="#ES与关系型数据库" class="headerlink" title="ES与关系型数据库:"></a>ES与关系型数据库:</h2><table>    <thead>        <tr>            <th>关系型数据库</th>            <th>Database数据库</th>            <th>Table表</th>            <th>ROW行</th>            <th>Column列</th>        </tr>    </thead>    <tbody>        <tr>            <td><strong>Elasticsearch</strong></td>            <td><strong>Index索引库</strong></td>            <td><strong>Type类型</strong></td>            <td><strong>Document文档</strong></td>            <td><strong>Field字段</strong></td>        </tr>    </tbody></table><h2 id="ES核心概念"><a href="#ES核心概念" class="headerlink" title="ES核心概念:"></a>ES核心概念:</h2><ul><li>索引index:<br>一个索引就是一个拥有几分相似特征的<strong>文档集合</strong>,相当于关系型数据库中的database,一个索引由一个名字来标识, <strong>必须全部是小写字母</strong>,且当要对对应于该索引中的文档进行索引<strong>搜索</strong>、<strong>更新</strong>和<strong>删除</strong>时,都要使用该名字。</li><li>Mapping映射:<br>ElasticSearch中的<strong>Mapping映射用来定义一个文档</strong>,Mapping是<strong>处理数据的方式</strong>和<strong>规则</strong>方面做一些限制,如某个<strong>字段</strong>的<strong>数据类型</strong>、<strong>默认值</strong>、<strong>分词器</strong>、<strong>是否被索引</strong>等,这都是映射里面可设置的。</li><li>Field字段:<br>相当于是数据表的字段或列。</li><li>Type字段类型：<br><strong>每个字段</strong>都应该有一个对应的<strong>类型</strong>,如 <strong><code>Text</code><strong>、</strong><code>Keyword</code><strong>、</strong><code>Byte</code></strong> 等。</li><li>Document文档：<br>一个文档是一个<strong>可被索引的基础信息单元</strong>,类似一条记录, <strong>文档以<code>JSON</code>格式来表示</strong>。</li><li>Cluster集群：<br>一个集群由<strong>一个</strong>或<strong>多个</strong>节点组织在一起, <strong>共同持有整个数据</strong>,并<strong>一起提供索引和搜索功能</strong></li><li>Node节点：<br>一个节点即集群中一个服务器,作为集群的一部分,它存储数据,参与集群的索引和搜索功能,一个节点<strong>可通过配置集群名称的方式来加入一个指定的集群</strong>。默认每个节点都会被安排加入到一个叫做 <strong><code>elasticsearch</code><strong>的集群中。<br><strong>一个集群中可拥有任意多个节点</strong>,且若当前网络中没有运行任何</strong><code>Elasticsearch</code><strong>节点,这时启动一个节点,会默认</strong>创建并加入</strong>一个叫做 <strong><code>elasticsearch</code></strong> 的集群。</li><li>分片：<br><strong>一个索引</strong>可存储<strong>超出单个结点硬件限制</strong>的大量数据,如一个具有10亿文档的索引占据1TB磁盘空间,而任一节点都没有这样大的磁盘空间,或者单个节点处理搜索请求,响应太慢,为了解决这个问题,Elasticsearch提供了将索引划分成多份的能力,每一份就是一个分片。<br>当<strong>创建索引时可指定分片数量</strong>, <strong>每个分片</strong>本身也是一个<strong>功能完善且独立的索引</strong>,该分片可被放置到集群中任何节点上, <strong>分片允许水平分割扩展内容容量</strong>,允许在分片之上进行<strong>分布式</strong>并行操作,进而提高<strong>性能</strong>和<strong>吞吐量</strong>,每个<strong>分片怎样分布</strong>, <strong>文档怎样聚合</strong>回搜索请求,完全<strong>由<code>Elasticsearch</code>管理</strong>,对于用户透明</li><li>副本：<br>在一个网络环境中,失败随时都可能发生,在某个分片或节点处于离线状态,或由于任何原因消失,该情况下有一个<strong>故障转移机制</strong>是非常有用且强烈推荐。为此 <strong><code>Elasticsearch</code>允许创建分片的一份或多份拷贝</strong>,这些拷贝叫做<strong>副本分片</strong>或直接叫<strong>副本</strong>。<br>扩展搜索量和吞吐量,搜索可在所有的副本上并行运行, <strong>每个索引可被分成多个分片</strong>, <strong>一个索引有零个或者多个副本</strong>, 一旦设置了副本,每个索引就有了<strong>主分片</strong>和<strong>副本分片</strong>, <strong>分片和副本数量可在索引创建时指定</strong>,在索引创建后, <strong>可在任何时候动态地改变副本数量</strong>,但<strong>不能改变分片数量</strong>。</li></ul><h1 id="ES安装"><a href="#ES安装" class="headerlink" title="ES安装"></a>ES安装</h1><p><strong>注：</strong> ES不能使用root用户来启动,必须使用普通用户来安装启动。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">groupadd elasticsearch # 创建elasticsearch用户组</span><br><span class="line">useradd eleven # 创建eleven用户</span><br><span class="line">passwd eleven  # 给eleven用户设置密码为eleven</span><br><span class="line">usermod -G elasticsearch eleven # 将用户eleven添加到elasticsearch用户组</span><br><span class="line"></span><br><span class="line">mkdir -p /usr/local/es # 创建es文件夹</span><br><span class="line">chown -R eleven /usr/local/es/elasticsearch-7.6.1 # 修改owner为eleven用户</span><br><span class="line"></span><br><span class="line">visudo # 使用root用户执行visudo命令然后为es用户添加权限</span><br><span class="line">eleven ALL=(ALL) ALL # 在root ALL=(ALL) ALL 一行下面添加eleven用户</span><br></pre></td></tr></table></figure><p>修改elasticsearch.yml,可通过修改jvm.options配置文件调整JVM参数:</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">cluster.name:</span> <span class="string">eleven-es</span><span class="comment"># 集群名称</span></span><br><span class="line"><span class="attr">node.name:</span> <span class="string">node1</span><span class="comment"># 节点名称</span></span><br><span class="line"><span class="attr">path.data:</span> <span class="string">/usr/local/es/elasticsearch-7.6.1/data</span> <span class="comment"># 数据目录</span></span><br><span class="line"><span class="attr">path.logs:</span> <span class="string">/usr/local/es/elasticsearch-7.6.1/log</span>  <span class="comment"># 日志目录</span></span><br><span class="line"><span class="attr">network.host:</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line"><span class="attr">http.port:</span> <span class="number">9200</span></span><br><span class="line"><span class="attr">discovery.seed_hosts:</span> [<span class="string">&quot;IP1&quot;</span>, <span class="string">&quot;IP2&quot;</span>, <span class="string">&quot;IP3&quot;</span>]</span><br><span class="line"><span class="attr">cluster.initial_master_nodes:</span> [<span class="string">&quot;节点1名称&quot;</span>, <span class="string">&quot;节点2名称&quot;</span>, <span class="string">&quot;节点3名称&quot;</span>]</span><br><span class="line"><span class="attr">bootstrap.system_call_filter:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">bootstrap.memory_lock:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">http.cors.enabled:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">http.cors.allow-origin:</span> <span class="string">&quot;*&quot;</span></span><br></pre></td></tr></table></figure><p>ES需要大量创建索引文件,需要大量打开系统文件,所以需要解除linux系统当中打开文件最大数目限制,不然ES启动会抛错：<span style="color: red">max file descriptors [4096] for elasticsearch process likely too low, increase to at least [65536]</span></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/security/limits.conf</span><br><span class="line">* soft nofile 65536</span><br><span class="line">* hard nofile 131072</span><br><span class="line">* soft nproc 2048</span><br><span class="line">* hard nproc 4096</span><br></pre></td></tr></table></figure><p>若出现<span style="color: red">max number of threads [1024] for user [es] likely too low, increase to at least [4096]</span> 错误信息,是由于<strong>普通用户启动线程数限制最大可创建线程数太小</strong>,无法创建本地线程问题。</p><h2 id="安装IK分词器"><a href="#安装IK分词器" class="headerlink" title="安装IK分词器"></a>安装IK分词器</h2><p>使用ElasticSearch来进行<strong>中文分词</strong>,需要单独给Elasticsearch安装IK分词器插件,</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /usr/local/es/elasticsearch-7.6.1/plugins/ik</span><br><span class="line">cd /usr/local/es/elasticsearch-7.6.1/plugins/ik</span><br><span class="line">unzip elasticsearch-analysis-ik-7.6.1.zip</span><br></pre></td></tr></table></figure><p>ES的默认分词设置是 <strong><code>standard</code>单字拆分</strong>,可使用 <strong>IK分词器</strong> 的 <strong><code>ik_smart</code></strong> 和 <strong><code>ik_max_word</code></strong> 分词方式, <strong><code>ik_smart</code></strong> 会做 <strong>最粗粒度拆分</strong>, <strong><code>ik_max_word</code><strong>会将文本做</strong>最细粒度拆分</strong>。修改默认分词方法,修改 <strong><code>eleven_index</code>索引</strong>的默认分词为 <strong><code>ik_max_word</code></strong> </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">PUT /school_index</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;settings&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;index&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;analysis.analyzer.default.type&quot;</span>: <span class="string">&quot;ik_max_word&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">POST _analyze</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;analyzer&quot;</span>: <span class="string">&quot;standard&quot;</span>,</span><br><span class="line">    <span class="string">&quot;text&quot;</span>: <span class="string">&quot;中华人民共和国&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">POST _analyze</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;analyzer&quot;</span>: <span class="string">&quot;ik_smart&quot;</span>,</span><br><span class="line">    <span class="string">&quot;text&quot;</span>: <span class="string">&quot;中华人民共和国&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">POST _analyze</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;analyzer&quot;</span>: <span class="string">&quot;ik_max_word&quot;</span>,</span><br><span class="line">    <span class="string">&quot;text&quot;</span>: <span class="string">&quot;中华人民共和国&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="ES基础"><a href="#ES基础" class="headerlink" title="ES基础"></a>ES基础</h2><p>ES是<strong>面向文档<code>Document</code><strong>的, <strong>使用<code>JSON</code>作为文档序列化格式</strong>,这其</strong>可存储整个对象或文档<code>Document</code></strong>,不仅仅是存储,还会<strong>索引<code>index</code>每个文档内容使之可被搜索</strong>。ES中可对<strong>文档而非成行成列的数据进行索引</strong>、<strong>搜索</strong>、<strong>排序</strong>、<strong>过滤</strong>。</p><p><strong>条件查询</strong>：<br><strong><code>GET /索引名称/类型/_search?q=字段1:字段值,字段2:字段值</code></strong>,条件之间是通过<strong>逗号分隔多个条件</strong>,如<strong>分页</strong>、<strong>排序</strong>、<strong>输出指定字段</strong>等通过 <strong><code>&amp;</code>符号分隔</strong> </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">GET _cat/nodes?v<span class="comment">// 查看集群节点状态</span></span><br><span class="line">GET _cat/health?v<span class="comment">// 查看集群健康状态</span></span><br><span class="line"></span><br><span class="line">GET /es_db <span class="comment">// 查询索引：GET /索引名称</span></span><br><span class="line">PUT /es_db<span class="comment">// 创建索引：PUT /索引名称</span></span><br><span class="line">DELETE /es_db<span class="comment">// 删除索引：DELETE /索引名称</span></span><br><span class="line">PUT /es_db/_doc/<span class="number">1</span> <span class="comment">// 添加文档：PUT /索引名称/类型/id</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;name&quot;</span>: <span class="string">&quot;张三&quot;</span>,</span><br><span class="line">  <span class="string">&quot;sex&quot;</span>: <span class="number">1</span>,</span><br><span class="line">  <span class="string">&quot;age&quot;</span>: <span class="number">25</span>,</span><br><span class="line">  <span class="string">&quot;address&quot;</span>: <span class="string">&quot;广州天河公园&quot;</span>,</span><br><span class="line">  <span class="string">&quot;remark&quot;</span>: <span class="string">&quot;java developer&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">GET /es_db/_doc/<span class="number">1</span> <span class="comment">// 查询文档：GET /索引名称/类型/id</span></span><br><span class="line">DELETE /es_db/_doc/<span class="number">1</span><span class="comment">// 删除文档：DELETE /索引名称/类型/id</span></span><br><span class="line">GET /es_db/_doc/_search <span class="comment">// 查询当前类型中的所有文档：GET /索引名称/类型/_search</span></span><br><span class="line">GET /es_db/_doc/_search?q=age:<span class="number">28</span> <span class="comment">// 条件查询：GET /索引名称/类型/_search?q=*:***</span></span><br><span class="line">GET /es_db/_doc/_search?q=age[<span class="number">25</span> TO <span class="number">26</span>] <span class="comment">// 范围查询：GET /索引名称/类型/_search?q=***[** TO **]</span></span><br><span class="line">GET /es_db/_doc/_mget <span class="comment">// 根据多个ID进行批量查询：GET /索引名称/类型/_mget</span></span><br><span class="line">&#123;<span class="string">&quot;ids&quot;</span>:[<span class="string">&quot;1&quot;</span>,<span class="string">&quot;2&quot;</span>]&#125;</span><br><span class="line">GET /es_db/_doc/_search?q=age:&lt;=<span class="number">28</span> <span class="comment">// 查询小于等于：GET /索引名称/类型/_search?q=age:&lt;=**</span></span><br><span class="line">GET /es_db/_doc/_search?q=age:&gt;=<span class="number">28</span> <span class="comment">// 查询大于等于：GET /索引名称/类型/_search?q=age:&gt;=**</span></span><br><span class="line">GET /es_db/_doc/_search?q=age[<span class="number">25</span> TO <span class="number">26</span>]&amp;from=<span class="number">0</span>&amp;size=<span class="number">1</span> <span class="comment">// 分页查询：from=*&amp;size=*</span></span><br><span class="line">GET /es_db/_doc/_search?_source=name,age <span class="comment">// 对查询结果只输出某些字段：_search?_source=字段,字段</span></span><br><span class="line">GET /es_db/_doc/_search?q=age[<span class="number">25</span> TO <span class="number">26</span>],sex:<span class="number">0</span> <span class="comment">// 多条件查询</span></span><br><span class="line">GET /es_db/_doc/_search?sort=age:desc <span class="comment">// 对查询结果排序sort=字段:desc/asc</span></span><br></pre></td></tr></table></figure><p><strong><code>ES</code><strong>是</strong>基于<code>Restful API</code><strong>和所有客户端交互都是使用</strong><code>JSON</code>格式</strong>数据,其他所有程序语言都可使用RESTful API,通过9200端口的与ES进行通信,GET查询、PUT添加、POST修改、DELETE删除, <strong><code>POST</code><strong>和</strong><code>PUT</code><strong>都能起到</strong>创建&#x2F;更新</strong>的作用：  </p><ul><li><strong><code>PUT</code>需要对一个具体的资源进行操作</strong>,也就是要确定id才能进行<strong>更新&#x2F;创建</strong>,而 <strong><code>POST</code>可针对整个资源集合进行操作</strong>,若<strong>不写<code>id</code>则由<code>ES</code>生成一个唯一<code>id</code>进行创建新文档</strong>,过填了id则针对该id文档进行<strong>创建&#x2F;更新</strong></li><li><strong><code>PUT</code>会将<code>JSON</code>数据都进行替换,<code>POST</code>只会更新相同字段的值</strong></li><li><strong><code>PUT</code>与<code>DELETE</code>都是幂等性操作</strong>,不论操作多少次结果都一样</li></ul><h2 id="文档批量操作"><a href="#文档批量操作" class="headerlink" title="文档批量操作"></a>文档批量操作</h2><p>通过 <strong><code>_mget</code></strong> 的API来实现 <strong>批量操作多个文档</strong>,可通过 <strong><code>_id</code></strong> 批量获取 <strong>不同<code>index</code>和<code>type</code>的数据</strong>,若查询的是同一个文档可<strong>将<code>index</code>和<code>type</code>放到URL上</strong>。且可 <strong>通过<code>_source</code>指定查询字段</strong>。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">GET _mget</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;docs&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;_index&quot;</span>: <span class="string">&quot;es_db_1&quot;</span>,</span><br><span class="line">      <span class="string">&quot;_type&quot;</span>: <span class="string">&quot;_doc&quot;</span>,</span><br><span class="line">      <span class="string">&quot;_id&quot;</span>: <span class="number">1</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;_index&quot;</span>: <span class="string">&quot;es_db&quot;</span>,</span><br><span class="line">      <span class="string">&quot;_type&quot;</span>: <span class="string">&quot;_doc&quot;</span>,</span><br><span class="line">      <span class="string">&quot;_id&quot;</span>: <span class="number">2</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line">GET /es_db/_doc/_mget?_source=age,name</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;docs&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;_id&quot;</span>: <span class="number">1</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;_id&quot;</span>: <span class="number">2</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>批量</strong> 对文档进行 <strong>写操作</strong> 是通过 <strong><code>_bulk</code></strong> 的API来实现的,通过 <strong><code>_bulk</code></strong> 写操作文档,一般至少有两行参数,第一行参数为指定 <strong>操作的类型</strong> 及 <strong>操作的对象</strong> 如index、type、id,第二行参数为 <strong>操作的数据</strong>. <strong><code>actionName</code></strong> 表示 <strong>操作类型</strong>, 主要有 <strong><code>create</code><strong>、</strong><code>index</code><strong>、</strong><code>delete</code><strong>、</strong><code>update</code></strong> 。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;actionName&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;_index&quot;</span>: <span class="string">&quot;indexName&quot;</span>,</span><br><span class="line">    <span class="string">&quot;_type&quot;</span>: <span class="string">&quot;typeName&quot;</span>,</span><br><span class="line">    <span class="string">&quot;_id&quot;</span>: <span class="string">&quot;id&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;field1&quot;</span>: <span class="string">&quot;value1&quot;</span>,</span><br><span class="line">  <span class="string">&quot;field2&quot;</span>: <span class="string">&quot;value2&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;actionName&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;_index&quot;</span>: <span class="string">&quot;indexName&quot;</span>,</span><br><span class="line">    <span class="string">&quot;_type&quot;</span>: <span class="string">&quot;typeName&quot;</span>,</span><br><span class="line">    <span class="string">&quot;_id&quot;</span>: <span class="string">&quot;id&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;field1&quot;</span>: <span class="string">&quot;value1&quot;</span>,</span><br><span class="line">  <span class="string">&quot;field2&quot;</span>: <span class="string">&quot;value2&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="乐观并发控制"><a href="#乐观并发控制" class="headerlink" title="乐观并发控制"></a>乐观并发控制</h2><p>在数据库领域中,有<strong>悲观并发控制</strong>和<strong>乐观并发控制</strong>两种方法来<strong>确保并发更新</strong>不丢失数据, <strong>悲观并发控制</strong>被<strong>关系型数据库</strong>广泛使用,阻塞访问资源以防止冲突；<strong>ES使用乐观并发控制</strong>,若源数据在读写当中被修改,更新将会失败。  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">PUT /db_index/_doc/<span class="number">1</span>?if_seq_no=<span class="number">1</span>&amp;if_primary_term=<span class="number">1</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;name&quot;</span>: <span class="string">&quot;Jack&quot;</span>,</span><br><span class="line">  <span class="string">&quot;sex&quot;</span>: <span class="number">1</span>,</span><br><span class="line">  <span class="string">&quot;age&quot;</span>: <span class="number">25</span>,</span><br><span class="line">  <span class="string">&quot;book&quot;</span>: <span class="string">&quot;Spring Boot 入门到精通2&quot;</span>,</span><br><span class="line">  <span class="string">&quot;remark&quot;</span>: <span class="string">&quot;hello world2&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>ES老版本</strong>是使用 <strong><code>version</code><strong>字段来乐观并发控制,新版本7.x使用</strong><code>if_seq_no</code>&#x3D;文档版本号&amp;<code>if_primary_term</code>&#x3D;文档位置</strong>来乐观并发控制。  </li><li>每当Primary Shard发生重新分配时如 <strong>重启</strong>, <strong><code>Primary</code>选举</strong> 等, <strong><code>_primary_term</code>会递增<code>1</code></strong>, <strong><code>_primary_term</code></strong> 主要是用来 <strong>恢复数据时</strong> 处理当多个文档的 <strong><code>_seq_no</code>一样</strong> 时的冲突.  </li><li>如当一个shard宕机了,<code>raplica</code>需要用到最新的数据,就会根据<code>_primary_term</code>和<code>_seq_no</code>两个值来拿到最新的document。</li></ul><h2 id="文档映射"><a href="#文档映射" class="headerlink" title="文档映射"></a>文档映射</h2><p>ES中映射可以分为<strong>动态映射</strong>和<strong>静态映射</strong>,在关系数据库中,需要事先在数据库下创建数据表,并创建表字段、类型、长度、主键等,最后才能基于表插入数据。而Elasticsearch中<strong>不需要定义<code>Mapping</code>映射</strong>,在<strong>文档写入ES时</strong>,会<strong>根据文档字段自动识别类型</strong>,该机制为<strong>动态映射</strong>；也可<strong>事先定义好映射</strong>,包含文档的各<strong>字段类型</strong>、<strong>分词器</strong>等,该方式为<strong>静态映射</strong>  </p><ul><li><strong>字符串</strong>： <strong><code>string</code>类型包含<code>text</code>和<code>keyword</code></strong></li><li><strong><code>text</code><strong>： 该类型被用来</strong>索引长文本</strong>,创建索引前会<strong>将文本进行分词</strong>,转化为词的组合,建立索引；允许es来检索这些词, <strong>不能用来排序和聚合</strong></li><li><strong><code>keyword</code><strong>： 该类型</strong>不能分词</strong>,可被用来<strong>检索过滤</strong>、<strong>排序</strong>和<strong>聚合</strong>, <strong>不可用<code>text</code>进行分词模糊检索</strong></li><li><strong>数值型</strong>： <strong><code>long</code><strong>、</strong><code>integer</code><strong>、</strong><code>short</code><strong>、</strong><code>byte</code><strong>、</strong><code>double</code><strong>、</strong><code>float</code></strong></li><li><strong>日期型</strong>： <strong><code>date</code></strong></li><li><strong>布尔型</strong>： <strong><code>boolean</code></strong></li></ul><p><img src="/../../../../assets/png/ElasticSearch/%E5%8A%A8%E6%80%81%E6%98%A0%E5%B0%84%E8%A7%84%E5%88%99.png" alt="动态映射规则"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">GET /es_db/_mapping <span class="comment">// 获取文档映射</span></span><br><span class="line">    </span><br><span class="line">PUT /es_db2 <span class="comment">// 创建索引且设置文档映射</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;mappings&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;properties&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;name&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;type&quot;</span>: <span class="string">&quot;keyword&quot;</span>,</span><br><span class="line">        <span class="string">&quot;index&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="string">&quot;store&quot;</span>: <span class="literal">true</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">&quot;sex&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;type&quot;</span>: <span class="string">&quot;integer&quot;</span>,</span><br><span class="line">        <span class="string">&quot;index&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="string">&quot;store&quot;</span>: <span class="literal">true</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">&quot;age&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;type&quot;</span>: <span class="string">&quot;integer&quot;</span>,</span><br><span class="line">        <span class="string">&quot;index&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="string">&quot;store&quot;</span>: <span class="literal">true</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">&quot;book&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;type&quot;</span>: <span class="string">&quot;text&quot;</span>,</span><br><span class="line">        <span class="string">&quot;index&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="string">&quot;store&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="string">&quot;analyzer&quot;</span>: <span class="string">&quot;ik_smart&quot;</span>, <span class="comment">// 指定text类型的ik分词器</span></span><br><span class="line">        <span class="string">&quot;search_analyzer&quot;</span>: <span class="string">&quot;ik_smart&quot;</span> <span class="comment">// 指定text类型的ik分词器</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">&quot;address&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;type&quot;</span>: <span class="string">&quot;text&quot;</span>,</span><br><span class="line">        <span class="string">&quot;index&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="string">&quot;store&quot;</span>: <span class="literal">true</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>若要<strong>推倒现有的映射</strong>,得<strong>重新建立一个静态索引</strong>,然后把之前索引里的数据<strong>导入到新的索引</strong>里, <strong>删除原创建的索引</strong>, <strong>为新索引起个别名</strong>,为原索引名。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">POST _reindex <span class="comment">// 把之前索引里的数据导入到新的索引里</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;source&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;index&quot;</span>: <span class="string">&quot;db_index&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;dest&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;index&quot;</span>: <span class="string">&quot;db_index_2&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">DELETE /db_index<span class="comment">// 删除原创建的索引</span></span><br><span class="line">PUT /db_index_2/_alias/db_index<span class="comment">// 为新索引起个别名, 为原索引名</span></span><br></pre></td></tr></table></figure><p>若要<strong>推倒现有的映射</strong>,得<strong>重新建立一个静态索引</strong>,然后把之前索引里的数据<strong>导入到新的索引</strong>里, <strong>删除原创建的索引</strong>, <strong>为新索引起个别名</strong>,为原索引名。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">POST _reindex <span class="comment">// 把之前索引里的数据导入到新的索引里</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;source&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;index&quot;</span>: <span class="string">&quot;db_index&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;dest&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;index&quot;</span>: <span class="string">&quot;db_index_2&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">DELETE /db_index<span class="comment">// 删除原创建的索引</span></span><br><span class="line">PUT /db_index_2/_alias/db_index<span class="comment">// 为新索引起个别名, 为原索引名</span></span><br></pre></td></tr></table></figure><h2 id="DSL高级查询"><a href="#DSL高级查询" class="headerlink" title="DSL高级查询"></a>DSL高级查询</h2><p><strong><code>Domain Specific Language</code>领域专用语言</strong>,由<strong>叶子查询子句</strong>和<strong>复合查询子句</strong>两种子句组成。DSL查询语言又分为<strong>查询<code>DSL</code><strong>和</strong>过滤<code>DSL</code><strong>。ES中索引的数据都会存储一个 <strong><code>_score</code><strong>分值, <strong>分值越高就代表越匹配</strong>, <strong>查询上下文</strong>中不仅要判断查</strong>询条件与文档是否匹配</strong>,且还要关心</strong>相关度</strong>即 <strong><code>_score</code><strong>分值,需要根据分值排序；过</strong>滤器上下文</strong>中值关心<strong>查询条件与文档是否匹配</strong>,不计算 <strong><code>_score</code><strong>分值, <strong>不关心排序</strong>问题,经常使用过滤器,ES会</strong>自动缓存过滤器内容</strong>。</p><p><img src="/../../../../assets/png/ElasticSearch/DSL%E9%AB%98%E7%BA%A7%E6%9F%A5%E8%AF%A2.png" alt="DSL高级查询"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GET /es_db/_doc/_search <span class="comment">// 无查询条件是查询所有,默认查询所有,或使用match_all表示所有</span></span><br><span class="line">&#123;<span class="string">&quot;query&quot;</span>:&#123;<span class="string">&quot;match_all&quot;</span>:&#123;&#125;&#125;&#125;</span><br></pre></td></tr></table></figure><h2 id="叶子查询"><a href="#叶子查询" class="headerlink" title="叶子查询"></a>叶子查询</h2><h3 id="模糊匹配"><a href="#模糊匹配" class="headerlink" title="模糊匹配"></a>模糊匹配</h3><p><strong>模糊匹配</strong>主要是针对<strong>文本类型</strong>的字段,文本类型的字段会对<strong>内容进行分词</strong>, <strong>查询时也会对搜索条件进行分词</strong>,然后通过<strong>倒排索引</strong>查找到匹配数据,模糊匹配主要通过 <strong><code>match</code></strong> 等参数来实现  </p><ul><li><strong><code>match</code><strong>：通过</strong>match关键词模糊匹配</strong>条件内容, <strong>需指定字段名</strong>, <strong>会进行分词</strong><ul><li><strong><code>query</code><strong>：</strong>指定匹配的值</strong></li><li><strong><code>operator</code><strong>：</strong>匹配条件类型</strong><ul><li><strong><code>and</code><strong>：条件分词后</strong>都</strong>要匹配</li><li><strong><code>or</code><strong>：条件分词后</strong>有一个</strong>匹配即可,默认为or</li></ul></li><li><strong><code>minmum_should_match</code><strong>：指定</strong>最小匹配数量</strong></li></ul></li><li><strong><code>query_string</code><strong>：和match类似, <strong>可不指定字段</strong>即</strong>所有字段中搜索</strong>,范围更广泛</li><li><strong><code>match_phase</code><strong>：会对输入做</strong>分词</strong>,但<strong>结果中也包含所有分词</strong>,且<strong>顺序一样</strong></li><li><strong><code>prefix</code><strong>：</strong>前缀匹配</strong></li><li><strong><code>regexp</code><strong>：通过</strong>正则表达式</strong>来匹配数据</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">POST /es_db/_doc/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;from&quot;</span>: <span class="number">0</span>,</span><br><span class="line">  <span class="string">&quot;size&quot;</span>: <span class="number">2</span>,</span><br><span class="line">  <span class="string">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;match&quot;</span>: &#123;<span class="comment">// match会根据该字段的分词器,进行分词查询</span></span><br><span class="line">      <span class="string">&quot;address&quot;</span>: <span class="string">&quot;广州&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">POST /es_db/_doc/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;multi_match&quot;</span>: &#123; <span class="comment">// 多字段模糊匹配查询</span></span><br><span class="line">      <span class="string">&quot;query&quot;</span>: <span class="string">&quot;长沙&quot;</span>, </span><br><span class="line">      <span class="string">&quot;fields&quot;</span>: [<span class="string">&quot;address&quot;</span>, <span class="string">&quot;name&quot;</span>] <span class="comment">// address或name字段中匹配到“长沙”</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">POST /es_db/_doc/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;query_string&quot;</span>: &#123; <span class="comment">// 未指定字段条件查询query_string, 含AND与OR条件</span></span><br><span class="line">      <span class="string">&quot;query&quot;</span>: <span class="string">&quot;广州 OR 长沙&quot;</span> <span class="comment">// 所有的字段中只要包含“广州”或“长沙”</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">POST /es_db/_doc/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;query_string&quot;</span>: &#123; <span class="comment">// 指定字段条件查询query_string</span></span><br><span class="line">      <span class="string">&quot;query&quot;</span>: <span class="string">&quot;admin AND 长沙&quot;</span>,</span><br><span class="line">      <span class="string">&quot;fields&quot;</span>: [<span class="string">&quot;name&quot;</span>, <span class="string">&quot;address&quot;</span>] <span class="comment">// name或address匹配admin和长沙</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">GET /es_db/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;query&quot;</span>: &#123; <span class="comment">// ES执行搜索时,默认operator为or</span></span><br><span class="line">    <span class="string">&quot;match&quot;</span>: &#123; <span class="comment">// remark字段包含java或developer词组,则符合搜索条件。</span></span><br><span class="line">      <span class="string">&quot;remark&quot;</span>: <span class="string">&quot;java developer&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">GET /es_db/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;match&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;remark&quot;</span>: &#123; <span class="comment">// remark字段包含java和developer词组</span></span><br><span class="line">        <span class="string">&quot;query&quot;</span>: <span class="string">&quot;java developer&quot;</span>,</span><br><span class="line">        <span class="string">&quot;operator&quot;</span>: <span class="string">&quot;and&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">GET /es_db/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;match&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;remark&quot;</span>: &#123; <span class="comment">// 需要remark字段中包含多个搜索词条中的一定比例</span></span><br><span class="line">        <span class="string">&quot;query&quot;</span>: <span class="string">&quot;java architect assistant&quot;</span>,</span><br><span class="line">        <span class="string">&quot;minimum_should_match&quot;</span>: <span class="string">&quot;50%&quot;</span> <span class="comment">// minimum_should_match可使用百分比或固定数字</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong><code>match_phrase</code>短语搜索</strong>,使用短语搜索时和match类似,首先<strong>对搜索条件进行分词</strong>,ES在做分词时除了将数据切分外,还会保留一个<strong>词在整个数据中的下标<code>position</code><strong>。当ES执行match phrase短语搜索时,首先</strong>将搜索条件分词</strong>,然后<strong>在倒排索引中检索数据</strong>,若<strong>搜索条件分词数据</strong>在某个document某个field出现时,则<strong>检查匹配到的单词的<code>position</code>是否连续</strong>,若<strong>不连续则匹配失败</strong>。</p><p>ES对match phrase短语搜索提供了 <strong><code>slop</code>参数</strong>,可实现数据在所有匹配结果中,多个单词<strong>距离越近相关度评分越高排序越靠前</strong>,若<strong>当 <code>slop</code> 移动次数使用完毕还没有匹配成功则无搜索结果</strong>。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">GET _search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;match_phrase&quot;</span>: &#123; <span class="comment">// 短语搜索,搜索条件不分词</span></span><br><span class="line">      <span class="string">&quot;remark&quot;</span>: <span class="string">&quot;java assistant&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">GET /es_db/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;match_phrase&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;remark&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;query&quot;</span>: <span class="string">&quot;java assistant&quot;</span>,</span><br><span class="line">        <span class="string">&quot;slop&quot;</span>: <span class="number">1</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="前缀搜索"><a href="#前缀搜索" class="headerlink" title="前缀搜索"></a>前缀搜索</h3><p>通常针对 <strong><code>keyword</code></strong> 类型字段即<strong>不分词字段</strong>, <strong><code>keyword</code><strong>类型字段数据大小写敏感, <strong>前缀搜索效率比较低</strong>,且</strong>不计算相关度分数</strong>, <strong>前缀越短效率越低</strong>。若使用前缀搜索,建议使用长前缀,因为前缀搜索需要<strong>扫描完整索引内容</strong>,所以前缀越长相对效率越高。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">GET /test_a/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;prefix&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;f.keyword&quot;</span>: &#123;<span class="string">&quot;value&quot;</span>: <span class="string">&quot;Jav&quot;</span>&#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="通配符搜索"><a href="#通配符搜索" class="headerlink" title="通配符搜索"></a>通配符搜索</h3><p>通配符可在<strong>倒排索引</strong>中使用,也可在 <strong><code>keyword</code><strong>类型字段中使用。</strong><code>?</code>问号匹配一个任意字符</strong>, <strong><code>*</code>星号匹配<code>0</code>到<code>n</code>个任意字符</strong>。<strong>性能也很低</strong>,也<strong>需要扫描完整索引</strong>。  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">GET /test_a/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;wildcard&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;f.keyword&quot;</span>: &#123; <span class="string">&quot;value&quot;</span>: <span class="string">&quot;?e*o*&quot;</span> &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="正则搜索"><a href="#正则搜索" class="headerlink" title="正则搜索"></a>正则搜索</h3><p>可在 <strong>倒排索引</strong> 或 <strong><code>keyword</code></strong> 类型字段中使用, <strong>性能很低需要扫描完整索引</strong>。  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">GET /test_a/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;regexp&quot;</span>: &#123;<span class="string">&quot;f.keyword&quot;</span>: <span class="string">&quot;[A-z].+&quot;</span>&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="搜索推荐"><a href="#搜索推荐" class="headerlink" title="搜索推荐"></a>搜索推荐</h3><p>其原理和 <strong><code>match phrase</code><strong>类似,先使</strong>用<code>match</code>匹配<code>term</code>数据</strong>即示例中的<code>java</code>,然后在指定 <strong><code>slop</code><strong>移动次数范围内</strong>前缀匹配</strong>示例数据<code>sp</code>, <strong><code>max_expansions</code><strong>是用于</strong>指定<code>prefix</code>最多匹配多少个<code>term</code></strong>,超过该数量就不再匹配了。该语法限制只有<strong>最后一个<code>term</code><strong>会执行</strong>前缀搜索</strong>。执行<strong>性能很差</strong>, <strong>最后一个<code>term</code></strong> 需要 <strong>扫描所有符合<code>slop</code>要求的倒排索引的<code>term</code></strong>. 若必须使用一定要使用参数 <strong><code>max_expansions</code></strong>.  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">GET /test_a/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;match_phrase_prefix&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;f&quot;</span>: &#123;<span class="string">&quot;query&quot;</span>: <span class="string">&quot;java sp&quot;</span>,<span class="string">&quot;slop&quot;</span>: <span class="number">10</span>,<span class="string">&quot;max_expansions&quot;</span>: <span class="number">10</span>&#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="模糊搜索"><a href="#模糊搜索" class="headerlink" title="模糊搜索"></a>模糊搜索</h3><p>搜索时可能搜索条件文本输入错误,fuzzy技术就是用于解决错误拼写的,英文中很有效但中文中几乎无效,其中 <strong><code>fuzziness</code></strong> 代表 <strong><code>value</code>值<code>word</code>可修改多少个字母来进行拼写错误纠正</strong>,修改字母数量包含字母变更,增加或减少字母.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">GET /test_a/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;fuzzy&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;f&quot;</span>: &#123;<span class="string">&quot;value&quot;</span>: <span class="string">&quot;word&quot;</span>,<span class="string">&quot;fuzziness&quot;</span>: <span class="number">2</span>&#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="精确匹配"><a href="#精确匹配" class="headerlink" title="精确匹配"></a>精确匹配</h3><ul><li><strong><code>term</code><strong>： <strong>单个条件相等</strong>,查询字段</strong>映射类型</strong>属于为 <strong><code>keyword</code></strong>, <strong>不会被分词</strong></li><li><strong><code>terms</code><strong>： 单个字段属于某个值</strong>数组</strong>内的值</li><li><strong><code>range</code><strong>： 字段属于某个</strong>范围</strong>内的值<ul><li><strong><code>gte</code>：</strong>  大于等于</li><li><strong><code>lte</code>：</strong>  小于等于</li><li><strong><code>gt</code>：</strong>  大于</li><li><strong><code>lt</code>：</strong>  小于</li><li><strong><code>now</code>：</strong>  当前时间</li></ul></li><li><strong><code>exists</code><strong>： 某个字段的值</strong>是否存在</strong></li><li><strong><code>ids</code>：</strong>  <strong>通过ID批量查询</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">POST /es_db/_doc/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;term&quot;</span>: &#123; <span class="comment">// term查询不会对字段进行分词查询,会采用精确匹配</span></span><br><span class="line">      <span class="string">&quot;name&quot;</span>: <span class="string">&quot;admin&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">POST /es_db/_doc/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;range&quot;</span>: &#123;<span class="comment">// 范围查询</span></span><br><span class="line">      <span class="string">&quot;age&quot;</span>: &#123;<span class="string">&quot;gte&quot;</span>: <span class="number">25</span>,<span class="string">&quot;lte&quot;</span>: <span class="number">28</span>&#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">POST /es_db/_doc/_search <span class="comment">// 范围、分页、输出字段、综合查询</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;range&quot;</span>: &#123;<span class="comment">// 范围查询</span></span><br><span class="line">      <span class="string">&quot;age&quot;</span>: &#123;<span class="string">&quot;gte&quot;</span>: <span class="number">25</span>,<span class="string">&quot;lte&quot;</span>: <span class="number">28</span>&#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;from&quot;</span>: <span class="number">0</span>, <span class="comment">// 分页</span></span><br><span class="line">  <span class="string">&quot;size&quot;</span>: <span class="number">2</span>,</span><br><span class="line">  <span class="string">&quot;_source&quot;</span>: [<span class="string">&quot;name&quot;</span>, <span class="string">&quot;age&quot;</span>, <span class="string">&quot;book&quot;</span>], <span class="comment">// 指定输出字段</span></span><br><span class="line">  <span class="string">&quot;sort&quot;</span>: &#123;<span class="string">&quot;age&quot;</span>: <span class="string">&quot;desc&quot;</span>&#125;<span class="comment">// 排序</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="组合查询"><a href="#组合查询" class="headerlink" title="组合查询"></a>组合查询</h3><p><strong>组合条件查询</strong>是将<strong>叶子条件查询</strong>语句进行<strong>组合</strong>而形成的一个完整的查询条件, <strong><code>must</code><strong>、</strong><code>filter</code><strong>、</strong><code>shoud</code><strong>、</strong><code>must_not</code><strong>等</strong>子条件</strong>是通过 <strong><code>term</code><strong>、</strong><code>terms</code><strong>、</strong><code>range</code><strong>、</strong><code>ids</code><strong>、</strong><code>exists</code><strong>、</strong><code>match</code><strong>等</strong>叶子条件为参数</strong>,当<strong>只有一个搜索条件</strong>时,must等对应的是一个<strong>对象</strong>,当<strong>多个条件</strong>时,对应的是一个<strong>数组</strong>。</p><ul><li><strong><code>bool</code>：</strong> 各条件之间有 <strong><code>and</code></strong>, <strong><code>or</code></strong> 或 <strong><code>not</code></strong> 关系<ul><li><strong><code>must</code>：</strong> 各个条件<strong>都必须满足</strong>,即各条件是 <strong><code>and</code></strong> 关系</li><li><strong><code>should</code>：</strong> 各个条件<strong>有一个满足</strong>即可,即各条件是 <strong><code>or</code></strong> 关系</li><li><strong><code>must_not</code>：</strong> <strong>不满足所有条件</strong>,即各条件是 <strong><code>not</code></strong> 关系</li><li><strong><code>filter</code>：</strong> <strong>不计算相关度评分</strong>,即<strong>不计算<code>_score</code></strong>, <strong>不对结果排序</strong>,效率更高, <strong>查询结果可被缓存</strong></li></ul></li><li><strong><code>constant_score</code>：</strong> <strong>不计算相关度评分</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">POST /es_db/_doc/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;bool&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;filter&quot;</span>: &#123; <span class="comment">// 对数据进行过滤</span></span><br><span class="line">        <span class="string">&quot;term&quot;</span>: &#123;<span class="string">&quot;age&quot;</span>: <span class="number">25</span>&#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">GET /es_db/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;query&quot;</span>: &#123; <span class="comment">// 使用should+bool搜索,控制搜索条件的匹配度</span></span><br><span class="line">    <span class="string">&quot;bool&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;should&quot;</span>: [ <span class="comment">// 必须匹配java、developer、assistant三个词条中的至少2个</span></span><br><span class="line">        &#123;<span class="string">&quot;match&quot;</span>: &#123;<span class="string">&quot;remark&quot;</span>: <span class="string">&quot;java&quot;</span>&#125;&#125;,</span><br><span class="line">        &#123;<span class="string">&quot;match&quot;</span>: &#123;<span class="string">&quot;remark&quot;</span>: <span class="string">&quot;developer&quot;</span>&#125;&#125;,</span><br><span class="line">        &#123;<span class="string">&quot;match&quot;</span>: &#123;<span class="string">&quot;remark&quot;</span>: <span class="string">&quot;assistant&quot;</span>&#125;&#125;</span><br><span class="line">      ],</span><br><span class="line">      <span class="string">&quot;minimum_should_match&quot;</span>: <span class="number">2</span><span class="comment">// 控制搜索条件的匹配度</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ES中执行 <strong><code>match</code>搜索</strong> 时,ES底层通常会<strong>对搜索条件进行底层转换</strong>,来实现最终的搜索结果,若不怕麻烦, <strong>尽量使用转换后的语法执行搜索</strong>, <strong>效率更高</strong>。  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">GET /es_db/_search<span class="comment">// 转换前</span></span><br><span class="line">&#123;<span class="string">&quot;query&quot;</span>:&#123;<span class="string">&quot;match&quot;</span>:&#123;<span class="string">&quot;remark&quot;</span>:<span class="string">&quot;java developer&quot;</span>&#125;&#125;&#125;</span><br><span class="line">GET /es_db/_search<span class="comment">// 转换后</span></span><br><span class="line">&#123;<span class="string">&quot;query&quot;</span>:&#123;<span class="string">&quot;bool&quot;</span>:&#123;<span class="string">&quot;should&quot;</span>:[&#123;<span class="string">&quot;term&quot;</span>:&#123;<span class="string">&quot;remark&quot;</span>:<span class="string">&quot;java&quot;</span>&#125;&#125;,&#123;<span class="string">&quot;term&quot;</span>:&#123;<span class="string">&quot;remark&quot;</span>:&#123;<span class="string">&quot;value&quot;</span>:<span class="string">&quot;developer&quot;</span>&#125;&#125;&#125;]&#125;&#125;&#125;</span><br><span class="line"></span><br><span class="line">GET /es_db/_search<span class="comment">// 转换前</span></span><br><span class="line">&#123;<span class="string">&quot;query&quot;</span>:&#123;<span class="string">&quot;match&quot;</span>:&#123;<span class="string">&quot;remark&quot;</span>:&#123;<span class="string">&quot;query&quot;</span>:<span class="string">&quot;java developer&quot;</span>,<span class="string">&quot;operator&quot;</span>:<span class="string">&quot;and&quot;</span>&#125;&#125;&#125;&#125;</span><br><span class="line">GET /es_db/_search<span class="comment">// 转换后</span></span><br><span class="line">&#123;<span class="string">&quot;query&quot;</span>:&#123;<span class="string">&quot;bool&quot;</span>:&#123;<span class="string">&quot;must&quot;</span>:[&#123;<span class="string">&quot;term&quot;</span>:&#123;<span class="string">&quot;remark&quot;</span>:<span class="string">&quot;java&quot;</span>&#125;&#125;,&#123;<span class="string">&quot;term&quot;</span>:&#123;<span class="string">&quot;remark&quot;</span>:&#123;<span class="string">&quot;value&quot;</span>:<span class="string">&quot;developer&quot;</span>&#125;&#125;&#125;]&#125;&#125;&#125;</span><br><span class="line"></span><br><span class="line">GET /es_db/_search<span class="comment">// 转换前</span></span><br><span class="line">&#123;<span class="string">&quot;query&quot;</span>:&#123;<span class="string">&quot;match&quot;</span>:&#123;<span class="string">&quot;remark&quot;</span>:&#123;<span class="string">&quot;query&quot;</span>:<span class="string">&quot;java architect assistant&quot;</span>,<span class="string">&quot;minimum_should_match&quot;</span>:<span class="string">&quot;68%&quot;</span>&#125;&#125;&#125;&#125;</span><br><span class="line">GET /es_db/_search<span class="comment">// 转换后</span></span><br><span class="line">&#123;<span class="string">&quot;query&quot;</span>:&#123;<span class="string">&quot;bool&quot;</span>:&#123;<span class="string">&quot;should&quot;</span>:[&#123;<span class="string">&quot;term&quot;</span>:&#123;<span class="string">&quot;remark&quot;</span>:<span class="string">&quot;java&quot;</span>&#125;&#125;,&#123;<span class="string">&quot;term&quot;</span>:&#123;<span class="string">&quot;remark&quot;</span>:<span class="string">&quot;architect&quot;</span>&#125;&#125;,&#123;<span class="string">&quot;term&quot;</span>:&#123;<span class="string">&quot;remark&quot;</span>:<span class="string">&quot;assistant&quot;</span>&#125;&#125;],<span class="string">&quot;minimum_should_match&quot;</span>:<span class="number">2</span>&#125;&#125;&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="boost权重控制"><a href="#boost权重控制" class="headerlink" title="boost权重控制"></a>boost权重控制</h3><p><strong><code>boost</code>权重控制</strong>一般用于<strong>搜索时相关度排序</strong>使用,将<strong>某字段数据匹配时</strong>相关度<strong>分数增加</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">GET /es_db/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;bool&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;must&quot;</span>: [&#123;<span class="string">&quot;match&quot;</span>: &#123;<span class="string">&quot;remark&quot;</span>: <span class="string">&quot;java&quot;</span>&#125;&#125;],</span><br><span class="line">      <span class="string">&quot;should&quot;</span>: [</span><br><span class="line">        &#123;<span class="string">&quot;match&quot;</span>: &#123;<span class="string">&quot;remark&quot;</span>: &#123;<span class="string">&quot;query&quot;</span>: <span class="string">&quot;developer&quot;</span>,<span class="string">&quot;boost&quot;</span>: <span class="number">3</span>&#125;&#125;&#125;,</span><br><span class="line">        &#123;<span class="string">&quot;match&quot;</span>: &#123;<span class="string">&quot;remark&quot;</span>: &#123;<span class="string">&quot;query&quot;</span>: <span class="string">&quot;architect&quot;</span>,<span class="string">&quot;boost&quot;</span>: <span class="number">1</span>&#125;&#125;&#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="dis-max"><a href="#dis-max" class="headerlink" title="dis_max"></a>dis_max</h3><p><strong><code>dis_max</code></strong> 语法是直接 <strong>获取搜索多条件</strong> 中 <strong>单条件<code>query</code>相关度分数最高</strong> 的数据,以该数据做 <strong>相关度排序</strong>。<strong>基于<code>dis_max</code></strong> 实现 <strong><code>best fields</code>策略</strong> 进行 <strong>多字段搜索</strong>, <strong><code>best fields</code>策略</strong>是搜索document中<strong>某个<code>field</code></strong>, <strong>尽可能多的匹配搜索条件</strong>。与之相反的是 <strong><code>most fields</code>策略</strong> 即 <strong>尽可能多的字段匹配到搜索条件</strong> 。</p><p><strong><code>best fields</code>策略</strong>优点<strong>是精确匹配</strong>的数据可尽可能排列在<strong>最前端</strong>,且可通过 <strong><code>minimum_should_match</code></strong> 去除 <strong>长尾数据</strong>,避免长尾数据字段对排序结果的影响。<strong>缺点</strong>相对<strong>排序不均匀</strong>。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">GET /es_db/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;query&quot;</span>: &#123; </span><br><span class="line">    <span class="string">&quot;dis_max&quot;</span>: &#123; <span class="comment">// 找name字段中rod匹配相关度分数或remark字段中java developer匹配相关度分数,哪个高就使用哪个相关度分数进行结果排序</span></span><br><span class="line">      <span class="string">&quot;queries&quot;</span>: [</span><br><span class="line">        &#123;<span class="string">&quot;match&quot;</span>: &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;rod&quot;</span>&#125;&#125;,</span><br><span class="line">        &#123;<span class="string">&quot;match&quot;</span>: &#123;<span class="string">&quot;remark&quot;</span>: <span class="string">&quot;java developer&quot;</span>&#125;&#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong><code>dis_max</code></strong> 是将 <strong>多个</strong> 搜索query条件中 <strong>相关度分数最高</strong> 的用于结果排序, <strong>忽略其他<code>query</code>分数</strong>,在某些情况下 <strong>需要其他query条件中相关度介入最终结果排序</strong>,此时可 <strong>使用<code>tie_breaker</code>参数来优化<code>dis_max</code>搜索</strong>。 <strong><code>tie_breaker</code></strong> 参数表示 <strong>将其他<code>query</code>搜索条件相关度分数乘以参数值再参与结果排序</strong>。若不定义 <strong><code>tie_breaker</code></strong> 参数相当于 <strong>参数值为<code>0</code></strong>,故其他query条件的相关度分数被忽略。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">GET /es_db/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;query&quot;</span>: &#123; </span><br><span class="line">    <span class="string">&quot;dis_max&quot;</span>: &#123; <span class="comment">// 找name字段中rod匹配相关度分数或remark字段中java developer匹配相关度分数,哪个高就使用哪个相关度分数进行结果排序</span></span><br><span class="line">      <span class="string">&quot;queries&quot;</span>: [</span><br><span class="line">        &#123;<span class="string">&quot;match&quot;</span>: &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;rod&quot;</span>&#125;&#125;,</span><br><span class="line">        &#123;<span class="string">&quot;match&quot;</span>: &#123;<span class="string">&quot;remark&quot;</span>: <span class="string">&quot;java developer&quot;</span>&#125;&#125;</span><br><span class="line">      ],</span><br><span class="line">      <span class="string">&quot;tie_breaker&quot;</span>: <span class="number">0.5</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>使用<code>multi_match</code>简化<code>dis_max+tie_breaker</code></strong>,ES中相同结果搜索也可使用不同语法语句来实现。  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">GET /es_db/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;dis_max&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;queries&quot;</span>: [</span><br><span class="line">        &#123;<span class="string">&quot;match&quot;</span>: &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;rod&quot;</span>&#125;&#125;,</span><br><span class="line">        &#123;<span class="string">&quot;match&quot;</span>: &#123;<span class="string">&quot;remark&quot;</span>: &#123;<span class="string">&quot;query&quot;</span>: <span class="string">&quot;java assistant&quot;</span>,<span class="string">&quot;boost&quot;</span>: <span class="number">2</span>&#125;&#125;&#125;</span><br><span class="line">      ],</span><br><span class="line">      <span class="string">&quot;tie_breaker&quot;</span>: <span class="number">0.5</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">GET /es_db/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;multi_match&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;query&quot;</span>: <span class="string">&quot;rod java developer&quot;</span>,</span><br><span class="line">      <span class="string">&quot;fields&quot;</span>: [</span><br><span class="line">        <span class="string">&quot;name&quot;</span>,</span><br><span class="line">        <span class="string">&quot;remark^2&quot;</span><span class="comment">// ^n代表权重,相当于&quot;boost&quot;:n</span></span><br><span class="line">      ],</span><br><span class="line">      <span class="string">&quot;type&quot;</span>: <span class="string">&quot;best_fields&quot;</span>, <span class="comment">// 其中type常用的有best_fields和most_fields</span></span><br><span class="line">      <span class="string">&quot;tie_breaker&quot;</span>: <span class="number">0.5</span>,</span><br><span class="line">      <span class="string">&quot;minimum_should_match&quot;</span>: <span class="string">&quot;50%&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong><code>cross fields</code></strong> 是一个 <strong>唯一标识</strong>,且分布在 <strong>多个<code>fields</code></strong> 中, <strong>使用该唯一标识搜索数据即<code>cross fields</code>搜索</strong>。如人名可分为姓和名,地址可分为省、市、区县、街道等。使用人名或地址来搜索document,就称为cross fields搜索。  </p><p>实现这种搜索,一般都是使用 <strong><code>most fields</code>搜索策略</strong>,因为这就是 <strong>多个<code>field</code></strong> 问题。 <strong><code>Cross fields</code></strong> 搜索策略是 <strong>从多个字段中搜索条件数据</strong>, <strong>默认和<code>most fields</code>搜索逻辑一致</strong> 但 <strong>计算相关度分数和<code>best fields</code>策略一致</strong>。一般若使用cross fields搜索策略,都会携带 <strong><code>operator</code></strong> 额外参数,用来标记搜索条件如何在多个字段中匹配。  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">GET /es_db/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;multi_match&quot;</span>: &#123; <span class="comment">// 搜索条件中java必须在name或remark字段中匹配,developer也必须在name或remark字段中匹配</span></span><br><span class="line">      <span class="string">&quot;query&quot;</span>: <span class="string">&quot;java developer&quot;</span>,</span><br><span class="line">      <span class="string">&quot;fields&quot;</span>: [<span class="string">&quot;name&quot;</span>, <span class="string">&quot;remark&quot;</span>],</span><br><span class="line">      <span class="string">&quot;type&quot;</span>: <span class="string">&quot;cross_fields&quot;</span>,</span><br><span class="line">      <span class="string">&quot;operator&quot;</span>: <span class="string">&quot;and&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong><code>most fields</code>策略</strong> 是尽可能匹配更多字段,会导致 <strong>精确搜索结果排序问题</strong> ,又因为cross fields搜索,不能使用 <strong><code>minimum_should_match</code></strong> 来去除长尾数据。故在使用 <strong><code>most fields</code></strong> 和 <strong><code>cross fields</code></strong> 策略搜索数据时,都有不同缺陷,商业项目开发中都 <strong>推荐使用<code>best fields</code>策略</strong> 实现搜索。</p><p>可通过 <strong><code>copy_to</code></strong> 解决 <strong><code>cross fields</code>搜索问题</strong>, <strong><code>copy_to</code></strong> 就是将 <strong>多个字段复制到一个字段</strong> 中实现一个 <strong>多字段组合</strong>,在商业项目中,也用于 <strong>解决搜索条件默认字段问题</strong>。若需要使用copy_to语法,则需要在定义 <strong><code>index</code></strong> 时手工指定 <strong><code>mapping</code>映射策略</strong>。  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">PUT /es_db/_mapping</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;properties&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;provice&quot;</span>: &#123;<span class="string">&quot;type&quot;</span>: <span class="string">&quot;text&quot;</span>,<span class="string">&quot;analyzer&quot;</span>: <span class="string">&quot;standard&quot;</span>,<span class="string">&quot;copy_to&quot;</span>: <span class="string">&quot;address&quot;</span>&#125;,</span><br><span class="line">    <span class="string">&quot;city&quot;</span>: &#123;<span class="string">&quot;type&quot;</span>: <span class="string">&quot;text&quot;</span>,<span class="string">&quot;copy_to&quot;</span>: <span class="string">&quot;address&quot;</span>&#125;,</span><br><span class="line">    <span class="string">&quot;street&quot;</span>: &#123;<span class="string">&quot;type&quot;</span>: <span class="string">&quot;text&quot;</span>,<span class="string">&quot;analyzer&quot;</span>: <span class="string">&quot;standard&quot;</span>,<span class="string">&quot;copy_to&quot;</span>: <span class="string">&quot;address&quot;</span>&#125;,</span><br><span class="line">    <span class="string">&quot;address&quot;</span>: &#123;<span class="string">&quot;type&quot;</span>: <span class="string">&quot;text&quot;</span>,<span class="string">&quot;analyzer&quot;</span>: <span class="string">&quot;standard&quot;</span>&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在mapping定义中新增provice、city、street、address等字段,其中provice、city、street三个字段值会自动复制到address字段中,实现一个字段组合。在搜索地址时可在address字段中做条件匹配,从而<strong>避免<code>most fields</code>策略导致的问题</strong>。在维护数据时不需对address字段特殊维护,ES会<strong>自动维护组合字段</strong>。在存储时<strong>物理上不一定存在但逻辑上存在</strong>,因为address由3个物理存在属性province、city、street组成。</p><p>使用 <strong><code>match</code></strong> 和 <strong><code>proximity search</code></strong> 实现 <strong>召回率</strong> 和 <strong>精准度平衡</strong> ,若搜索时只使用<code>match phrase</code>语法,会导致 <strong>召回率低下</strong>,若只使用<code>match</code>语法,会导致 <strong>精准度低下</strong>,因为搜索结果排序是根据相关度分数算法计算得到。若需要在结果中 <strong>兼顾召回率</strong> 和 <strong>精准度</strong>,就需要将 <strong><code>match</code></strong> 和 <strong><code>proximity search</code></strong> 混合使用。</p><ul><li><strong>召回率</strong>：<strong>搜索结果比率</strong>,如索引A中有100个document,搜索时返回多少个document</li><li><strong>精准度</strong>：<strong>搜索结果准确率</strong>,如搜索条件为<code>hello java</code>,搜索结果中尽可能让短语匹配和<code>hello java</code>离的近的结果排序靠前<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">POST /test_a/_doc/<span class="number">3</span></span><br><span class="line">&#123;<span class="string">&quot;f&quot;</span>:<span class="string">&quot;hello, java is very good, spark is also very good&quot;</span>&#125;</span><br><span class="line">POST /test_a/_doc/<span class="number">4</span></span><br><span class="line">&#123;<span class="string">&quot;f&quot;</span>:<span class="string">&quot;java and spark, development language &quot;</span>&#125;</span><br><span class="line">POST /test_a/_doc/<span class="number">5</span></span><br><span class="line">&#123;<span class="string">&quot;f&quot;</span>:<span class="string">&quot;Java Spark is a fast and general-purpose cluster computing system. It provides high-level APIs in Java, Scala, Python and R, and an optimized engine that supports general execution graphs.&quot;</span>&#125;</span><br><span class="line">POST /test_a/_doc/<span class="number">6</span></span><br><span class="line">&#123;<span class="string">&quot;f&quot;</span>:<span class="string">&quot;java spark and, development language &quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">GET /test_a/_search</span><br><span class="line">&#123;<span class="string">&quot;query&quot;</span>:&#123;<span class="string">&quot;match&quot;</span>:&#123;<span class="string">&quot;f&quot;</span>:<span class="string">&quot;java spark&quot;</span>&#125;&#125;&#125;</span><br><span class="line">GET /test_a/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;bool&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;must&quot;</span>: [&#123;<span class="string">&quot;match&quot;</span>: &#123;<span class="string">&quot;f&quot;</span>: <span class="string">&quot;java spark&quot;</span>&#125;&#125;],</span><br><span class="line">      <span class="string">&quot;should&quot;</span>: [&#123;<span class="string">&quot;match_phrase&quot;</span>: &#123;<span class="string">&quot;f&quot;</span>: &#123;<span class="string">&quot;query&quot;</span>: <span class="string">&quot;java spark&quot;</span>,<span class="string">&quot;slop&quot;</span>: <span class="number">50</span>&#125;&#125;&#125;]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="连接查询"><a href="#连接查询" class="headerlink" title="连接查询"></a>连接查询</h2><ul><li><strong>父子</strong> 文档查询： <strong><code>parent/child</code></strong></li><li><strong>嵌套</strong> 文档查询： <strong><code>nested</code></strong></li></ul><h2 id="ES架构原理"><a href="#ES架构原理" class="headerlink" title="ES架构原理"></a>ES架构原理</h2><p>在ES中主要分成 <strong><code>Master</code></strong> 和 <strong><code>DataNode</code></strong> 两类节点,ES启动时会选举出一个Master节点,当某个节点启动后,使用 <strong><code>Zen Discovery</code>机制</strong> 找到集群中的其他节点并 <strong>建立连接</strong>,并 <strong>从候选主节点中选举出一个主节点</strong>。一个ES集群中只有一个Master节点,但会有 <strong><code>N</code>个<code>DataNode</code></strong> 节点,在生产环境中内存可相对小一点但机器要稳定。</p><ul><li><strong><code>Master</code><strong>：</strong>管理索引</strong>即创建、删除索引, <strong>分配分片</strong>, <strong>维护元数据</strong>, <strong>管理集群节点状态</strong>, <strong>不负责数据写入和查询</strong>,比较轻量级</li><li><strong><code>DataNode</code><strong>：</strong>数据写入</strong>, <strong>数据检索</strong>,大部分ES压力都在DataNode节点上</li></ul><h3 id="分片Shard"><a href="#分片Shard" class="headerlink" title="分片Shard"></a>分片Shard</h3><p>ES是一个<strong>分布式搜索引擎</strong>,索引数据也分成若干部分,分布在不同服务器节点中,分布在不同服务器节点中的索引数据,就是Shard分片。Elasticsearch会<strong>自动管理分片</strong>,若发现分片<strong>分布不均衡</strong>,会<strong>自动迁移</strong>一个索引index由多个shard分片组成, <strong>分片是分布在不同的服务器上</strong>。</p><h3 id="副本"><a href="#副本" class="headerlink" title="副本"></a>副本</h3><p>为了<strong>对ES分片进行容错</strong>,假设某个节点不可用,会导致整个索引库都将不可用。故需要对分片进行副本容错, <strong>每个分片都会有对应的副本</strong>。<strong>默认创建索引为<code>1</code>个分片</strong>、每个分片有 <strong><code>1</code>个主分片</strong> 和 <strong><code>1</code>个副本分片</strong>。</p><p>每个分片都会有<strong>一个<code>Primary Shard</code>主分片</strong>,也会有<strong>若干个<code>Replica Shard</code>副本分片</strong>, <strong><code>Primary Shard</code>和<code>Replica Shard</code>不在同一个节点上</strong>。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">PUT /job_idx_shard_temp <span class="comment">// 创建指定分片数量、副本数量的索引</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;mappings&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;properties&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;id&quot;</span>: &#123;<span class="string">&quot;type&quot;</span>: <span class="string">&quot;long&quot;</span>,<span class="string">&quot;store&quot;</span>: <span class="literal">true</span>&#125;,</span><br><span class="line">            <span class="string">&quot;area&quot;</span>: &#123;<span class="string">&quot;type&quot;</span>: <span class="string">&quot;keyword&quot;</span>,<span class="string">&quot;store&quot;</span>: <span class="literal">true</span>&#125;,</span><br><span class="line">            <span class="string">&quot;edu&quot;</span>: &#123;<span class="string">&quot;type&quot;</span>: <span class="string">&quot;keyword&quot;</span>,<span class="string">&quot;store&quot;</span>: <span class="literal">true</span>&#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;settings&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;number_of_shards&quot;</span>: <span class="number">3</span>,<span class="comment">// 指定分片数量</span></span><br><span class="line">        <span class="string">&quot;number_of_replicas&quot;</span>: <span class="number">2</span><span class="comment">// 指定副本数量</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">GET /_cat/indices?v<span class="comment">// 查看分片、主分片、副本分片</span></span><br></pre></td></tr></table></figure><h2 id="文档写入原理"><a href="#文档写入原理" class="headerlink" title="文档写入原理"></a>文档写入原理</h2><p><img src="/../../../../assets/png/ElasticSearch/%E6%96%87%E6%A1%A3%E5%86%99%E5%85%A5%E5%8E%9F%E7%90%86.png" alt="文档写入原理"></p><p>选择 <strong>任意一个<code>DataNode</code>发送请求</strong> 如node2,此时node2就成为一个 <strong><code>coordinating node</code>协调节点</strong>,通过协调节点 <strong>计算得到文档要写入的分片<code>shard = hash(routing) % number_of_primary_shards</code></strong>,其中 <strong><code>routing</code></strong> 是一个 <strong>可变值</strong>, <strong>默认为文档<code>_id</code></strong>,然后 <strong>协调节点会进行路由</strong>,将请求 <strong>转发</strong>给对应 <strong><code>primary shard</code>主分片</strong>所在的 <strong><code>DataNode</code></strong>,假设primary shard主分片在node1、replica shard副分片在node2,node1节点上的Primary Shard处理请求,写入数据到索引库中,并将数据同步到Replica shard副分片,Primary Shard和Replica Shard都保存好了文档则返回Client。  </p><h2 id="检索原理"><a href="#检索原理" class="headerlink" title="检索原理"></a>检索原理</h2><p><img src="/../../../../assets/png/ElasticSearch/%E6%A3%80%E7%B4%A2%E5%8E%9F%E7%90%86.png" alt="检索原理"></p><p>Client发起查询请求某个 <strong><code>DataNode</code></strong> 接收到请求后,该 <strong><code>DataNode</code></strong> 就成为 <strong><code>Coordinating Node</code>协调节点</strong>, <strong>协调节点将查询请求广播到每一个数据节点</strong>,这些 <strong>数据节点</strong> 的 <strong>分片</strong> 会处理该查询请求, <strong>每个分片进行数据查询</strong>,将符合条件的数据放在一个 <strong>优先队列</strong> 中,并将这些数据的 <strong>文档<code>ID</code></strong> 、 <strong>节点信息</strong> 、 <strong>分片信息</strong> 返回给 <strong>协调节点</strong> , <strong>协调节点将所有结果进行汇总并全局排序</strong>,协调节点向包含这些 <strong>文档<code>ID</code></strong> 的 <strong>分片</strong> 发送 <strong><code>get</code>请求</strong>,对应的分片将文档数据返回给协调节点,最后协调节点将数据返回给客户端。</p><h2 id="准实时索引"><a href="#准实时索引" class="headerlink" title="准实时索引"></a>准实时索引</h2><p><img src="/../../../../assets/png/ElasticSearch/%E5%87%86%E5%AE%9E%E6%97%B6%E7%B4%A2%E5%BC%95.png" alt="准实时索引">  </p><p>当数据写入到ES分片时会 <strong>首先写入到内存中</strong>,然后通过 <strong>内存<code>buffer</code></strong> 生成一个 <strong><code>Segment</code></strong>,并刷到 <strong>文件系统缓存</strong> 中而 <strong>不是直接刷到磁盘</strong>,数据可被检索,ES中 <strong>默认<code>1</code>秒<code>refresh</code>一次</strong>。数据在 <strong>写入内存的同时</strong>,也会 <strong>记录<code>Translog</code>日志</strong>,若 <strong>在<code>refresh</code>期间出现异常</strong>,会 <strong>根据<code>Translog</code></strong> 来进行 <strong>数据恢复</strong>,等到 <strong>文件系统缓存</strong> 中的 <strong><code>Segment</code></strong> 数据 <strong>都刷到磁盘中</strong>,则 <strong>清空<code>Translog</code>文件</strong>,ES <strong>默认每隔<code>30</code>分钟</strong> 会将 <strong>文件系统缓存</strong> 的数据 <strong>刷入到磁盘</strong>. <strong><code>Segment</code>太多</strong> 时ES <strong>定期</strong> 会将多个 <strong><code>Segment</code>合并</strong> 成为大的Segment, <strong>减少索引查询时<code>IO</code>开销</strong>,此阶段ES会真正的 <strong>物理删除</strong> 之前 <strong>执行过<code>delete</code>的数据</strong>。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Elasticsearch是什么？&quot;&gt;&lt;a href=&quot;#Elasticsearch是什么？&quot; class=&quot;headerlink&quot; title=&quot;Elasticsearch是什么？&quot;&gt;&lt;/a&gt;Elasticsearch是什么？&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;str</summary>
      
    
    
    
    <category term="工具和中间件" scheme="http://example.com/categories/%E5%B7%A5%E5%85%B7%E5%92%8C%E4%B8%AD%E9%97%B4%E4%BB%B6/"/>
    
    <category term="搜索引擎技术" scheme="http://example.com/categories/%E5%B7%A5%E5%85%B7%E5%92%8C%E4%B8%AD%E9%97%B4%E4%BB%B6/%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E6%8A%80%E6%9C%AF/"/>
    
    <category term="ElasticSearch" scheme="http://example.com/categories/%E5%B7%A5%E5%85%B7%E5%92%8C%E4%B8%AD%E9%97%B4%E4%BB%B6/%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E6%8A%80%E6%9C%AF/ElasticSearch/"/>
    
    
    <category term="ElasticSearch" scheme="http://example.com/tags/ElasticSearch/"/>
    
  </entry>
  
  <entry>
    <title>SpringCloud系列14-总结</title>
    <link href="http://example.com/blog/Cloud/SpringCloud/SpringCloud%E7%B3%BB%E5%88%9714-%E6%80%BB%E7%BB%93/"/>
    <id>http://example.com/blog/Cloud/SpringCloud/SpringCloud%E7%B3%BB%E5%88%9714-%E6%80%BB%E7%BB%93/</id>
    <published>2021-10-07T04:08:20.000Z</published>
    <updated>2022-06-23T03:17:39.250Z</updated>
    
    <content type="html"><![CDATA[<h1 id="多个微服务"><a href="#多个微服务" class="headerlink" title="多个微服务:"></a>多个微服务:</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">modules</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">module</span>&gt;</span>eureka-server<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">module</span>&gt;</span>product-data-service<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">module</span>&gt;</span>product-view-service-ribbon<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">module</span>&gt;</span>product-view-service-feign<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">module</span>&gt;</span>config-server<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">module</span>&gt;</span>hystrix-dashboard<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">module</span>&gt;</span>turbine<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">module</span>&gt;</span>productServiceZuul<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">modules</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="端口号总结"><a href="#端口号总结" class="headerlink" title="端口号总结:"></a>端口号总结:</h1><p>微服务：</p><ul><li>eureka-server: 8761</li><li>product-data-service: 8001,8002,8003</li><li>product-view-service-ribbon: 8010</li><li>product-view-service-feign: 8012, 8013, 8014</li><li>hystrix-dashboard: 8020</li><li>turbine: 8021</li><li>config-server: 8030</li><li>zuul: 8040</li></ul><p>第三方: </p><ul><li>zipkin:9411</li><li>rabbitMQ: 5672</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;多个微服务&quot;&gt;&lt;a href=&quot;#多个微服务&quot; class=&quot;headerlink&quot; title=&quot;多个微服务:&quot;&gt;&lt;/a&gt;多个微服务:&lt;/h1&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;</summary>
      
    
    
    
    <category term="Cloud" scheme="http://example.com/categories/Cloud/"/>
    
    <category term="SpringCloud" scheme="http://example.com/categories/Cloud/SpringCloud/"/>
    
    
  </entry>
  
  <entry>
    <title>SpringCloud系列13-网关Zuul</title>
    <link href="http://example.com/blog/Cloud/SpringCloud/SpringCloud%E7%B3%BB%E5%88%9713-%E7%BD%91%E5%85%B3Zuul/"/>
    <id>http://example.com/blog/Cloud/SpringCloud/SpringCloud%E7%B3%BB%E5%88%9713-%E7%BD%91%E5%85%B3Zuul/</id>
    <published>2021-10-07T03:08:20.000Z</published>
    <updated>2022-06-23T03:17:33.321Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题：为何要用网关"><a href="#问题：为何要用网关" class="headerlink" title="问题：为何要用网关?"></a>问题：为何要用网关?</h1><ul><li>我们现在有两种微服务，分别是数据微服务和视图微服务。它们有可能放在不同的 ip 地址上，有可能是不同的端口。</li><li>为了访问他们，就需要记录这些地址和端口。 而地址和端口都可能会变化，这就增加了访问者的负担。这个时候，我们就可以用网关来解决这个问题。</li><li>如图所示，我们只需要记住网关的地址和端口号就行了：</li><li><ul><li>如果要访问数据服务，访问地址 <a href="http://ip:port/api-data/products">http://ip:port/api-data/products</a> 即可。</li></ul></li><li><ul><li>如果要访问视图服务，访问地址 <a href="http://ip:port/api-view/products">http://ip:port/api-view/products</a> 即可<br><img src="/../../../assets/png/SpringCloud/%E7%BD%91%E5%85%B3-%E6%B5%81%E7%A8%8B.png" alt="网关-流程"></li></ul></li></ul><h1 id="创建子项目：-zuul"><a href="#创建子项目：-zuul" class="headerlink" title="创建子项目： zuul"></a>创建子项目： zuul</h1><h2 id="pom-xml："><a href="#pom-xml：" class="headerlink" title="pom.xml："></a>pom.xml：</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.peach<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>&gt;</span>../spring-cloud-parent/pom.xml<span class="tag">&lt;/<span class="name">relativePath</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>productServiceZuul<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>productServiceZuul<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-zuul<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="ProductServiceZuulApplication-java"><a href="#ProductServiceZuulApplication-java" class="headerlink" title="ProductServiceZuulApplication.java:"></a>ProductServiceZuulApplication.java:</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.peach;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.hutool.core.util.NetUtil;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.builder.SpringApplicationBuilder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.client.discovery.EnableDiscoveryClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.netflix.eureka.EnableEurekaClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.netflix.zuul.EnableZuulProxy;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableZuulProxy</span></span><br><span class="line"><span class="meta">@EnableEurekaClient</span></span><br><span class="line"><span class="meta">@EnableDiscoveryClient</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ProductServiceZuulApplication</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">( String[] args )</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">port</span> <span class="operator">=</span> <span class="number">8040</span>;</span><br><span class="line">        <span class="keyword">if</span>(!NetUtil.isUsableLocalPort(port)) &#123;</span><br><span class="line">            System.err.printf(<span class="string">&quot;端口%d被占用了，无法启动%n&quot;</span>, port );</span><br><span class="line">            System.exit(<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">SpringApplicationBuilder</span>(ProductServiceZuulApplication.class).properties(<span class="string">&quot;server.port=&quot;</span> + port).run(args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="application-yml"><a href="#application-yml" class="headerlink" title="application.yml:"></a>application.yml:</h2><p>配置文件，进行了路由映射</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">zuul:</span></span><br><span class="line">  <span class="attr">routes:</span></span><br><span class="line">    <span class="attr">api-a:</span></span><br><span class="line">      <span class="attr">path:</span> <span class="string">/api-data/**</span></span><br><span class="line">      <span class="attr">serviceId:</span> <span class="string">PRODUCT-DATA-SERVICE</span></span><br><span class="line">    <span class="attr">api-b:</span></span><br><span class="line">      <span class="attr">path:</span> <span class="string">/api-view/**</span></span><br><span class="line">      <span class="attr">serviceId:</span> <span class="string">PRODUCT-VIEW-SERVICE-FEIGN</span></span><br></pre></td></tr></table></figure><p>完整代码：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">serviceUrl:</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://localhost:8761/eureka/</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">product-service-zuul</span></span><br><span class="line"><span class="attr">zuul:</span></span><br><span class="line">  <span class="attr">routes:</span></span><br><span class="line">    <span class="attr">api-a:</span></span><br><span class="line">      <span class="attr">path:</span> <span class="string">/api-data/**</span></span><br><span class="line">      <span class="attr">serviceId:</span> <span class="string">PRODUCT-DATA-SERVICE</span></span><br><span class="line">    <span class="attr">api-b:</span></span><br><span class="line">      <span class="attr">path:</span> <span class="string">/api-view/**</span></span><br><span class="line">      <span class="attr">serviceId:</span> <span class="string">PRODUCT-VIEW-SERVICE-FEIGN</span></span><br></pre></td></tr></table></figure><h1 id="启动："><a href="#启动：" class="headerlink" title="启动："></a>启动：</h1><ul><li>首先挨个运行 EurekaServerApplication, ConfigServerApplication, ProductDataServiceApplication， ProductViewServiceFeignApplication。</li><li>然后启动 ProductServiceZuulApplication</li><li>接着访问地址:</li><li><ul><li><a href="http://localhost:8040/api-data/products">http://localhost:8040/api-data/products</a></li></ul></li><li><ul><li><a href="http://localhost:8040/api-view/products">http://localhost:8040/api-view/products</a></li></ul></li></ul><p>这样就可以访问数据微服务和视微服务集群了，并且无需去记住那么多ip地址和端口号了。<br><img src="/../../../assets/png/SpringCloud/%E7%BD%91%E5%85%B3-%E5%BE%AE%E6%9C%8D%E5%8A%A1.png" alt="网关-微服务"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;问题：为何要用网关&quot;&gt;&lt;a href=&quot;#问题：为何要用网关&quot; class=&quot;headerlink&quot; title=&quot;问题：为何要用网关?&quot;&gt;&lt;/a&gt;问题：为何要用网关?&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;我们现在有两种微服务，分别是数据微服务和视图微服务。它们有可能放在不</summary>
      
    
    
    
    <category term="Cloud" scheme="http://example.com/categories/Cloud/"/>
    
    <category term="SpringCloud" scheme="http://example.com/categories/Cloud/SpringCloud/"/>
    
    
  </entry>
  
  <entry>
    <title>SpringCloud系列12-断路器聚合监控</title>
    <link href="http://example.com/blog/Cloud/SpringCloud/SpringCloud%E7%B3%BB%E5%88%9712-%E6%96%AD%E8%B7%AF%E5%99%A8%E8%81%9A%E5%90%88%E7%9B%91%E6%8E%A7/"/>
    <id>http://example.com/blog/Cloud/SpringCloud/SpringCloud%E7%B3%BB%E5%88%9712-%E6%96%AD%E8%B7%AF%E5%99%A8%E8%81%9A%E5%90%88%E7%9B%91%E6%8E%A7/</id>
    <published>2021-10-07T02:08:20.000Z</published>
    <updated>2022-06-23T03:17:13.343Z</updated>
    
    <content type="html"><![CDATA[<h1 id="需求"><a href="#需求" class="headerlink" title="需求:"></a>需求:</h1><p>前面是针对一个微服务的断路器监控，但是微服务通常会是多个实例组成的一个集群。 倘若集群里的实例比较多，难道要挨个挨个去监控这些实例吗？ 何况有时候，根据集群的需要，会动态增加或者减少实例，监控起来就更麻烦了。</p><p>为了方便监控集群里的多个实例，springCloud 提供了一个 turbine 项目，它的作用是把一个集群里的多个实例汇聚在一个 turbine里，这个然后再在 断路器监控里查看这个 turbine, 这样就能够在集群层面进行监控了。<br><img src="/../../../assets/png/SpringCloud/%E6%96%AD%E8%B7%AF%E5%99%A8%E8%81%9A%E5%90%88%E7%9B%91%E6%8E%A7-%E6%B5%81%E7%A8%8B.png" alt="断路器聚合监控-流程"></p><h1 id="创建子项目：-turbine"><a href="#创建子项目：-turbine" class="headerlink" title="创建子项目： turbine"></a>创建子项目： turbine</h1><h2 id="pom-xml"><a href="#pom-xml" class="headerlink" title="pom.xml:"></a>pom.xml:</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.peach<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>&gt;</span>../spring-cloud-parent/pom.xml<span class="tag">&lt;/<span class="name">relativePath</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>turbine<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>turbine<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.11<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-actuator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-hystrix<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-hystrix-dashboard<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-turbine<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="ProductServiceTurbineApplication-java"><a href="#ProductServiceTurbineApplication-java" class="headerlink" title="ProductServiceTurbineApplication.java"></a>ProductServiceTurbineApplication.java</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.peach;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.hutool.core.util.NetUtil;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.builder.SpringApplicationBuilder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.netflix.turbine.EnableTurbine;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableTurbine</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ProductServiceTurbineApplication</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">port</span> <span class="operator">=</span> <span class="number">8021</span>;</span><br><span class="line">        <span class="keyword">if</span>(!NetUtil.isUsableLocalPort(port)) &#123;</span><br><span class="line">            System.err.printf(<span class="string">&quot;端口%d被占用了，无法启动%n&quot;</span>, port );</span><br><span class="line">            System.exit(<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">SpringApplicationBuilder</span>(ProductServiceTurbineApplication.class).properties(<span class="string">&quot;server.port=&quot;</span> + port).run(args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="application-yml"><a href="#application-yml" class="headerlink" title="application.yml"></a>application.yml</h2><p>配置信息，主要是：appConfig: product-view-service-feign, 这就表示它会把所有微服务名称是product-view-service-feign 的实例信息都收集起来。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application.name:</span> <span class="string">turbine</span></span><br><span class="line"><span class="attr">turbine:</span></span><br><span class="line">  <span class="attr">aggregator:</span></span><br><span class="line">    <span class="attr">clusterConfig:</span> <span class="string">default</span>  <span class="comment"># 指定聚合哪些集群，多个使用&quot;,&quot;分割，默认为default。可使用http://.../turbine.stream?cluster=&#123;clusterConfig之一&#125;访问</span></span><br><span class="line">  <span class="attr">appConfig:</span> <span class="string">product-view-service-feign</span>  <span class="comment">### 配置Eureka中的serviceId列表，表明监控哪些服务</span></span><br><span class="line">  <span class="attr">clusterNameExpression:</span> <span class="string">new</span> <span class="string">String(&quot;default&quot;)</span></span><br><span class="line">  <span class="comment"># 1. clusterNameExpression指定集群名称，默认表达式appName；此时：turbine.aggregator.clusterConfig需要配置想要监控的应用名称</span></span><br><span class="line">  <span class="comment"># 2. 当clusterNameExpression:default时，turbine.aggregator.clusterConfig可以不写，因为默认就是default</span></span><br><span class="line">  <span class="comment"># 3. 当clusterNameExpression:metadata[&#x27;cluster&#x27;]时，假设想要监控的应用配置了eureka.instance.metadata-map.cluster: ABC，则需要配置，同时turbine.aggregator.clusterConfig: ABC</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">serviceUrl:</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://localhost:8761/eureka/</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;需求&quot;&gt;&lt;a href=&quot;#需求&quot; class=&quot;headerlink&quot; title=&quot;需求:&quot;&gt;&lt;/a&gt;需求:&lt;/h1&gt;&lt;p&gt;前面是针对一个微服务的断路器监控，但是微服务通常会是多个实例组成的一个集群。 倘若集群里的实例比较多，难道要挨个挨个去监控这些实例吗？ </summary>
      
    
    
    
    <category term="Cloud" scheme="http://example.com/categories/Cloud/"/>
    
    <category term="SpringCloud" scheme="http://example.com/categories/Cloud/SpringCloud/"/>
    
    
  </entry>
  
  <entry>
    <title>SpringCloud系列11-断路器监控</title>
    <link href="http://example.com/blog/Cloud/SpringCloud/SpringCloud%E7%B3%BB%E5%88%9711-%E6%96%AD%E8%B7%AF%E5%99%A8%E7%9B%91%E6%8E%A7/"/>
    <id>http://example.com/blog/Cloud/SpringCloud/SpringCloud%E7%B3%BB%E5%88%9711-%E6%96%AD%E8%B7%AF%E5%99%A8%E7%9B%91%E6%8E%A7/</id>
    <published>2021-10-06T13:08:20.000Z</published>
    <updated>2022-06-23T03:16:55.750Z</updated>
    
    <content type="html"><![CDATA[<h1 id="需求"><a href="#需求" class="headerlink" title="需求:"></a>需求:</h1><p>断路器，是当数据服务不可用的时候， 断路器就会发挥作用。<br>那么数据服务什么时候可用，什么时候不可用，如何监控这个事情呢？ 我们就要用到 断路器监控 来可视化掌控这个情况了。</p><h1 id="创建子项目：hystrix-dashboard"><a href="#创建子项目：hystrix-dashboard" class="headerlink" title="创建子项目：hystrix-dashboard"></a>创建子项目：hystrix-dashboard</h1><h2 id="pom-xml文件"><a href="#pom-xml文件" class="headerlink" title="pom.xml文件"></a>pom.xml文件</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.peach<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>&gt;</span>../spring-cloud-parent/pom.xml<span class="tag">&lt;/<span class="name">relativePath</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hystrix-dashboard<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>hystrix-dashboard<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.11<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-actuator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-hystrix<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-hystrix-dashboard<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="ProductServiceHystrixDashboardApplication-java"><a href="#ProductServiceHystrixDashboardApplication-java" class="headerlink" title="ProductServiceHystrixDashboardApplication.java"></a>ProductServiceHystrixDashboardApplication.java</h2><p><code>断路器监控启动类，主要就是@EnableHystrixDashboard</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.peach;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.hutool.core.util.NetUtil;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.builder.SpringApplicationBuilder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.netflix.hystrix.dashboard.EnableHystrixDashboard;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableHystrixDashboard</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ProductServiceHystrixDashboardApplication</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">port</span> <span class="operator">=</span> <span class="number">8020</span>;</span><br><span class="line">        <span class="keyword">if</span>(!NetUtil.isUsableLocalPort(port)) &#123;</span><br><span class="line">            System.err.printf(<span class="string">&quot;端口%d被占用了，无法启动%n&quot;</span>, port );</span><br><span class="line">            System.exit(<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">SpringApplicationBuilder</span>(ProductServiceHystrixDashboardApplication.class).properties(<span class="string">&quot;server.port=&quot;</span> + port).run(args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="application-yml"><a href="#application-yml" class="headerlink" title="application.yml:"></a>application.yml:</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">hystrix-dashboard</span></span><br></pre></td></tr></table></figure><h2 id="ProductViewServiceFeignApplication-java"><a href="#ProductViewServiceFeignApplication-java" class="headerlink" title="ProductViewServiceFeignApplication.java"></a>ProductViewServiceFeignApplication.java</h2><ul><li>修改视图微服务项目，以使得它可以把信息共享给监控中心。</li><li>修改ProductViewServiceFeignApplication， 增加 @EnableCircuitBreaker</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.peach;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> brave.sampler.Sampler;</span><br><span class="line"><span class="keyword">import</span> cn.hutool.core.util.NetUtil;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.client.circuitbreaker.EnableCircuitBreaker;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.client.discovery.EnableDiscoveryClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.netflix.eureka.EnableEurekaClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.openfeign.EnableFeignClients;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableEurekaClient</span></span><br><span class="line"><span class="meta">@EnableDiscoveryClient</span></span><br><span class="line"><span class="meta">@EnableFeignClients</span></span><br><span class="line"><span class="meta">@EnableCircuitBreaker</span>   <span class="comment">//把信息共享给监控中心</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ProductViewServiceFeignApplication</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 判断 rabiitMQ 是否启动</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">rabbitMQPort</span> <span class="operator">=</span> <span class="number">5672</span>;</span><br><span class="line">        <span class="keyword">if</span>(NetUtil.isUsableLocalPort(rabbitMQPort)) &#123;</span><br><span class="line">            System.err.printf(<span class="string">&quot;未在端口%d 发现 rabbitMQ服务，请检查rabbitMQ 是否启动&quot;</span>, rabbitMQPort );</span><br><span class="line">            System.exit(<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 推荐  8012 、 8013  或者  8014</span></span><br><span class="line">        SpringApplication.run(ProductViewServiceFeignApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> Sampler <span class="title function_">defaultSampler</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> Sampler.ALWAYS_SAMPLE;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="AccessViewService-java"><a href="#AccessViewService-java" class="headerlink" title="AccessViewService.java:"></a>AccessViewService.java:</h2><p>准备一个不停访问服务的类： AccessViewService。 这样可以不断地访问服务，才便于在监控那里观察现象。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.peach.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.hutool.core.thread.ThreadUtil;</span><br><span class="line"><span class="keyword">import</span> cn.hutool.http.HttpUtil;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AccessViewService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">while</span>(<span class="literal">true</span>) &#123;</span><br><span class="line">            ThreadUtil.sleep(<span class="number">1000</span>);</span><br><span class="line">            access(<span class="number">8012</span>);</span><br><span class="line">            access(<span class="number">8013</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">access</span><span class="params">(<span class="type">int</span> port)</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            String html= HttpUtil.get(String.format(<span class="string">&quot;http://127.0.0.1:%d/products&quot;</span>,port));</span><br><span class="line">            System.out.printf(<span class="string">&quot;%d 地址的视图服务访问成功，返回大小是 %d%n&quot;</span> ,port, html.length());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span>(Exception e) &#123;</span><br><span class="line">            System.err.printf(<span class="string">&quot;%d 地址的视图服务无法访问%n&quot;</span>,port);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="启动："><a href="#启动：" class="headerlink" title="启动："></a>启动：</h1><ul><li>首先挨个运行 EurekaServerApplication, ConfigServerApplication, ProductDataServiceApplication， ProductViewServiceFeignApplication，ProductServiceHystrixDashboardApplication;</li><li>运行视图微服务里的 AccessViewService 来周期性地访问 <code>http://127.0.0.1:8012/products</code> 。 因为只有访问了，监控里才能看到数据;</li><li>打开监控地址 <code>http://localhost:8020/hystrix</code>;</li><li>如图所示，在最上面输入<code>http://localhost:8012/actuator/hystrix.stream</code> :<br><img src="/../../../assets/png/SpringCloud/%E6%96%AD%E8%B7%AF%E5%99%A8%E7%9B%91%E6%8E%A7-%E4%B8%BB%E9%A1%B5.png" alt="断路器监控-主页"></li><li>点击 Monitor Stream 就可以看到监控信息了。<br><img src="/../../../assets/png/SpringCloud/%E6%96%AD%E8%B7%AF%E5%99%A8%E7%9B%91%E6%8E%A7-%E7%9B%91%E6%8E%A7%E5%9B%BE%E8%A7%A3.png" alt="断路器监控-监控图解"></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;需求&quot;&gt;&lt;a href=&quot;#需求&quot; class=&quot;headerlink&quot; title=&quot;需求:&quot;&gt;&lt;/a&gt;需求:&lt;/h1&gt;&lt;p&gt;断路器，是当数据服务不可用的时候， 断路器就会发挥作用。&lt;br&gt;那么数据服务什么时候可用，什么时候不可用，如何监控这个事情呢？ 我们就要</summary>
      
    
    
    
    <category term="Cloud" scheme="http://example.com/categories/Cloud/"/>
    
    <category term="SpringCloud" scheme="http://example.com/categories/Cloud/SpringCloud/"/>
    
    
  </entry>
  
  <entry>
    <title>SpringCloud系列10-断路器Hystrix</title>
    <link href="http://example.com/blog/Cloud/SpringCloud/SpringCloud%E7%B3%BB%E5%88%9710-%E6%96%AD%E8%B7%AF%E5%99%A8Hystrix/"/>
    <id>http://example.com/blog/Cloud/SpringCloud/SpringCloud%E7%B3%BB%E5%88%9710-%E6%96%AD%E8%B7%AF%E5%99%A8Hystrix/</id>
    <published>2021-10-06T12:08:20.000Z</published>
    <updated>2022-06-23T03:16:17.915Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题"><a href="#问题" class="headerlink" title="问题:"></a>问题:</h1><p>视图微服务是依赖于数据微服务的。那么当数据微服务不可用的时候，会怎么样呢？我们主动把 ProductDataServiceApplication 关闭，然后再访问：<a href="http://localhost:8012/products">http://localhost:8012/products</a> 就会抛出异常。客户也看不懂这个是什么。为了解决这个问题，我们就会引入断路器的概念。</p><h1 id="断路器"><a href="#断路器" class="headerlink" title="断路器:"></a>断路器:</h1><p>断路器: 就是当被访问的微服务无法使用的时候，当前服务能够感知这个现象，并且提供一个备用的方案出来。</p><h1 id="改造"><a href="#改造" class="headerlink" title="改造:"></a>改造:</h1><h2 id="pom-xml"><a href="#pom-xml" class="headerlink" title="pom.xml:"></a>pom.xml:</h2><p>增加 jar spring-cloud-starter-netflix-hystrix 以支持断路器。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--增加 jar spring-cloud-starter-netflix-hystrix 以支持断路器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-hystrix<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="ProductClientFeign-java"><a href="#ProductClientFeign-java" class="headerlink" title="ProductClientFeign.java"></a>ProductClientFeign.java</h2><p>注解由原来的 <code>@FeignClient(value = &quot;PRODUCT-DATA-SERVICE&quot;)</code><br>修改为 <code>@FeignClient(value = &quot;PRODUCT-DATA-SERVICE&quot;,fallback = ProductClientFeignHystrix.class)</code>。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.peach.client;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.peach.pojo.Product;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.openfeign.FeignClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@FeignClient(value = &quot;PRODUCT-DATA-SERVICE&quot;,fallback = ProductClientFeignHystrix.class)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">ProductClientFeign</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/products&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;Product&gt; <span class="title function_">listProdcuts</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="ProductClientFeignHystrix-java"><a href="#ProductClientFeignHystrix-java" class="headerlink" title="ProductClientFeignHystrix.java"></a>ProductClientFeignHystrix.java</h2><p>ProductClientFeignHystrix 实现了 ProductClientFeign 接口，并提供了 listProdcuts() 方法。这个方法就会固定返回包含一条信息的集合。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.peach.client;<span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Create By Tao on 2022/4/24.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.peach.pojo.Product;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ProductClientFeignHystrix</span> <span class="keyword">implements</span> <span class="title class_">ProductClientFeign</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> List&lt;Product&gt; <span class="title function_">listProdcuts</span><span class="params">()</span>&#123;</span><br><span class="line">        List&lt;Product&gt; result = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        result.add(<span class="keyword">new</span> <span class="title class_">Product</span>(<span class="number">0</span>,<span class="string">&quot;产品数据微服务现在不可用&quot;</span>,<span class="number">0</span>));</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="application-yml"><a href="#application-yml" class="headerlink" title="application.yml"></a>application.yml</h2><p>在配置文件里开启断路器:</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">feign.hystrix.enabled:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h1 id="启动"><a href="#启动" class="headerlink" title="启动:"></a>启动:</h1><p>挨个启动： EurekaServerApplication, ConfigServerApplication, ProductViewServiceFeignApplication。<code>注意: 数据服务是没有启动的。</code><br>然后访问地址：<code>http://127.0.0.1:8012/products</code><br>会发现，依然可以打开，并且得到提示信息： 产品数据微服务不可用。<br><img src="/../../../assets/png/SpringCloud/%E6%96%AD%E8%B7%AF%E5%99%A8-Hystrix.png" alt="断路器-Hystrix"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题:&quot;&gt;&lt;/a&gt;问题:&lt;/h1&gt;&lt;p&gt;视图微服务是依赖于数据微服务的。那么当数据微服务不可用的时候，会怎么样呢？我们主动把 ProductDataServiceApplica</summary>
      
    
    
    
    <category term="Cloud" scheme="http://example.com/categories/Cloud/"/>
    
    <category term="SpringCloud" scheme="http://example.com/categories/Cloud/SpringCloud/"/>
    
    
  </entry>
  
  <entry>
    <title>SpringCloud系列9-消息总线Bus</title>
    <link href="http://example.com/blog/Cloud/SpringCloud/SpringCloud%E7%B3%BB%E5%88%979-%E6%B6%88%E6%81%AF%E6%80%BB%E7%BA%BFBus/"/>
    <id>http://example.com/blog/Cloud/SpringCloud/SpringCloud%E7%B3%BB%E5%88%979-%E6%B6%88%E6%81%AF%E6%80%BB%E7%BA%BFBus/</id>
    <published>2021-10-06T11:08:20.000Z</published>
    <updated>2022-06-23T03:15:21.745Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题："><a href="#问题：" class="headerlink" title="问题："></a>问题：</h1><p>虽然配置了config-server, 也把视图服务改造成了配置客户端，但是当需要刷新配置信息的时候，不得不既重启 config-server, 又重启微服务。 这样的体验当然是不太好的。 我们当然是希望一旦 git 上的配置信息修改之后，就可以自动地刷新到微服务里，而不是需要手动重启才可以。</p><h1 id="RabbitMQ："><a href="#RabbitMQ：" class="headerlink" title="RabbitMQ："></a>RabbitMQ：</h1><ul><li>springCloud 通过 rabbitMQ 来进行消息广播，以达到有配置信息发生改变的时候，广播给多个微服务的效果。</li><li>需要先安装 rabbitMQ 服务器。</li></ul><h1 id="改造"><a href="#改造" class="headerlink" title="改造:"></a>改造:</h1><h2 id="pom-xml"><a href="#pom-xml" class="headerlink" title="pom.xml:"></a>pom.xml:</h2><p>product-view-service-feign:</p><ul><li>新增spring-boot-starter-actuator 用于访问路径：&#x2F;actuator&#x2F;bus-refresh</li><li>新增spring-cloud-starter-bus-amqp 用于支持 rabbitmq</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--多了spring-boot-starter-actuator 用于访问路径：/actuator/bus-refresh--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-actuator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--多了spring-cloud-starter-bus-amqp 用于支持 rabbitmq--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-bus-amqp<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="bootstrap-yml"><a href="#bootstrap-yml" class="headerlink" title="bootstrap.yml:"></a>bootstrap.yml:</h2><p>新增 but总线配置:</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">bus:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">trace:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>新增 rabbitMQ 配置:</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">rabbitmq:</span></span><br><span class="line">  <span class="attr">host:</span> <span class="string">localhost</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">5672</span></span><br><span class="line">  <span class="attr">username:</span> <span class="string">guest</span></span><br><span class="line">  <span class="attr">password:</span> <span class="string">guest</span></span><br></pre></td></tr></table></figure><p>完整代码：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">config:</span></span><br><span class="line">      <span class="attr">label:</span> <span class="string">develop</span></span><br><span class="line">      <span class="attr">profile:</span> <span class="string">dev</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="attr">enabled:</span>  <span class="literal">true</span></span><br><span class="line">        <span class="attr">serviceId:</span>  <span class="string">config-server</span></span><br><span class="line">    <span class="attr">bus:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">trace:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">serviceUrl:</span></span><br><span class="line">      <span class="attr">defaultZone:</span>  <span class="string">http://localhost:8761/eureka/</span></span><br><span class="line"></span><br><span class="line"><span class="attr">rabbitmq:</span></span><br><span class="line">  <span class="attr">host:</span> <span class="string">localhost</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">5672</span></span><br><span class="line">  <span class="attr">username:</span> <span class="string">guest</span></span><br><span class="line">  <span class="attr">password:</span> <span class="string">guest</span></span><br></pre></td></tr></table></figure><h2 id="application-yml"><a href="#application-yml" class="headerlink" title="application.yml:"></a>application.yml:</h2><p>新增路径访问允许,这样才能访问 &#x2F;actuator&#x2F;bus-refresh:</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">management:</span></span><br><span class="line">  <span class="attr">endpoints:</span></span><br><span class="line">    <span class="attr">web:</span></span><br><span class="line">      <span class="attr">exposure:</span></span><br><span class="line">        <span class="attr">include:</span> <span class="string">&quot;*&quot;</span></span><br><span class="line">      <span class="attr">cors:</span></span><br><span class="line">        <span class="attr">allowed-origins:</span> <span class="string">&quot;*&quot;</span></span><br><span class="line">        <span class="attr">allowed-methods:</span> <span class="string">&quot;*&quot;</span> </span><br></pre></td></tr></table></figure><h2 id="FreshConfigUtil-java"><a href="#FreshConfigUtil-java" class="headerlink" title="FreshConfigUtil.java"></a>FreshConfigUtil.java</h2><p>使用 post 的方式访问 <a href="http://localhost:8012/actuator/bus-refresh">http://localhost:8012/actuator/bus-refresh</a> 地址，之所以要专门做一个 FreshConfigUtil 类，就是为了可以使用 post 访问，因为它不支持 get 方式访问，直接把这个地址放在浏览器里，是会抛出 405错误的。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.peach.util;<span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Create By Tao on 2022/4/24.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.hutool.http.HttpUtil;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FreshConfigUtil</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        HashMap&lt;String,String&gt; headers =<span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        headers.put(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;application/json; charset=utf-8&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;因为要去git获取，还要刷新config-server, 会比较卡，所以一般会要好几秒才能完成，请耐心等待&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">result</span> <span class="operator">=</span> HttpUtil.createPost(<span class="string">&quot;http://localhost:8012/actuator/bus-refresh&quot;</span>).addHeaders(headers).execute().body();</span><br><span class="line">        System.out.println(<span class="string">&quot;result:&quot;</span>+result);</span><br><span class="line">        System.out.println(<span class="string">&quot;refresh 完成&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="对服务链路追踪的影响"><a href="#对服务链路追踪的影响" class="headerlink" title="对服务链路追踪的影响"></a>对服务链路追踪的影响</h2><p>因为视图服务进行了改造，支持了 rabbitMQ, 那么在默认情况下，它的信息就不会进入 Zipkin了。 在Zipkin 里看不到视图服务的资料了。<br>为了解决这个问题，在启动 Zipkin 的时候 带一个参数就好了：–zipkin.collector.rabbitmq.addresses&#x3D;localhost<br>即改成了：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar zipkin-server-2.10.1-exec.jar --zipkin.collector.rabbitmq.addresses=localhost</span><br></pre></td></tr></table></figure><p><code>注： 重启 zipkin 后，要再访问业务地址才可以看到依赖关系。</code></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;问题：&quot;&gt;&lt;a href=&quot;#问题：&quot; class=&quot;headerlink&quot; title=&quot;问题：&quot;&gt;&lt;/a&gt;问题：&lt;/h1&gt;&lt;p&gt;虽然配置了config-server, 也把视图服务改造成了配置客户端，但是当需要刷新配置信息的时候，不得不既重启 config-s</summary>
      
    
    
    
    <category term="Cloud" scheme="http://example.com/categories/Cloud/"/>
    
    <category term="SpringCloud" scheme="http://example.com/categories/Cloud/SpringCloud/"/>
    
    
  </entry>
  
  <entry>
    <title>SpringCloud系列8-配置客户端</title>
    <link href="http://example.com/blog/Cloud/SpringCloud/SpringCloud%E7%B3%BB%E5%88%978-%E9%85%8D%E7%BD%AE%E5%AE%A2%E6%88%B7%E7%AB%AF/"/>
    <id>http://example.com/blog/Cloud/SpringCloud/SpringCloud%E7%B3%BB%E5%88%978-%E9%85%8D%E7%BD%AE%E5%AE%A2%E6%88%B7%E7%AB%AF/</id>
    <published>2021-10-06T10:08:20.000Z</published>
    <updated>2022-06-23T03:14:47.996Z</updated>
    
    <content type="html"><![CDATA[<h1 id="配置客户端"><a href="#配置客户端" class="headerlink" title="配置客户端"></a>配置客户端</h1><p>把现成的 视图微服务-Feign 改造成配置客户端，使得其可以从配置服务器上获取版本信息。</p><h2 id="pom-xml"><a href="#pom-xml" class="headerlink" title="pom.xml"></a>pom.xml</h2><p>增加一个 spring-cloud-starter-config 用于访问配置服务器。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-config<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="bootstrap-yml"><a href="#bootstrap-yml" class="headerlink" title="bootstrap.yml"></a>bootstrap.yml</h2><ul><li>作为配置客户端，它需要在 bootstrap.yml 里配置 config-server 的信息，而不是像以前那样在 application.yml 里进行配置。</li><li>bootstrap.yml 和 application.yml 的区别，简单说就是前者先启动，并且一些系统方面的配置需要在 bootstrap.yml 里进行配置。</li><li>在 bootstrap.yml 里配置提供了 serviceId: config-server, 这个是配置服务器在 eureka server 里的服务名称，这样就可以定位 config-server了。<figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">config:</span></span><br><span class="line">      <span class="attr">label:</span> <span class="string">develop</span></span><br><span class="line">      <span class="attr">profile:</span> <span class="string">dev</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="attr">enabled:</span>  <span class="literal">true</span></span><br><span class="line">        <span class="attr">serviceId:</span>  <span class="string">config-server</span></span><br><span class="line">    <span class="attr">bus:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">trace:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">serviceUrl:</span></span><br><span class="line">      <span class="attr">defaultZone:</span>  <span class="string">http://localhost:8761/eureka/</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="application-yml"><a href="#application-yml" class="headerlink" title="application.yml"></a>application.yml</h2><p>把 eureka 地址信息移动到了 bootstrap.yml 里。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span>  <span class="string">product-view-service-feign</span></span><br><span class="line">  <span class="attr">thymeleaf:</span></span><br><span class="line">    <span class="attr">cache:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">prefix:</span> <span class="string">classpath:/templates/</span></span><br><span class="line">    <span class="attr">suffix:</span> <span class="string">.html</span></span><br><span class="line">    <span class="attr">encoding:</span> <span class="string">UTF-8</span></span><br><span class="line">    <span class="attr">content-type:</span> <span class="string">text/html</span></span><br><span class="line">    <span class="attr">mode:</span> <span class="string">HTML5</span>       </span><br><span class="line">  <span class="attr">zipkin:</span></span><br><span class="line">    <span class="attr">base-url:</span> <span class="string">http://localhost:9411</span> </span><br></pre></td></tr></table></figure><h2 id="ProductController-java"><a href="#ProductController-java" class="headerlink" title="ProductController.java"></a>ProductController.java</h2><p>增加这个属性，就可以从 config-server 去获取 version 信息了。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Value(&quot;$&#123;version&#125;&quot;)</span></span><br><span class="line">String version;</span><br></pre></td></tr></table></figure><p>然后把这个信息放在 Model里</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">m.addAttribute(<span class="string">&quot;version&quot;</span>, version);    </span><br></pre></td></tr></table></figure><p>完整代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RefreshScope</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ProductController</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span> ProductService productService;</span><br><span class="line">     </span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;version&#125;&quot;)</span></span><br><span class="line">    String version;</span><br><span class="line">     </span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/products&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">products</span><span class="params">(Model m)</span> &#123;</span><br><span class="line">        List&lt;Product&gt; ps = productService.listProducts();</span><br><span class="line">        m.addAttribute(<span class="string">&quot;version&quot;</span>, version);    </span><br><span class="line">        m.addAttribute(<span class="string">&quot;ps&quot;</span>, ps);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;products&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="products-html"><a href="#products-html" class="headerlink" title="products.html:"></a>products.html:</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span> <span class="attr">colspan</span>=<span class="string">&quot;3&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;version&#125;&quot;</span> &gt;</span>how2j springcloud version unknown<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="启动"><a href="#启动" class="headerlink" title="启动:"></a>启动:</h1><p>挨个启动 EurekaServerApplication, ConfigServerApplication, ProductDataServiceApplication, ProductViewServiceFeignApplication, 然后访问如下地址：<a href="http://localhost:8012/products">http://localhost:8012/products</a><br><img src="/../../../assets/png/SpringCloud/%E9%85%8D%E7%BD%AE%E5%AE%A2%E6%88%B7%E7%AB%AF.png" alt="配置客户端"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;配置客户端&quot;&gt;&lt;a href=&quot;#配置客户端&quot; class=&quot;headerlink&quot; title=&quot;配置客户端&quot;&gt;&lt;/a&gt;配置客户端&lt;/h1&gt;&lt;p&gt;把现成的 视图微服务-Feign 改造成配置客户端，使得其可以从配置服务器上获取版本信息。&lt;/p&gt;
&lt;h2 id=&quot;</summary>
      
    
    
    
    <category term="Cloud" scheme="http://example.com/categories/Cloud/"/>
    
    <category term="SpringCloud" scheme="http://example.com/categories/Cloud/SpringCloud/"/>
    
    
  </entry>
  
  <entry>
    <title>SpringCloud系列7-配置服务器</title>
    <link href="http://example.com/blog/Cloud/SpringCloud/SpringCloud%E7%B3%BB%E5%88%977-%E9%85%8D%E7%BD%AE%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>http://example.com/blog/Cloud/SpringCloud/SpringCloud%E7%B3%BB%E5%88%977-%E9%85%8D%E7%BD%AE%E6%9C%8D%E5%8A%A1%E5%99%A8/</id>
    <published>2021-10-06T09:08:20.000Z</published>
    <updated>2022-06-23T03:13:51.627Z</updated>
    
    <content type="html"><![CDATA[<h1 id="配置服务的需要"><a href="#配置服务的需要" class="headerlink" title="配置服务的需要:"></a>配置服务的需要:</h1><p>有时候，微服务要做集群，这就意味着，会有多个微服务实例。 在业务上有时候需要修改一些配置信息，比如说 版本信息吧~ 倘若没有配置服务， 那么就需要挨个修改微服务，挨个重新部署微服务，这样就比较麻烦。<br>为了偷懒， 这些配置信息就会放在一个公共的地方，比如git, 然后通过配置服务器把它获取下来，然后微服务再从配置服务器上取下来。<br>这样只要修改git上的信息，那么同一个集群里的所有微服务都立即获取相应信息了，这样就大大节约了开发，上线和重新部署的时间了。</p><p>如图所示，我们先在 git 里保存 version 信息， 然后通过 ConfigServer 去获取 version 信息， 接着不同的视图微服务实例再去 ConfigServer 里获取 version.<br><img src="/../../../assets/png/SpringCloud/ConfigServer-%E6%B5%81%E7%A8%8B.png" alt="视图微服务调用数据微服务"></p><h1 id="git"><a href="#git" class="headerlink" title="git"></a>git</h1><p>首先要准备git。<br>如下是已经准备好的 git:<br><a href="https://github.com/taoliu-hub/spring-cloud-angular11/blob/develop/respo/product-view-service-feign-dev.properties">https://github.com/taoliu-hub/spring-cloud-angular11/blob/develop/respo/product-view-service-feign-dev.properties</a><br>这里就准备了版本信息： version &#x3D; Version 1.1</p><h1 id="创建子项目-config-server"><a href="#创建子项目-config-server" class="headerlink" title="创建子项目: config-server"></a>创建子项目: config-server</h1><h2 id="pom-xml"><a href="#pom-xml" class="headerlink" title="pom.xml"></a>pom.xml</h2><p>主要是 spring-cloud-config-server 这个 jar 包</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.peach<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>&gt;</span>../spring-cloud-parent/pom.xml<span class="tag">&lt;/<span class="name">relativePath</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.peach<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>config-server<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>config-server<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-config-server<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="启动类：ConfigServerApplication"><a href="#启动类：ConfigServerApplication" class="headerlink" title="启动类：ConfigServerApplication"></a>启动类：ConfigServerApplication</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.peach;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.client.discovery.EnableDiscoveryClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.config.server.EnableConfigServer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.netflix.eureka.EnableEurekaClient;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableConfigServer</span></span><br><span class="line"><span class="meta">@EnableDiscoveryClient</span></span><br><span class="line"><span class="meta">@EnableEurekaClient</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ConfigServerApplication</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 推荐  8030</span></span><br><span class="line">        SpringApplication.run(ConfigServerApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="application-yml"><a href="#application-yml" class="headerlink" title="application.yml"></a>application.yml</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">config-server</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">config:</span></span><br><span class="line">      <span class="attr">label:</span> <span class="string">develop</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">product-view-service-feign</span></span><br><span class="line">      <span class="attr">profile:</span> <span class="string">dev</span></span><br><span class="line">      <span class="attr">server:</span></span><br><span class="line">        <span class="attr">git:</span></span><br><span class="line">          <span class="attr">uri:</span> <span class="string">https://github.com/taoliu-hub/spring-cloud-angular11.git</span></span><br><span class="line">          <span class="attr">searchPaths:</span> <span class="string">respo</span></span><br><span class="line">          <span class="attr">default-label:</span> <span class="string">main</span></span><br><span class="line">          <span class="attr">timeout:</span> <span class="number">500000</span></span><br><span class="line"></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">serviceUrl:</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://localhost:8761/eureka/</span></span><br></pre></td></tr></table></figure><h1 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h1><p>先启动 EurekaServerApplication， 再启动 ConfigServerApplication， 然后访问<br><a href="http://localhost:8030/version/dev">http://localhost:8030/version/dev</a><br><img src="/../../../assets/png/SpringCloud/%E9%85%8D%E7%BD%AE%E6%9C%8D%E5%8A%A1%E5%99%A8.png" alt="配置服务器"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;配置服务的需要&quot;&gt;&lt;a href=&quot;#配置服务的需要&quot; class=&quot;headerlink&quot; title=&quot;配置服务的需要:&quot;&gt;&lt;/a&gt;配置服务的需要:&lt;/h1&gt;&lt;p&gt;有时候，微服务要做集群，这就意味着，会有多个微服务实例。 在业务上有时候需要修改一些配置信息，比</summary>
      
    
    
    
    <category term="Cloud" scheme="http://example.com/categories/Cloud/"/>
    
    <category term="SpringCloud" scheme="http://example.com/categories/Cloud/SpringCloud/"/>
    
    
  </entry>
  
  <entry>
    <title>SpringCloud系列6-服务链路追踪</title>
    <link href="http://example.com/blog/Cloud/SpringCloud/SpringCloud%E7%B3%BB%E5%88%976-%E6%9C%8D%E5%8A%A1%E9%93%BE%E8%B7%AF%E8%BF%BD%E8%B8%AA/"/>
    <id>http://example.com/blog/Cloud/SpringCloud/SpringCloud%E7%B3%BB%E5%88%976-%E6%9C%8D%E5%8A%A1%E9%93%BE%E8%B7%AF%E8%BF%BD%E8%B8%AA/</id>
    <published>2021-10-06T08:08:20.000Z</published>
    <updated>2022-06-23T03:13:32.223Z</updated>
    
    <content type="html"><![CDATA[<h1 id="什么是服务链路"><a href="#什么是服务链路" class="headerlink" title="什么是服务链路"></a>什么是服务链路</h1><p>我们有两个微服务，分别是数据服务和视图服务，随着业务的增加，就会有越来越多的微服务存在，他们之间也会有更加复杂的调用关系。<br>这个调用关系，仅仅通过观察代码，会越来越难以识别，所以就需要通过 zipkin 服务链路追踪服务器 这个东西来用图片进行识别了</p><h1 id="改造"><a href="#改造" class="headerlink" title="改造"></a>改造</h1><ul><li>eureka-server 不需要做改造;</li><li>product-data-service和product-view-service 需要进行改造以使其可以被追踪到。</li></ul><h2 id="pom-xml都加上以下依赖："><a href="#pom-xml都加上以下依赖：" class="headerlink" title="pom.xml都加上以下依赖："></a>pom.xml都加上以下依赖：</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--服务链路追踪--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-zipkin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="application-yml都加上以下配置信息："><a href="#application-yml都加上以下配置信息：" class="headerlink" title="application.yml都加上以下配置信息："></a>application.yml都加上以下配置信息：</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">zipkin:</span></span><br><span class="line">    <span class="attr">base-url:</span> <span class="string">http://localhost:9411</span> </span><br></pre></td></tr></table></figure><h2 id="启动类都加上以下配置信息："><a href="#启动类都加上以下配置信息：" class="headerlink" title="启动类都加上以下配置信息："></a>启动类都加上以下配置信息：</h2><p>ProductDataServiceApplication.java 和 ProductViewServiceFeignApplication.java：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="keyword">public</span> Sampler <span class="title function_">defaultSampler</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> Sampler.ALWAYS_SAMPLE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="启动测试："><a href="#启动测试：" class="headerlink" title="启动测试："></a>启动测试：</h1><ul><li>需要启动链路追踪服务器：zipkin-server-2.10.1-exec.jar, 命令启动:<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar zipkin-server-2.10.1-exec.jar</span><br></pre></td></tr></table></figure></li><li>启动 eureka-server, 改造后的 product-data-service 和 product-view-service-feign;</li><li>访问一次 <a href="http://127.0.0.1:8012/products">http://127.0.0.1:8012/products</a> 通过 视图微服务去访问数据微服务，这样链路追踪服务器才知道有这事儿发生</li><li>然后打开链路追踪服务器 <a href="http://localhost:9411/zipkin/dependency/">http://localhost:9411/zipkin/dependency/</a> 就可以看到如图所示的 视图微服务调用数据微服务 的图形了<br><img src="/../../../assets/png/SpringCloud/%E8%A7%86%E5%9B%BE%E5%BE%AE%E6%9C%8D%E5%8A%A1%E8%B0%83%E7%94%A8%E6%95%B0%E6%8D%AE%E5%BE%AE%E6%9C%8D%E5%8A%A1-zipkin.png" alt="视图微服务调用数据微服务"></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;什么是服务链路&quot;&gt;&lt;a href=&quot;#什么是服务链路&quot; class=&quot;headerlink&quot; title=&quot;什么是服务链路&quot;&gt;&lt;/a&gt;什么是服务链路&lt;/h1&gt;&lt;p&gt;我们有两个微服务，分别是数据服务和视图服务，随着业务的增加，就会有越来越多的微服务存在，他们之间也会</summary>
      
    
    
    
    <category term="Cloud" scheme="http://example.com/categories/Cloud/"/>
    
    <category term="SpringCloud" scheme="http://example.com/categories/Cloud/SpringCloud/"/>
    
    
  </entry>
  
  <entry>
    <title>SpringCloud系列5-视图微服务-Feign</title>
    <link href="http://example.com/blog/Cloud/SpringCloud/SpringCloud%E7%B3%BB%E5%88%975-%E8%A7%86%E5%9B%BE%E5%BE%AE%E6%9C%8D%E5%8A%A1-Feign/"/>
    <id>http://example.com/blog/Cloud/SpringCloud/SpringCloud%E7%B3%BB%E5%88%975-%E8%A7%86%E5%9B%BE%E5%BE%AE%E6%9C%8D%E5%8A%A1-Feign/</id>
    <published>2021-10-06T07:08:20.000Z</published>
    <updated>2022-06-23T02:05:20.200Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Feign-概念"><a href="#Feign-概念" class="headerlink" title="Feign 概念:"></a>Feign 概念:</h1><p>是对Ribbon的封装，调用起来更简单。</p><h2 id="代码片段的区别"><a href="#代码片段的区别" class="headerlink" title="代码片段的区别"></a>代码片段的区别</h2><ul><li>Ribbon方式：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line">RestTemplate restTemplate;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> List&lt;Product&gt; <span class="title function_">listProdcuts</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> restTemplate.getForObject(<span class="string">&quot;http://PRODUCT-DATA-SERVICE/products&quot;</span>,List.class);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>Feign方式：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@FeignClient(value = &quot;PRODUCT-DATA-SERVICE&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">ProductClientFeign</span> &#123;</span><br><span class="line"> </span><br><span class="line">    <span class="meta">@GetMapping(&quot;/products&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;Product&gt; <span class="title function_">listProdcuts</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="创建子项目-product-view-service-feign"><a href="#创建子项目-product-view-service-feign" class="headerlink" title="创建子项目 product-view-service-feign"></a>创建子项目 product-view-service-feign</h1><h2 id="pom-xml"><a href="#pom-xml" class="headerlink" title="pom.xml:"></a>pom.xml:</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.peach<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>&gt;</span>../spring-cloud-parent/pom.xml<span class="tag">&lt;/<span class="name">relativePath</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>product-view-service-feign<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-openfeign<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Feign-客户端"><a href="#Feign-客户端" class="headerlink" title="Feign 客户端:"></a>Feign 客户端:</h2><p>Feign 客户端， 通过 注解方式 访问 访问PRODUCT-DATA-SERVICE服务的 products路径， product-data-service 既不是域名也不是ip地址，而是 数据服务在 eureka 注册中心的名称。</p><p>注意: 这里只是指定了要访问的 微服务名称，但是并没有指定端口号到底是 8001, 还是 8002.</p><ul><li>Feign方式：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.peach.client;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.peach.pojo.Product;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.openfeign.FeignClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@FeignClient(value = &quot;PRODUCT-DATA-SERVICE&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">ProductClientFeign</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/products&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;Product&gt; <span class="title function_">listProdcuts</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="Java-code"><a href="#Java-code" class="headerlink" title="Java code:"></a>Java code:</h2><ul><li><p>注意：这里忽略controller、 service、 repository, html层的代码，只列出重要部分代码，如需了解详情可参阅以下地址获取代码：<a href="https://github.com/taoliu-hub/spring-cloud-angular11/tree/main/spring-cloud">https://github.com/taoliu-hub/spring-cloud-angular11/tree/main/spring-cloud</a>.</p></li><li><p>服务类: ProductServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.peach.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.peach.client.ProductClientFeign;</span><br><span class="line"><span class="keyword">import</span> cn.peach.pojo.Product;</span><br><span class="line"><span class="keyword">import</span> cn.peach.service.ProductService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ProductServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">ProductService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    ProductClientFeign productClientFeign;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;Product&gt; <span class="title function_">listProducts</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> productClientFeign.listProdcuts();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>启动类，注解多了个 @EnableFeignClients， 表示用于使用 Feign 方式。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.peach;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.netflix.eureka.EnableEurekaClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.client.discovery.EnableDiscoveryClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.openfeign.EnableFeignClients;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableEurekaClient</span></span><br><span class="line"><span class="meta">@EnableDiscoveryClient</span></span><br><span class="line"><span class="meta">@EnableFeignClients</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ProductViewServiceFeignApplication</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 推荐  8012 、 8013  或者  8014</span></span><br><span class="line">        SpringApplication.run(ProductViewServiceFeignApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="配置application-yml"><a href="#配置application-yml" class="headerlink" title="配置application.yml"></a>配置application.yml</h2><p>配置类，指定了 eureka server 的地址，以及自己的名称。 另外是一些 thymeleaf 的默认配置。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">serviceUrl:</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://localhost:8761/eureka/</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">product-view-service-feign</span></span><br><span class="line">  <span class="attr">thymeleaf:</span></span><br><span class="line">    <span class="attr">cache:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">prefix:</span> <span class="string">classpath:/templates/</span></span><br><span class="line">    <span class="attr">suffix:</span> <span class="string">.html</span></span><br><span class="line">    <span class="attr">encoding:</span> <span class="string">UTF-8</span></span><br><span class="line">    <span class="attr">content-type:</span> <span class="string">text/html</span></span><br><span class="line">    <span class="attr">mode:</span> <span class="string">HTML5</span>    </span><br></pre></td></tr></table></figure><h2 id="启动并访问注册中心Eureka"><a href="#启动并访问注册中心Eureka" class="headerlink" title="启动并访问注册中心Eureka:"></a>启动并访问注册中心Eureka:</h2><p>刷新访问：<a href="http://127.0.0.1:8761/%E3%80%82">http://127.0.0.1:8761/。</a><br><img src="/../../../assets/png/SpringCloud/%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83-%E6%B3%A8%E5%86%8C%E6%95%B0%E6%8D%AE%E5%92%8C%E8%A7%86%E5%9B%BE%E5%BE%AE%E6%9C%8D%E5%8A%A1Feign.png" alt="注册中心-注册数据和视图微服务"></p><h2 id="启动并访问视图微服务product-view-service-feign"><a href="#启动并访问视图微服务product-view-service-feign" class="headerlink" title="启动并访问视图微服务product-view-service-feign:"></a>启动并访问视图微服务product-view-service-feign:</h2><p>刷新访问：<a href="http://127.0.0.1:8012/products%E3%80%82">http://127.0.0.1:8012/products。</a><br><img src="/../../../assets/png/SpringCloud/%E8%A7%86%E5%9B%BE%E5%BE%AE%E6%9C%8D%E5%8A%A1Feign.png" alt="视图微服务"></p><h2 id="调用图："><a href="#调用图：" class="headerlink" title="调用图："></a>调用图：</h2><p>如图所示：</p><ul><li>首先数据微服务和视图微服务都被 eureka 管理起来了。</li><li>数据服务是由两个实例的集群组成的，端口分别是 8001 ， 8002</li><li>视图微服务通过 注册中心调用微服务， 然后负载均衡到 8001 或者 8002 端口的应用上。<br><img src="/../../../assets/png/SpringCloud/%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83-%E6%95%B0%E6%8D%AE-%E8%A7%86%E5%9B%BE-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E8%B0%83%E7%94%A8%E5%85%B3%E7%B3%BB.png" alt="微服务调用关系"></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Feign-概念&quot;&gt;&lt;a href=&quot;#Feign-概念&quot; class=&quot;headerlink&quot; title=&quot;Feign 概念:&quot;&gt;&lt;/a&gt;Feign 概念:&lt;/h1&gt;&lt;p&gt;是对Ribbon的封装，调用起来更简单。&lt;/p&gt;
&lt;h2 id=&quot;代码片段的区别&quot;&gt;&lt;a</summary>
      
    
    
    
    <category term="Cloud" scheme="http://example.com/categories/Cloud/"/>
    
    <category term="SpringCloud" scheme="http://example.com/categories/Cloud/SpringCloud/"/>
    
    
  </entry>
  
  <entry>
    <title>SpringCloud系列4-视图微服务-RIBBON</title>
    <link href="http://example.com/blog/Cloud/SpringCloud/SpringCloud%E7%B3%BB%E5%88%974-%E8%A7%86%E5%9B%BE%E5%BE%AE%E6%9C%8D%E5%8A%A1-RIBBON/"/>
    <id>http://example.com/blog/Cloud/SpringCloud/SpringCloud%E7%B3%BB%E5%88%974-%E8%A7%86%E5%9B%BE%E5%BE%AE%E6%9C%8D%E5%8A%A1-RIBBON/</id>
    <published>2021-10-06T06:08:20.000Z</published>
    <updated>2022-06-23T03:12:16.531Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Ribbon-概念"><a href="#Ribbon-概念" class="headerlink" title="Ribbon 概念"></a>Ribbon 概念</h1><p>访问前面注册好的数据微服务, springcloud 提供了两种方式:</p><ul><li>Ribbon: 是使用 restTemplate 进行调用，并进行客户端负载均衡。</li><li>Feign: 是对 Ribbon的封装，调用起来更简单。</li></ul><p>什么是客户端负载均衡:<br><code>在前面注册数据微服务里，注册了8001和8002两个微服务， Ribbon会从注册中心获知这个信息，然后由 Ribbon 这个客户端自己决定是调用哪个，这个就叫做客户端负载均衡。</code></p><h1 id="创建子项目-product-view-service-ribbon"><a href="#创建子项目-product-view-service-ribbon" class="headerlink" title="创建子项目: product-view-service-ribbon"></a>创建子项目: product-view-service-ribbon</h1><h2 id="pom-xml"><a href="#pom-xml" class="headerlink" title="pom.xml"></a>pom.xml</h2><p>包含以下jar:</p><ul><li>spring-cloud-starter-netflix-eureka-client: eureka 客户端</li><li>spring-boot-starter-web： springmvc</li><li>spring-boot-starter-thymeleaf： thymeleaf 做服务端渲染，(前后端分离项目不用配置)。</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.peach<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>&gt;</span>../spring-cloud-parent/pom.xml<span class="tag">&lt;/<span class="name">relativePath</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>product-view-service-ribbon<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>product-view-service-ribbon<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Ribbon-客户端"><a href="#Ribbon-客户端" class="headerlink" title="Ribbon 客户端"></a>Ribbon 客户端</h2><p>Ribbon客户端: 通过restTemplate 访问 <a href="http://product-data-service/products,%E8%80%8C">http://PRODUCT-DATA-SERVICE/products,而</a> product-data-service既不是域名也不是ip地址，而是数据服务在eureka 注册中心的名称.</p><p>注意: 这里只是指定了要访问的 微服务名称，但是并没有指定端口号到底是8001, 还是8002.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.peach.client;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.peach.pojo.Product;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.client.RestTemplate;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ProductClientRibbon</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    RestTemplate restTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> List&lt;Product&gt; <span class="title function_">listProdcuts</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> restTemplate.getForObject(<span class="string">&quot;http://PRODUCT-DATA-SERVICE/products&quot;</span>,List.class);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Java-code"><a href="#Java-code" class="headerlink" title="Java code:"></a>Java code:</h2><ul><li><p>注意：这里忽略controller、 service、 repository, html层的代码，只列出重要部分代码，如需了解详情可参阅以下地址获取代码：<a href="https://github.com/taoliu-hub/spring-cloud-angular11/tree/main/spring-cloud">https://github.com/taoliu-hub/spring-cloud-angular11/tree/main/spring-cloud</a>.</p></li><li><p>服务类: ProductServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.peach.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.peach.client.ProductClientRibbon;</span><br><span class="line"><span class="keyword">import</span> cn.peach.pojo.Product;</span><br><span class="line"><span class="keyword">import</span> cn.peach.service.ProductService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ProductServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">ProductService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    ProductClientRibbon productClientRibbon;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;Product&gt; <span class="title function_">listProducts</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> productClientRibbon.listProdcuts();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>启动类，注解多了个 @EnableDiscoveryClient，表示用于发现eureka 注册中心的微服务, </p></li><li><p>启动类，多了个 RestTemplate，就表示用 restTemplate 这个工具来做负载均衡,</p></li><li><p>考虑到要做集群。 自己输入端口，推荐 80010，8002，8003.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.netflix.eureka.EnableEurekaClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.client.discovery.EnableDiscoveryClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.client.loadbalancer.LoadBalanced;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.client.RestTemplate;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableEurekaClient</span></span><br><span class="line"><span class="meta">@EnableDiscoveryClient</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ProductViewServiceRibbonApplication</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">( String[] args )</span> &#123;</span><br><span class="line">        SpringApplication.run(ProductDataServiceApplication.class, args);</span><br><span class="line">    &#125; </span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="meta">@LoadBalanced</span></span><br><span class="line">    RestTemplate <span class="title function_">restTemplate</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">RestTemplate</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="配置application-yml"><a href="#配置application-yml" class="headerlink" title="配置application.yml"></a>配置application.yml</h2><p>配置类，指定了 eureka server 的地址，以及自己的名称。 另外是一些 thymeleaf 的默认配置。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">serviceUrl:</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://localhost:8761/eureka/</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">product-view-service-ribbon</span></span><br><span class="line">  <span class="attr">thymeleaf:</span></span><br><span class="line">    <span class="attr">cache:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">prefix:</span> <span class="string">classpath:/templates/</span></span><br><span class="line">    <span class="attr">suffix:</span> <span class="string">.html</span></span><br><span class="line">    <span class="attr">encoding:</span> <span class="string">UTF-8</span></span><br><span class="line">    <span class="attr">content-type:</span> <span class="string">text/html</span></span><br><span class="line">    <span class="attr">mode:</span> <span class="string">HTML5</span>  </span><br></pre></td></tr></table></figure></li></ul><h2 id="启动并访问注册中心Eureka"><a href="#启动并访问注册中心Eureka" class="headerlink" title="启动并访问注册中心Eureka:"></a>启动并访问注册中心Eureka:</h2><p>刷新访问：<a href="http://127.0.0.1:8761/%E3%80%82">http://127.0.0.1:8761/。</a><br><img src="/../../../assets/png/SpringCloud/%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83-%E6%B3%A8%E5%86%8C%E6%95%B0%E6%8D%AE%E5%92%8C%E8%A7%86%E5%9B%BE%E5%BE%AE%E6%9C%8D%E5%8A%A1.png" alt="注册中心-注册数据和视图微服务"></p><h2 id="启动并访问视图微服务product-view-service-ribbon"><a href="#启动并访问视图微服务product-view-service-ribbon" class="headerlink" title="启动并访问视图微服务product-view-service-ribbon:"></a>启动并访问视图微服务product-view-service-ribbon:</h2><p>刷新访问：<a href="http://127.0.0.1:8010/products%E3%80%82">http://127.0.0.1:8010/products。</a><br><img src="/../../../assets/png/SpringCloud/%E8%A7%86%E5%9B%BE%E5%BE%AE%E6%9C%8D%E5%8A%A1.png" alt="视图微服务"></p><h2 id="调用图："><a href="#调用图：" class="headerlink" title="调用图："></a>调用图：</h2><p>如图所示：</p><ul><li>首先数据微服务和视图微服务都被 eureka 管理起来了。</li><li>数据服务是由两个实例的集群组成的，端口分别是 8001 ， 8002</li><li>视图微服务通过 注册中心调用微服务， 然后负载均衡到 8001 或者 8002 端口的应用上。<br><img src="/../../../assets/png/SpringCloud/%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83-%E6%95%B0%E6%8D%AE-%E8%A7%86%E5%9B%BE-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E8%B0%83%E7%94%A8%E5%85%B3%E7%B3%BB.png" alt="微服务调用关系"></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Ribbon-概念&quot;&gt;&lt;a href=&quot;#Ribbon-概念&quot; class=&quot;headerlink&quot; title=&quot;Ribbon 概念&quot;&gt;&lt;/a&gt;Ribbon 概念&lt;/h1&gt;&lt;p&gt;访问前面注册好的数据微服务, springcloud 提供了两种方式:&lt;/p&gt;
&lt;u</summary>
      
    
    
    
    <category term="Cloud" scheme="http://example.com/categories/Cloud/"/>
    
    <category term="SpringCloud" scheme="http://example.com/categories/Cloud/SpringCloud/"/>
    
    
  </entry>
  
  <entry>
    <title>SpringCloud系列3-注册数据微服务</title>
    <link href="http://example.com/blog/Cloud/SpringCloud/SpringCloud%E7%B3%BB%E5%88%973-%E6%B3%A8%E5%86%8C%E6%95%B0%E6%8D%AE%E5%BE%AE%E6%9C%8D%E5%8A%A1/"/>
    <id>http://example.com/blog/Cloud/SpringCloud/SpringCloud%E7%B3%BB%E5%88%973-%E6%B3%A8%E5%86%8C%E6%95%B0%E6%8D%AE%E5%BE%AE%E6%9C%8D%E5%8A%A1/</id>
    <published>2021-10-06T05:08:20.000Z</published>
    <updated>2022-06-23T03:10:02.754Z</updated>
    
    <content type="html"><![CDATA[<h1 id="创建子项目-product-data-service"><a href="#创建子项目-product-data-service" class="headerlink" title="创建子项目: product-data-service"></a>创建子项目: product-data-service</h1><p>注意：若前面父子(聚合)项目创建了数据微服务，可直接更新此微服务。<br>修改 pom.xml 为如下：</p><ul><li>spring-cloud-starter-netflix-eureka-client 表示这是个 eureka 客户端。</li><li>spring-boot-starter-web: 表示这是个web服务，会提供控制层<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.peach<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>&gt;</span>../spring-cloud-parent/pom.xml<span class="tag">&lt;/<span class="name">relativePath</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>product-data-service<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>product-data-service<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="启动类ProductDataServiceApplication"><a href="#启动类ProductDataServiceApplication" class="headerlink" title="启动类ProductDataServiceApplication"></a>启动类ProductDataServiceApplication</h1><ul><li>启动类， 考虑到要做集群。 自己输入端口，推荐 8001，8002，8003.</li><li>注意：这里忽略controller、 service、 repository, html层的代码，只列出重要部分代码，如需了解详情可参阅以下地址获取代码：<a href="https://github.com/taoliu-hub/spring-cloud-angular11/tree/main/spring-cloud">https://github.com/taoliu-hub/spring-cloud-angular11/tree/main/spring-cloud</a>.</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.peach;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.netflix.eureka.EnableEurekaClient;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableEurekaClient</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ProductDataServiceApplication</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">( String[] args )</span></span><br><span class="line">    &#123;</span><br><span class="line">        SpringApplication.run(ProductDataServiceApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="配置application-yml"><a href="#配置application-yml" class="headerlink" title="配置application.yml"></a>配置application.yml</h1><ul><li>设置微服务的名称： product-data-service</li><li>设置注册中心的地址： <a href="http://localhost:8761/eureka/">http://localhost:8761/eureka/</a>, 与eureka-server中的配置 application.yml一致。</li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#   server:</span></span><br><span class="line"><span class="comment">#   port: 因为会启动多个 product-data-service, 所以端口号由用户自动设置，推荐 8001,8002,8003</span></span><br><span class="line"> </span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">product-data-service</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">serviceUrl:</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://localhost:8761/eureka/</span></span><br></pre></td></tr></table></figure><h2 id="启动并访问注册中心Eureka"><a href="#启动并访问注册中心Eureka" class="headerlink" title="启动并访问注册中心Eureka:"></a>启动并访问注册中心Eureka:</h2><p>刷新访问：<a href="http://127.0.0.1:8761/%E3%80%82">http://127.0.0.1:8761/。</a><br><img src="/../../../assets/png/SpringCloud/%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83-%E6%B3%A8%E5%86%8C%E6%95%B0%E6%8D%AE%E5%BE%AE%E6%9C%8D%E5%8A%A1.png" alt="注册中心-注册数据微服务"></p><h2 id="补充-上图红色信息-："><a href="#补充-上图红色信息-：" class="headerlink" title="补充(上图红色信息)："></a>补充(上图红色信息)：</h2><ul><li><span style="color: red">EMERGENCY! EUREKA MAY BE INCORRECTLY CLAIMING INSTANCES ARE UP WHEN THEY’RE NOT. RENEWALS ARE LESSER THAN THRESHOLD AND HENCE THE INSTANCES ARE NOT BEING EXPIRED JUST TO BE SAFE.</span></li><li>上面这句话意思是，Eureka可能会声明已经不存在的实例。刷新数小于阈值时，为了安全起见不会剔除过期实例。</li><li>Eureka的默认阈值为：85%</li><li>比如目前有10个微服务，只有8个有心跳反应时，（8&#x2F;10&#x3D;80%&lt;85%）Eureka就会开启保护机制，过期的实例不会立马剔除。并且出这个紧急警告，在搭建Eureka Server时，比如我们搭建了2个Eureka Server，并且禁止自注册，Eureka Server自身算一个服务，那么其中任意一个Eureka，只能获得一个心跳，1&#x2F;2&#x3D;50%。那么也会出现这个警告。</li><li>当不想有这个红色警告是，本机自测可以关闭Eureka保护配置。生产环境下不要关。<br>在application.yml文件中配置：<figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">enable-self-preservation:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;创建子项目-product-data-service&quot;&gt;&lt;a href=&quot;#创建子项目-product-data-service&quot; class=&quot;headerlink&quot; title=&quot;创建子项目: product-data-service&quot;&gt;&lt;/a&gt;创建子项目: </summary>
      
    
    
    
    <category term="Cloud" scheme="http://example.com/categories/Cloud/"/>
    
    <category term="SpringCloud" scheme="http://example.com/categories/Cloud/SpringCloud/"/>
    
    
  </entry>
  
  <entry>
    <title>SpringCloud系列2-服务注册中心</title>
    <link href="http://example.com/blog/Cloud/SpringCloud/SpringCloud%E7%B3%BB%E5%88%972-%E6%9C%8D%E5%8A%A1%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83/"/>
    <id>http://example.com/blog/Cloud/SpringCloud/SpringCloud%E7%B3%BB%E5%88%972-%E6%9C%8D%E5%8A%A1%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83/</id>
    <published>2021-10-06T04:08:20.000Z</published>
    <updated>2022-06-23T03:09:16.297Z</updated>
    
    <content type="html"><![CDATA[<h1 id="创建子项目-eureka-server"><a href="#创建子项目-eureka-server" class="headerlink" title="创建子项目: eureka-server"></a>创建子项目: eureka-server</h1><p>pom.xml ，增加 spring-cloud-starter-netflix-eureka-server jar 包</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.peach<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>&gt;</span>../spring-cloud-parent/pom.xml<span class="tag">&lt;/<span class="name">relativePath</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>eureka-server<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>eureka-server<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-server<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="启动类-EurekaServerApplication"><a href="#启动类-EurekaServerApplication" class="headerlink" title="启动类: EurekaServerApplication"></a>启动类: EurekaServerApplication</h1><ul><li>EurekaServer，它扮演的角色是注册中心，用于注册各种微服务，以便于其他微服务找到和访问。</li><li>EurekaServer 本身就是个 Springboot 微服务, 所以它有 @SpringBootApplication 注解。</li><li>@EnableEurekaServer 表示这是个 EurekaServer 。<br>完整代码：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.peach;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.hutool.core.util.NetUtil;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.builder.SpringApplicationBuilder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.netflix.eureka.server.EnableEurekaServer;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableEurekaServer</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">EurekaServerApplication</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//8761 这个端口是默认的，就不要修改了，后面的子项目，都会访问这个端口。</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">port</span> <span class="operator">=</span> <span class="number">8761</span>;</span><br><span class="line">        <span class="keyword">if</span>(!NetUtil.isUsableLocalPort(port)) &#123;</span><br><span class="line">            System.err.printf(<span class="string">&quot;端口%d被占用了，无法启动%n&quot;</span>, port );</span><br><span class="line">            System.exit(<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">SpringApplicationBuilder</span>(EurekaServerApplication.class).properties(<span class="string">&quot;server.port=&quot;</span> + port).run(args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="配置application-yml"><a href="#配置application-yml" class="headerlink" title="配置application.yml"></a>配置application.yml</h1><ul><li>设置微服务的名称： eureka-server</li><li>hostname: localhost 表示主机名称。</li><li>registerWithEureka：false. 表示是否注册到服务器。 因为它本身就是服务器，所以就无需把自己注册到服务器了。</li><li>fetchRegistry: false. 表示是否获取服务器的注册信息，和上面同理，这里也设置为 false。</li><li>defaultZone： http:&#x2F;&#x2F;${eureka.instance.hostname}:${server.port}&#x2F;eureka&#x2F; 自己作为服务器，公布出来的地址。 比如后续某个微服务要把自己注册到 eureka server, 那么就要使用这个地址： <a href="http://localhost:8761/eureka/">http://localhost:8761/eureka/</a></li><li><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">instance:</span></span><br><span class="line">    <span class="attr">hostname:</span> <span class="string">localhost</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">registerWithEureka:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">fetchRegistry:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">serviceUrl:</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://$&#123;eureka.instance.hostname&#125;:$&#123;server.port&#125;/eureka/</span></span><br><span class="line"> </span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">eureka-server</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="启动并访问注册中心Eureka"><a href="#启动并访问注册中心Eureka" class="headerlink" title="启动并访问注册中心Eureka:"></a>启动并访问注册中心Eureka:</h2><p>运行 EurekaServerApplication，并访问：<a href="http://127.0.0.1:8761/%EF%BC%8C%E9%BB%98%E8%AE%A4%E7%AB%AF%E5%8F%A3%E5%8F%B7%E4%B8%BA%EF%BC%9A8761%E3%80%82">http://127.0.0.1:8761/，默认端口号为：8761。</a><br><img src="/../../../assets/png/SpringCloud/%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83%E9%BB%98%E8%AE%A4%E5%90%AF%E5%8A%A8.png" alt="注册中心默认启动"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;创建子项目-eureka-server&quot;&gt;&lt;a href=&quot;#创建子项目-eureka-server&quot; class=&quot;headerlink&quot; title=&quot;创建子项目: eureka-server&quot;&gt;&lt;/a&gt;创建子项目: eureka-server&lt;/h1&gt;&lt;p&gt;</summary>
      
    
    
    
    <category term="Cloud" scheme="http://example.com/categories/Cloud/"/>
    
    <category term="SpringCloud" scheme="http://example.com/categories/Cloud/SpringCloud/"/>
    
    
  </entry>
  
  <entry>
    <title>SpringCloud系列1-父子(聚合)项目</title>
    <link href="http://example.com/blog/Cloud/SpringCloud/SpringCloud%E7%B3%BB%E5%88%971-%E7%88%B6%E5%AD%90(%E8%81%9A%E5%90%88)%E9%A1%B9%E7%9B%AE/"/>
    <id>http://example.com/blog/Cloud/SpringCloud/SpringCloud%E7%B3%BB%E5%88%971-%E7%88%B6%E5%AD%90(%E8%81%9A%E5%90%88)%E9%A1%B9%E7%9B%AE/</id>
    <published>2021-10-06T03:08:20.000Z</published>
    <updated>2022-06-23T03:08:56.154Z</updated>
    
    <content type="html"><![CDATA[<h1 id="SpringCloud代码结构"><a href="#SpringCloud代码结构" class="headerlink" title="SpringCloud代码结构"></a>SpringCloud代码结构</h1><p><img src="/../../../assets/png/SpringCloud/SpringCloud%E4%BB%A3%E7%A0%81%E7%BB%93%E6%9E%84.png" alt="SpringCloud代码结构" title="SpringCloud代码结构"></p><h1 id="创建父项目-spring-cloud-parent"><a href="#创建父项目-spring-cloud-parent" class="headerlink" title="创建父项目: spring-cloud-parent"></a>创建父项目: spring-cloud-parent</h1><p>修改pom：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">packaging</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br></pre></td></tr></table></figure><p>注意： 父项目只有pom.xml文件， packaging值为pom.</p><p>完整代码：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">packaging</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span>  <span class="comment">&lt;!-- 踩坑:版本不对会导致Feign连接不上，亲测其它版本, 2.3.3.RELEASE version. --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.peach<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>spring-cloud-parent<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">description</span>&gt;</span>spring-cloud-parent project for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.reporting.outputEncoding</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">spring-cloud.version</span>&gt;</span>Finchley.SR2<span class="tag">&lt;/<span class="name">spring-cloud.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring-cloud.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="创建子项目-product-data-service"><a href="#创建子项目-product-data-service" class="headerlink" title="创建子项目: product-data-service"></a>创建子项目: product-data-service</h1><p>修改pom：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.peach<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">relativePath</span>&gt;</span>../spring-cloud-parent/pom.xml<span class="tag">&lt;/<span class="name">relativePath</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>product-data-service<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>product-data-service<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;SpringCloud代码结构&quot;&gt;&lt;a href=&quot;#SpringCloud代码结构&quot; class=&quot;headerlink&quot; title=&quot;SpringCloud代码结构&quot;&gt;&lt;/a&gt;SpringCloud代码结构&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;/../../.</summary>
      
    
    
    
    <category term="Cloud" scheme="http://example.com/categories/Cloud/"/>
    
    <category term="SpringCloud" scheme="http://example.com/categories/Cloud/SpringCloud/"/>
    
    
  </entry>
  
  <entry>
    <title>JAVA数据结构和算法</title>
    <link href="http://example.com/blog/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E7%AE%97%E6%B3%95/JAVA%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E7%AE%97%E6%B3%95/"/>
    <id>http://example.com/blog/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E7%AE%97%E6%B3%95/JAVA%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E7%AE%97%E6%B3%95/</id>
    <published>2021-10-06T02:08:20.000Z</published>
    <updated>2022-06-23T03:52:36.656Z</updated>
    
    <content type="html"><![CDATA[<h1 id="JAVA数据结构和算法："><a href="#JAVA数据结构和算法：" class="headerlink" title="JAVA数据结构和算法："></a>JAVA数据结构和算法：</h1><hr><p><code>数据结构分类：线性结构和非线性结构：</code></p><h1 id="问题一："><a href="#问题一：" class="headerlink" title="问题一："></a>问题一：</h1><p><code>什么是线性和非线性；</code></p><p>个人的理解是：数据结构中线性结构指的是数据元素之间存在着“一对一”的线性关系的数据结构；<br>线性结构包括：数组，链表，队列，栈；<br>非线性结构包括：树，图，表；</p><p>详解：<br>一.线性结构</p><p>1.数组<br>特点：我们都知道数组中的元素在内存中连续存储的，可以根据是下标快速访问元素，因此，查询速度很快，然而插入和删除时，需要对元素移动空间，比较慢。<br>数组使用场景：频繁查询，很少增加和删除的情况。</p><p>2.链表<br>特点：元素可以不连续内存中，是以索引将数据联系起来的，当查询元素的时候需要从头开始查询，所以效率比较低，然而添加和删除的只需要修改索引就可以了<br>链表使用场景：少查询，需要频繁的插入或删除情况</p><p>3.队列<br>特点：先进先出，<br>队列使用场景：多线程阻塞队列管理非常有用</p><p>4.栈<br>特点：先进后出，就像一个箱子，<br>栈使用场景：实现递归以及表示式</p><p>5.数组与链表的区别<br>数组连续，链表不连续（从数据存储形式来说）<br>数组内存静态分配，链表动态分配<br>数组查询复杂度O(1)，链表查询复杂度O(n)<br>数组添加或删除，复杂度O(n),链表添加删除，复杂度O(1)<br>数组从栈中分配内存。链表从堆中分配内存。</p><p><code>补充：时间复杂度O(1), O(n), O(logn), O(nlogn)指什么 </code><br>  描述算法复杂度时,常用o(1), o(n), o(logn), o(nlogn)表示对应算法的时间复杂度，是算法的时空复杂度的表示。不仅仅用于表示时间复杂度，也用于表示空间复杂度。<br>O后面的括号中有一个函数，指明某个算法的耗时&#x2F;耗空间与数据增长量之间的关系。其中的n代表输入数据的量。</p><blockquote><p>O(1)：<br>  是最低的时空复杂度了，代表耗时&#x2F;耗空间与输入数据大小无关，无论输入数据增大多少倍，耗时&#x2F;耗空间都不变。 <code>哈希算法</code>就是典型的O(1)时间复杂度，无论数据规模多大，都可以在一次计算后找到目标（不考虑冲突的话）</p></blockquote><blockquote><p> O(n)：<br> 代表数据量增大几倍，耗时也增大几倍。比如常见的<code>遍历算法</code>。</p></blockquote><blockquote><p>O(n^2)：<br>  代表数据量增大n倍时，耗时增大n的平方倍，这是比线性更高的时间复杂度。比如<code>冒泡排序</code>，就是典型的O(n^2)的算法，对n个数排序，需要扫描n×n次。</p></blockquote><blockquote><p>O(logn)：<br>  代表当数据增大n倍时，耗时增大logn倍（这里的log是以2为底的，比如，当数据增大256倍时，耗时只增大8倍，是比线性还要低的时间复杂度）。<code>二分查找</code>就是O(logn)的算法，每找一次排除一半的可能，256个数据中查找只要找8次就可以找到目标。</p></blockquote><blockquote><p>O(nlogn)：<br>  代表n乘以logn，当数据增大256倍时，耗时增大256*8&#x3D;2048倍。这个复杂度高于线性低于平方。<code>归并排序</code>就是O(nlogn)的时间复杂度。</p></blockquote><hr><h1 id="问题二："><a href="#问题二：" class="headerlink" title="问题二："></a>问题二：</h1><p>c1）插入排序（直接插入排序、希尔排序） </p><blockquote><p>2）交换排序（冒泡排序、快速排序）<br>3）选择排序（直接选择排序、堆排序）<br>4）归并排序<br>5）分配排序（基数排序）<br><code>特点:</code><br>所需辅助空间最多：归并排序<br>所需辅助空间最少：堆排序<br>平均速度最快：快速排序<br>不稳定：快速排序，希尔排序，堆排序</p></blockquote><ul><li>直接插入排序<blockquote><p>基本思想：在要排序的一组数中，假设前面(n-1)[n&gt;&#x3D;2] 个数已经是排好顺序的，现在要把第n 个数插到前面的有序数中，使得这 n个数也是排好顺序的。如此反复循环，直到全部排好顺序</p></blockquote></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment">     * 插入排序法 </span></span><br><span class="line"><span class="comment">     *  </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> datas </span></span><br><span class="line"><span class="comment">     */</span>  </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span>[] sortInsert(<span class="type">int</span>[] datas) &#123;  </span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; datas.length; i++) &#123;  </span><br><span class="line">            <span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> i - <span class="number">1</span>;  </span><br><span class="line">            AlgorithmUtil.temp = datas[i];  </span><br><span class="line">            <span class="keyword">for</span> (; j &gt;= <span class="number">0</span> &amp;&amp; AlgorithmUtil.temp &lt; datas[j]; j--) &#123;  </span><br><span class="line">                datas[j + <span class="number">1</span>] = datas[j];  </span><br><span class="line">            &#125;  </span><br><span class="line">            datas[j + <span class="number">1</span>] = AlgorithmUtil.temp;  </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="keyword">return</span> datas;  </span><br><span class="line">    &#125;  </span><br></pre></td></tr></table></figure><ul><li>简单选择排序 <blockquote><p>基本思想：在要排序的一组数中，选出最小的一个数与第一个位置的数交换；然后在剩下的数当中再找最小的与第二个位置的数交换，如此循环到倒数第二个数和最后一个数比较为止。</p></blockquote></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment">    * 选择排序 </span></span><br><span class="line"><span class="comment">    *  </span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span> </span></span><br><span class="line"><span class="comment">    */</span>  </span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span>[] sortSelect(<span class="type">int</span>[] datas) &#123;  </span><br><span class="line">       <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; datas.length; i++) &#123;  </span><br><span class="line">           <span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> i;  </span><br><span class="line">           <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> i + <span class="number">1</span>; j &lt; datas.length; j++) &#123;  </span><br><span class="line">               <span class="keyword">if</span> (datas[j] &lt; datas[index])  </span><br><span class="line">                   index = j;  </span><br><span class="line">           &#125;  </span><br><span class="line">           <span class="keyword">if</span> (i != index)  </span><br><span class="line">               AlgorithmUtil.swap(datas, i, index);  </span><br><span class="line">       &#125;  </span><br><span class="line">       <span class="keyword">return</span> datas;  </span><br><span class="line">   &#125;  </span><br></pre></td></tr></table></figure><ul><li>冒泡排序<blockquote><p>基本思想：在要排序的一组数中，对当前还未排好序的范围内的全部数，自上而下对相邻的两个数依次进行比较和调整，让较大的数往下沉，较小的往上冒。即：每当两相邻的数比较后发现它们的排序与排序要求相反时，就将它们互换。</p></blockquote></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment">     * 冒泡排序 </span></span><br><span class="line"><span class="comment">     *  </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> </span></span><br><span class="line"><span class="comment">     */</span>  </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span>[] sortBubble(<span class="type">int</span>[] datas) &#123;  </span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; datas.length - <span class="number">1</span>; i++) &#123;  </span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; datas.length - <span class="number">1</span> - i; j++) &#123;  </span><br><span class="line">                <span class="keyword">if</span> (datas[j] &gt; datas[j + <span class="number">1</span>])  </span><br><span class="line">                    AlgorithmUtil.swap(datas, j, j + <span class="number">1</span>);  </span><br><span class="line">            &#125;  </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="keyword">return</span> datas;  </span><br><span class="line">    &#125;  </span><br></pre></td></tr></table></figure><ul><li>快速排序<blockquote><p>基本思想：选择一个基准元素,通常选择第一个元素或者最后一个元素,通过一趟扫描，将待排序列分成两部分,一部分比基准元素小,一部分大于等于基准元素,此时基准元素在其排好序后的正确位置,然后再用同样的方法递归地排序划分的两部分。</p></blockquote></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment">     * 快速排序；分割数组 </span></span><br><span class="line"><span class="comment">     *  </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> datas </span></span><br><span class="line"><span class="comment">     */</span>  </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">QuickPartition</span><span class="params">(<span class="type">int</span>[] datas, <span class="type">int</span> left, <span class="type">int</span> right)</span> &#123;  </span><br><span class="line">        <span class="type">int</span> <span class="variable">pivot</span> <span class="operator">=</span> datas[left];  </span><br><span class="line">        <span class="keyword">while</span> (left &lt; right) &#123;  </span><br><span class="line">            <span class="keyword">while</span> (left &lt; right &amp;&amp; datas[right] &gt;= pivot)  </span><br><span class="line">                --right;  </span><br><span class="line">            datas[left] = datas[right]; <span class="comment">// 将比枢轴小的元素移到低端，此时right位相当于空，等待低位比pivotkey大的数补上  </span></span><br><span class="line">            <span class="keyword">while</span> (left &lt; right &amp;&amp; datas[left] &lt;= pivot)  </span><br><span class="line">                ++left;  </span><br><span class="line">            datas[right] = datas[left]; <span class="comment">// 将比枢轴大的元素移到高端，此时left位相当于空，等待高位比pivotkey小的数补上  </span></span><br><span class="line">        &#125;  </span><br><span class="line">        datas[left] = pivot; <span class="comment">// 当left == right，完成一趟快速排序，此时left位相当于空，等待pivotkey补上  </span></span><br><span class="line">        <span class="keyword">return</span> left;  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">/** </span></span><br><span class="line"><span class="comment">     * 快速排序；递归返回数组 </span></span><br><span class="line"><span class="comment">     *  </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> datas </span></span><br><span class="line"><span class="comment">     */</span>  </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span>[] sortQuick(<span class="type">int</span>[] datas, <span class="type">int</span> left, <span class="type">int</span> right) &#123;  </span><br><span class="line">        <span class="keyword">if</span> (left &lt; right) &#123;  </span><br><span class="line">            <span class="type">int</span> <span class="variable">data</span> <span class="operator">=</span> QuickPartition(datas, left, right);  </span><br><span class="line">            sortQuick(datas, left, data - <span class="number">1</span>);  </span><br><span class="line">            sortQuick(datas, data + <span class="number">1</span>, right);  </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="keyword">return</span> datas;  </span><br><span class="line">    &#125;  </span><br></pre></td></tr></table></figure><ul><li>1.冒泡算法，2.选择算法，3.快速算法。4.插入算法，5.希尔算法，6.堆算法<blockquote><p>基本思想：在要排序的一组数中，选出最小的一个数与第一个位置的数交换；然后在剩下的数当中再找最小的与第二个位置的数交换，如此循环到倒数第二个数和最后一个数比较为止。</p></blockquote></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AlgorithmUtil</span> &#123;  </span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> temp,index = <span class="number">0</span>;  </span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * 临时值交换 </span></span><br><span class="line"><span class="comment"> *  </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> datas </span></span><br><span class="line"><span class="comment"> *            数组 </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> i </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> j </span></span><br><span class="line"><span class="comment"> */</span>  </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">swap</span><span class="params">(<span class="type">int</span>[] datas, <span class="type">int</span> i, <span class="type">int</span> j)</span> &#123;  </span><br><span class="line">    temp = datas[i];  </span><br><span class="line">    datas[i] = datas[j];  </span><br><span class="line">    datas[j] = temp;  </span><br><span class="line">&#125;  </span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * 扩充数组长度 </span></span><br><span class="line"><span class="comment"> *  </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> datas </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> value </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> </span></span><br><span class="line"><span class="comment"> */</span>  </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span>[] expandArray(<span class="type">int</span>[] datas, <span class="type">int</span> value) &#123;  </span><br><span class="line">    <span class="keyword">if</span> (datas.length &lt;= index) &#123;  </span><br><span class="line">        <span class="type">int</span>[] arrays = <span class="keyword">new</span> <span class="title class_">int</span>[datas.length * <span class="number">2</span>];  </span><br><span class="line">        System.arraycopy(datas, <span class="number">0</span>, arrays, <span class="number">0</span>, datas.length);  </span><br><span class="line">        datas = arrays;  </span><br><span class="line">    &#125;  </span><br><span class="line">    datas[index] = value;  </span><br><span class="line">    index++;  </span><br><span class="line">    <span class="keyword">return</span> datas;  </span><br><span class="line">&#125;  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;JAVA数据结构和算法：&quot;&gt;&lt;a href=&quot;#JAVA数据结构和算法：&quot; class=&quot;headerlink&quot; title=&quot;JAVA数据结构和算法：&quot;&gt;&lt;/a&gt;JAVA数据结构和算法：&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;&lt;code&gt;数据结构分类：线性结构和非线性结构：&lt;</summary>
      
    
    
    
    <category term="数据结构和算法" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="JAVA数据结构和算法" scheme="http://example.com/tags/JAVA%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
</feed>
